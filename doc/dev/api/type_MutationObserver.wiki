<<code language="ocaml" | sig
  class type mutationObserverInit =
    object
      method attributeFilter :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.js_array Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.writeonly_prop
      method attributeOldValue : bool Js_of_ocaml__.Js.writeonly_prop
      method attributes : bool Js_of_ocaml__.Js.writeonly_prop
      method characterData : bool Js_of_ocaml__.Js.writeonly_prop
      method characterDataOldValue : bool Js_of_ocaml__.Js.writeonly_prop
      method childList : bool Js_of_ocaml__.Js.writeonly_prop
      method subtree : bool Js_of_ocaml__.Js.writeonly_prop
    end
  class type mutationRecord =
    object
      method _type :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.readonly_prop
      method addedNodes :
        Js_of_ocaml__.Dom.node Js_of_ocaml__.Dom.nodeList Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.readonly_prop
      method attributeName :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t Js_of_ocaml__.Js.opt
        Js_of_ocaml__.Js.readonly_prop
      method attributeNamespace :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t Js_of_ocaml__.Js.opt
        Js_of_ocaml__.Js.readonly_prop
      method nextSibling :
        Js_of_ocaml__.Dom.node Js_of_ocaml__.Js.t Js_of_ocaml__.Js.opt
        Js_of_ocaml__.Js.readonly_prop
      method oldValue :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t Js_of_ocaml__.Js.opt
        Js_of_ocaml__.Js.readonly_prop
      method previousSibling :
        Js_of_ocaml__.Dom.node Js_of_ocaml__.Js.t Js_of_ocaml__.Js.opt
        Js_of_ocaml__.Js.readonly_prop
      method removedNodes :
        Js_of_ocaml__.Dom.node Js_of_ocaml__.Dom.nodeList Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.readonly_prop
      method target :
        Js_of_ocaml__.Dom.node Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.readonly_prop
    end
  class type mutationObserver =
    object
      method disconnect : unit Js_of_ocaml__.Js.meth
      method observe :
        #Js_of_ocaml__.Dom.node Js_of_ocaml__.Js.t ->
        MutationObserver.mutationObserverInit Js_of_ocaml__.Js.t ->
        unit Js_of_ocaml__.Js.meth
      method takeRecords :
        MutationObserver.mutationRecord Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.js_array Js_of_ocaml__.Js.t Js_of_ocaml__.Js.meth
    end
  val empty_mutation_observer_init :
    unit -> MutationObserver.mutationObserverInit Js_of_ocaml__.Js.t
  val mutationObserver :
    ((MutationObserver.mutationRecord Js_of_ocaml__.Js.t
      Js_of_ocaml__.Js.js_array Js_of_ocaml__.Js.t ->
      MutationObserver.mutationObserver Js_of_ocaml__.Js.t -> unit)
     Js_of_ocaml__.Js.callback ->
     MutationObserver.mutationObserver Js_of_ocaml__.Js.t)
    Js_of_ocaml__.Js.constr
  val is_supported : unit -> bool
  val observe :
    node:#Js_of_ocaml__.Dom.node Js_of_ocaml__.Js.t ->
    f:(MutationObserver.mutationRecord Js_of_ocaml__.Js.t
       Js_of_ocaml__.Js.js_array Js_of_ocaml__.Js.t ->
       MutationObserver.mutationObserver Js_of_ocaml__.Js.t -> unit) ->
    ?child_list:bool ->
    ?attributes:bool ->
    ?character_data:bool ->
    ?subtree:bool ->
    ?attribute_old_value:bool ->
    ?character_data_old_value:bool ->
    ?attribute_filter:Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t list ->
    unit -> MutationObserver.mutationObserver Js_of_ocaml__.Js.t
end >>