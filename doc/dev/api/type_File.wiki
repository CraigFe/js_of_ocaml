<<code language="ocaml" | sig
  class type blob =
    object
      method _type :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.readonly_prop
      method size : int Js_of_ocaml__.Js.readonly_prop
      method slice :
        int -> int -> File.blob Js_of_ocaml__.Js.t Js_of_ocaml__.Js.meth
      method slice_withContentType :
        int ->
        int ->
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t ->
        File.blob Js_of_ocaml__.Js.t Js_of_ocaml__.Js.meth
    end
  type 'a make_blob =
      ?contentType:string ->
      ?endings:[ `Native | `Transparent ] ->
      'a -> File.blob Js_of_ocaml__.Js.t
  val blob_from_string : string File.make_blob
  val blob_from_any :
    [ `arrayBuffer of
        Js_of_ocaml__.Typed_array.arrayBuffer Js_of_ocaml__.Js.t
    | `arrayBufferView of
        Js_of_ocaml__.Typed_array.arrayBufferView Js_of_ocaml__.Js.t
    | `blob of File.blob Js_of_ocaml__.Js.t
    | `js_string of Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t
    | `string of string ] list File.make_blob
  class type file =
    object
      method _type :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.readonly_prop
      method lastModifiedDate :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.readonly_prop
      method name :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.readonly_prop
      method size : int Js_of_ocaml__.Js.readonly_prop
      method slice :
        int -> int -> blob Js_of_ocaml__.Js.t Js_of_ocaml__.Js.meth
      method slice_withContentType :
        int ->
        int ->
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t ->
        blob Js_of_ocaml__.Js.t Js_of_ocaml__.Js.meth
    end
  type file_any
  module CoerceTo :
    sig
      val document :
        File.file_any ->
        Js_of_ocaml__.Dom.element Js_of_ocaml__.Dom.document
        Js_of_ocaml__.Js.t Js_of_ocaml__.Js.Opt.t
      val blob :
        File.file_any -> #File.blob Js_of_ocaml__.Js.t Js_of_ocaml__.Js.Opt.t
      val json : File.file_any -> 'a Js_of_ocaml__.Js.Opt.t
      val string :
        File.file_any ->
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t Js_of_ocaml__.Js.Opt.t
      val arrayBuffer :
        File.file_any ->
        Js_of_ocaml__.Typed_array.arrayBuffer Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.Opt.t
    end
  class type fileList =
    object
      method item :
        int ->
        file Js_of_ocaml__.Js.t Js_of_ocaml__.Js.opt Js_of_ocaml__.Js.meth
      method length : int Js_of_ocaml__.Js.readonly_prop
    end
  class type fileError =
    object method code : int Js_of_ocaml__.Js.readonly_prop end
  class type ['a] progressEvent =
    object
      method _type :
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t
        Js_of_ocaml__.Js.readonly_prop
      method currentTarget :
        'a Js_of_ocaml__.Js.t Js_of_ocaml__.Js.opt
        Js_of_ocaml__.Js.readonly_prop
      method lengthComputable :
        bool Js_of_ocaml__.Js.t Js_of_ocaml__.Js.readonly_prop
      method loaded : int Js_of_ocaml__.Js.readonly_prop
      method srcElement :
        'a Js_of_ocaml__.Js.t Js_of_ocaml__.Js.opt
        Js_of_ocaml__.Js.readonly_prop
      method target :
        'a Js_of_ocaml__.Js.t Js_of_ocaml__.Js.opt
        Js_of_ocaml__.Js.readonly_prop
      method total : int Js_of_ocaml__.Js.readonly_prop
    end
  class type progressEventTarget =
    object ('a)
      method onabort :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onerror :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onload :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onloadend :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onloadstart :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onprogress :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
    end
  type readyState = EMPTY | LOADING | DONE
  class type fileReader =
    object ('a)
      method abort : unit Js_of_ocaml__.Js.meth
      method error :
        File.fileError Js_of_ocaml__.Js.t Js_of_ocaml__.Js.readonly_prop
      method onabort :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onerror :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onload :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onloadend :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onloadstart :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method onprogress :
        ('a Js_of_ocaml__.Js.t, 'a File.progressEvent Js_of_ocaml__.Js.t)
        Js_of_ocaml__.Dom.event_listener Js_of_ocaml__.Js.writeonly_prop
      method readAsArrayBuffer :
        #File.blob Js_of_ocaml__.Js.t -> unit Js_of_ocaml__.Js.meth
      method readAsBinaryString :
        #File.blob Js_of_ocaml__.Js.t -> unit Js_of_ocaml__.Js.meth
      method readAsDataURL :
        #File.blob Js_of_ocaml__.Js.t -> unit Js_of_ocaml__.Js.meth
      method readAsText :
        #File.blob Js_of_ocaml__.Js.t -> unit Js_of_ocaml__.Js.meth
      method readAsText_withEncoding :
        #File.blob Js_of_ocaml__.Js.t ->
        Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t ->
        unit Js_of_ocaml__.Js.meth
      method readyState : File.readyState Js_of_ocaml__.Js.readonly_prop
      method result : File.file_any Js_of_ocaml__.Js.readonly_prop
    end
  module ReaderEvent :
    sig
      type typ =
          File.fileReader File.progressEvent Js_of_ocaml__.Js.t
          Js_of_ocaml__.Dom.Event.typ
      val loadstart : File.ReaderEvent.typ
      val progress : File.ReaderEvent.typ
      val abort : File.ReaderEvent.typ
      val error : File.ReaderEvent.typ
      val load : File.ReaderEvent.typ
      val loadend : File.ReaderEvent.typ
    end
  val filename :
    File.file Js_of_ocaml__.Js.t ->
    Js_of_ocaml__.Js.js_string Js_of_ocaml__.Js.t
  val fileReader : File.fileReader Js_of_ocaml__.Js.t Js_of_ocaml__.Js.constr
  val addEventListener :
    (#File.progressEventTarget as 'a) Js_of_ocaml__.Js.t ->
    'b Js_of_ocaml__.Dom.Event.typ ->
    ('a Js_of_ocaml__.Js.t, 'b) Js_of_ocaml__.Dom.event_listener ->
    bool Js_of_ocaml__.Js.t -> Js_of_ocaml__.Dom.event_listener_id
end >>