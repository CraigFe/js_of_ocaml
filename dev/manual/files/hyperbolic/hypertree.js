// Generated by js_of_ocaml 3.4.0+git-dd9f9d139
(function(joo_global_object)
   {"use strict";
    var JSON=joo_global_object.JSON;
    if(typeof JSON !== "object")JSON = {};
    (function()
       {"use strict";
        var
         rx_one=/^[\],:{}\s]*$/,
         rx_two=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
         rx_three=
          /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
         rx_four=/(?:^|:|,)(?:\s*\[)+/g,
         rx_escapable=
          /[\\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
         rx_dangerous=
          /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
        function f(n){return n < 10?"0" + n:n}
        function this_value(){return this.valueOf()}
        if(typeof Date.prototype.toJSON !== "function")
         {Date.prototype.toJSON
          =
          function()
           {return isFinite(this.valueOf())
                    ?this.getUTCFullYear()
                     +
                     "-"
                     +
                     f(this.getUTCMonth() + 1)
                     +
                     "-"
                     +
                     f(this.getUTCDate())
                     +
                     "T"
                     +
                     f(this.getUTCHours())
                     +
                     ":"
                     +
                     f(this.getUTCMinutes())
                     +
                     ":"
                     +
                     f(this.getUTCSeconds())
                     +
                     "Z"
                    :null};
          Boolean.prototype.toJSON = this_value;
          Number.prototype.toJSON = this_value;
          String.prototype.toJSON = this_value}
        var gap,indent,meta,rep;
        function quote(string)
         {rx_escapable.lastIndex = 0;
          return rx_escapable.test(string)
                  ?'"'
                   +
                   string.replace
                    (rx_escapable,
                     function(a)
                      {var c=meta[a];
                       return typeof c === "string"
                               ?c
                               :"\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(- 4)})
                   +
                   '"'
                  :'"' + string + '"'}
        function str(key,holder)
         {var i,k,v,length,mind=gap,partial,value=holder[key];
          if
           (value
            &&
            typeof value
            ===
            "object"
            &&
            typeof value.toJSON
            ===
            "function")
           value = value.toJSON(key);
          if(typeof rep === "function")value = rep.call(holder,key,value);
          switch(typeof value)
           {case "string":return quote(value);
            case "number":return isFinite(value)?String(value):"null";
            case "boolean":
            case "null":return String(value);
            case "object":
             if(! value)return "null";
             gap += indent;
             partial = [];
             if(Object.prototype.toString.apply(value) === "[object Array]")
              {length = value.length;
               for(i = 0;i < length;i += 1)
                partial[i] = str(i,value) || "null";
               v
               =
               partial.length === 0
                ?"[]"
                :gap
                  ?"[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]"
                  :"[" + partial.join(",") + "]";
               gap = mind;
               return v}
             if(rep && typeof rep === "object")
              {length = rep.length;
               for(i = 0;i < length;i += 1)
                if(typeof rep[i] === "string")
                 {k = rep[i];
                  v = str(k,value);
                  if(v)partial.push(quote(k) + (gap?": ":":") + v)}}
             else
              for(k in value)
               if(Object.prototype.hasOwnProperty.call(value,k))
                {v = str(k,value);
                 if(v)partial.push(quote(k) + (gap?": ":":") + v)}
             v
             =
             partial.length === 0
              ?"{}"
              :gap
                ?"{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}"
                :"{" + partial.join(",") + "}";
             gap = mind;
             return v
            }}
        if(typeof JSON.stringify !== "function")
         {meta
          =
          {"\b":"\\b",
           "\t":"\\t",
           "\n":"\\n",
           "\f":"\\f",
           "\r":"\\r",
           '"':'\\"',
           "\\":"\\\\"};
          JSON.stringify
          =
          function(value,replacer,space)
           {var i;
            gap = "";
            indent = "";
            if(typeof space === "number")
             for(i = 0;i < space;i += 1)indent += " ";
            else
             if(typeof space === "string")indent = space;
            rep = replacer;
            if
             (replacer
              &&
              typeof replacer
              !==
              "function"
              &&
              (typeof replacer
               !==
               "object"
               ||
               typeof replacer.length
               !==
               "number"))
             throw new Error("JSON.stringify");
            return str("",{"":value})}}
        if(typeof JSON.parse !== "function")
         JSON.parse
         =
         function(text,reviver)
          {var j;
           function walk(holder,key)
            {var k,v,value=holder[key];
             if(value && typeof value === "object")
              for(k in value)
               if(Object.prototype.hasOwnProperty.call(value,k))
                {v = walk(value,k);
                 if(v !== undefined)value[k] = v;else delete value[k]}
             return reviver.call(holder,key,value)}
           text = String(text);
           rx_dangerous.lastIndex = 0;
           if(rx_dangerous.test(text))
            text
            =
            text.replace
             (rx_dangerous,
              function(a)
               {return "\\u"
                       +
                       ("0000" + a.charCodeAt(0).toString(16)).slice(- 4)});
           if
            (rx_one.test
              (text.replace(rx_two,"@").replace(rx_three,"]").replace
                (rx_four,"")))
            {j = eval("(" + text + ")");
             return typeof reviver === "function"?walk({"":j},""):j}
           throw new SyntaxError("JSON.parse")}}
      ());
    function caml_array_blit(a1,i1,a2,i2,len)
     {if(i2 <= i1)
       for(var j=1;j <= len;j++)a2[i2 + j] = a1[i1 + j];
      else
       for(var j=len;j >= 1;j--)a2[i2 + j] = a1[i1 + j];
      return 0}
    function caml_array_concat(l)
     {var a=[0];
      while(l !== 0)
       {var b=l[1];for(var i=1;i < b.length;i++)a.push(b[i]);l = l[2]}
      return a}
    function caml_raise_with_arg(tag,arg){throw [0,tag,arg]}
    function caml_str_repeat(n,s)
     {if(s.repeat)return s.repeat(n);
      var r="",l=0;
      if(n == 0)return r;
      for(;;)
       {if(n & 1)r += s;
        n >>= 1;
        if(n == 0)return r;
        s += s;
        l++;
        if(l == 9)s.slice(0,1)}}
    function raw_array_sub(a,i,l)
     {var b=new Array(l);for(var j=0;j < l;j++)b[j] = a[i + j];return b}
    function caml_subarray_to_string(a,i,len)
     {var f=String.fromCharCode;
      if(i == 0 && len <= 4096 && len == a.length)return f.apply(null,a);
      var s="";
      for(;0 < len;i += 1024,len -= 1024)
       s += f.apply(null,raw_array_sub(a,i,Math.min(len,1024)));
      return s}
    function caml_convert_string_to_bytes(s)
     {if(s.t == 2)
       s.c += caml_str_repeat(s.l - s.c.length,"\0");
      else
       s.c = caml_subarray_to_string(s.c,0,s.c.length);
      s.t = 0}
    function caml_is_ascii(s)
     {if(s.length < 24)
       {for(var i=0;i < s.length;i++)if(s.charCodeAt(i) > 127)return false;
        return true}
      else
       return ! /[^\x00-\x7f]/.test(s)}
    function caml_utf16_of_utf8(s)
     {for(var b="",t="",c,c1,c2,v,i=0,l=s.length;i < l;i++)
       {c1 = s.charCodeAt(i);
        if(c1 < 0x80)
         {for(var j=i + 1;j < l && (c1 = s.charCodeAt(j)) < 0x80;j++);
          if(j - i > 512)
           {t.substr(0,1);b += t;t = "";b += s.slice(i,j)}
          else
           t += s.slice(i,j);
          if(j == l)break;
          i = j}
        v = 1;
        if(++i < l && ((c2 = s.charCodeAt(i)) & - 64) == 128)
         {c = c2 + (c1 << 6);
          if(c1 < 0xe0)
           {v = c - 0x3080;if(v < 0x80)v = 1}
          else
           {v = 2;
            if(++i < l && ((c2 = s.charCodeAt(i)) & - 64) == 128)
             {c = c2 + (c << 6);
              if(c1 < 0xf0)
               {v = c - 0xe2080;
                if(v < 0x800 || v >= 0xd7ff && v < 0xe000)v = 2}
              else
               {v = 3;
                if
                 (++i
                  <
                  l
                  &&
                  ((c2 = s.charCodeAt(i)) & - 64)
                  ==
                  128
                  &&
                  c1
                  <
                  0xf5)
                 {v = c2 - 0x3c82080 + (c << 6);
                  if(v < 0x10000 || v > 0x10ffff)v = 3}}}}}
        if(v < 4)
         {i -= v;t += "\ufffd"}
        else
         if(v > 0xffff)
          t += String.fromCharCode(0xd7c0 + (v >> 10),0xdc00 + (v & 0x3FF));
         else
          t += String.fromCharCode(v);
        if(t.length > 1024){t.substr(0,1);b += t;t = ""}}
      return b + t}
    function caml_to_js_string(s)
     {switch(s.t)
       {case 9:return s.c;
        default:caml_convert_string_to_bytes(s);case 0:
         if(caml_is_ascii(s.c)){s.t = 9;return s.c}s.t = 8;
        case 8:return caml_utf16_of_utf8(s.c)
        }}
    function MlBytes(tag,contents,length)
     {this.t = tag;this.c = contents;this.l = length}
    MlBytes.prototype.toString = function(){return caml_to_js_string(this)};
    MlBytes.prototype.slice
    =
    function()
     {var content=this.t == 4?this.c.slice():this.c;
      return new MlBytes(this.t,content,this.l)};
    function caml_new_string(s){return new MlBytes(0,s,s.length)}
    function caml_raise_with_string(tag,msg)
     {caml_raise_with_arg(tag,caml_new_string(msg))}
    var caml_global_data=[0];
    function caml_invalid_argument(msg)
     {caml_raise_with_string(caml_global_data.Invalid_argument,msg)}
    function caml_array_bound_error()
     {caml_invalid_argument("index out of bounds")}
    function caml_array_set(array,index,newval)
     {if(index < 0 || index >= array.length - 1)caml_array_bound_error();
      array[index + 1] = newval;
      return 0}
    function caml_array_sub(a,i,len)
     {var a2=new Array(len + 1);
      a2[0] = 0;
      for(var i2=1,i1=i + 1;i2 <= len;i2++,i1++)a2[i2] = a[i1];
      return a2}
    function caml_convert_string_to_array(s)
     {if(joo_global_object.Uint8Array)
       var a=new (joo_global_object.Uint8Array)(s.l);
      else
       var a=new Array(s.l);
      var b=s.c,l=b.length,i=0;
      for(;i < l;i++)a[i] = b.charCodeAt(i);
      for(l = s.l;i < l;i++)a[i] = 0;
      s.c = a;
      s.t = 4;
      return a}
    function caml_blit_bytes(s1,i1,s2,i2,len)
     {if(len == 0)return 0;
      if(i2 == 0 && (len >= s2.l || s2.t == 2 && len >= s2.c.length))
       {s2.c
        =
        s1.t == 4
         ?caml_subarray_to_string(s1.c,i1,len)
         :i1 == 0 && s1.c.length == len?s1.c:s1.c.substr(i1,len);
        s2.t = s2.c.length == s2.l?0:2}
      else
       if(s2.t == 2 && i2 == s2.c.length)
        {s2.c
         +=
         s1.t == 4
          ?caml_subarray_to_string(s1.c,i1,len)
          :i1 == 0 && s1.c.length == len?s1.c:s1.c.substr(i1,len);
         s2.t = s2.c.length == s2.l?0:2}
       else
        {if(s2.t != 4)caml_convert_string_to_array(s2);
         var c1=s1.c,c2=s2.c;
         if(s1.t == 4)
          if(i2 <= i1)
           for(var i=0;i < len;i++)c2[i2 + i] = c1[i1 + i];
          else
           for(var i=len - 1;i >= 0;i--)c2[i2 + i] = c1[i1 + i];
         else
          {var l=Math.min(len,c1.length - i1);
           for(var i=0;i < l;i++)c2[i2 + i] = c1.charCodeAt(i1 + i);
           for(;i < len;i++)c2[i2 + i] = 0}}
      return 0}
    function caml_blit_string(s1,i1,s2,i2,len)
     {return caml_blit_bytes(s1,i1,s2,i2,len)}
    function caml_bytes_of_string(s){return s}
    function caml_string_bound_error()
     {caml_invalid_argument("index out of bounds")}
    function caml_bytes_unsafe_set(s,i,c)
     {c &= 0xff;
      if(s.t != 4)
       {if(i == s.c.length)
         {s.c += String.fromCharCode(c);if(i + 1 == s.l)s.t = 0;return 0}
        caml_convert_string_to_array(s)}
      s.c[i] = c;
      return 0}
    function caml_bytes_set(s,i,c)
     {if(i >>> 0 >= s.l)caml_string_bound_error();
      return caml_bytes_unsafe_set(s,i,c)}
    function caml_bytes_unsafe_get(s,i)
     {switch(s.t & 6)
       {default:if(i >= s.c.length)return 0;case 0:return s.c.charCodeAt(i);
        case 4:return s.c[i]
        }}
    function raw_array_append_one(a,x)
     {var l=a.length,b=new Array(l + 1),i=0;
      for(;i < l;i++)b[i] = a[i];
      b[i] = x;
      return b}
    function caml_call_gen(f,args)
     {if(f.fun)return caml_call_gen(f.fun,args);
      var n=f.length,argsLen=args.length,d=n - argsLen;
      if(d == 0)
       return f.apply(null,args);
      else
       if(d < 0)
        return caml_call_gen
                (f.apply(null,raw_array_sub(args,0,n)),
                 raw_array_sub(args,n,argsLen - n));
       else
        return function(x)
         {return caml_call_gen(f,raw_array_append_one(args,x))}}
    function caml_check_bound(array,index)
     {if(index >>> 0 >= array.length - 1)caml_array_bound_error();
      return array}
    function caml_classify_float(x)
     {if(isFinite(x))
       {if(Math.abs(x) >= 2.2250738585072014e-308)return 0;
        if(x != 0)return 1;
        return 2}
      return isNaN(x)?4:3}
    function caml_int64_compare(x,y)
     {var x3=x[3] << 16,y3=y[3] << 16;
      if(x3 > y3)return 1;
      if(x3 < y3)return - 1;
      if(x[2] > y[2])return 1;
      if(x[2] < y[2])return - 1;
      if(x[1] > y[1])return 1;
      if(x[1] < y[1])return - 1;
      return 0}
    function caml_int_compare(a,b)
     {if(a < b)return - 1;if(a == b)return 0;return 1}
    function caml_string_compare(s1,s2)
     {s1.t & 6 && caml_convert_string_to_bytes(s1);
      s2.t & 6 && caml_convert_string_to_bytes(s2);
      return s1.c < s2.c?- 1:s1.c > s2.c?1:0}
    function caml_compare_val(a,b,total)
     {var stack=[];
      for(;;)
       {if(! (total && a === b))
         if(a instanceof MlBytes)
          if(b instanceof MlBytes)
           {if(a !== b){var x=caml_string_compare(a,b);if(x != 0)return x}}
          else
           return 1;
         else
          if(a instanceof Array && a[0] === (a[0] | 0))
           {var ta=a[0];
            if(ta === 254)ta = 0;
            if(ta === 250)
             {a = a[1];continue}
            else
             if(b instanceof Array && b[0] === (b[0] | 0))
              {var tb=b[0];
               if(tb === 254)tb = 0;
               if(tb === 250)
                {b = b[1];continue}
               else
                if(ta != tb)
                 return ta < tb?- 1:1;
                else
                 switch(ta)
                  {case 248:
                    var x=caml_int_compare(a[2],b[2]);if(x != 0)return x;break;
                   case 251:caml_invalid_argument("equal: abstract value");
                   case 255:
                    var x=caml_int64_compare(a,b);if(x != 0)return x;break;
                   default:
                    if(a.length != b.length)return a.length < b.length?- 1:1;
                    if(a.length > 1)stack.push(a,b,1)}}
             else
              return 1}
          else
           if
            (b instanceof MlBytes
             ||
             b instanceof Array
             &&
             b[0]
             ===
             (b[0] | 0))
            return - 1;
           else
            if(typeof a != "number" && a && a.compare)
             {var cmp=a.compare(b,total);if(cmp != 0)return cmp}
            else
             if(typeof a == "function")
              caml_invalid_argument("compare: functional value");
             else
              {if(a < b)return - 1;
               if(a > b)return 1;
               if(a != b)
                {if(! total)return NaN;
                 if(a == a)return 1;
                 if(b == b)return - 1}}
        if(stack.length == 0)return 0;
        var i=stack.pop();
        b = stack.pop();
        a = stack.pop();
        if(i + 1 < a.length)stack.push(a,b,i + 1);
        a = a[i];
        b = b[i]}}
    function caml_compare(a,b){return caml_compare_val(a,b,true)}
    function caml_convert_raw_backtrace(){return [0]}
    function caml_create_bytes(len)
     {if(len < 0)caml_invalid_argument("Bytes.create");
      return new MlBytes(len?2:9,"",len)}
    function caml_failwith(msg)
     {caml_raise_with_string(caml_global_data.Failure,msg)}
    if(joo_global_object.process && joo_global_object.process.cwd)
     var caml_current_dir=joo_global_object.process.cwd().replace(/\\/g,"/");
    else
     var caml_current_dir="/static";
    if(caml_current_dir.slice(- 1) !== "/")caml_current_dir += "/";
    function caml_make_path(name)
     {name = name instanceof MlBytes?name.toString():name;
      if(name.charCodeAt(0) != 47)name = caml_current_dir + name;
      var comp=name.split("/"),ncomp=[];
      for(var i=0;i < comp.length;i++)
       switch(comp[i])
        {case "..":if(ncomp.length > 1)ncomp.pop();break;
         case ".":break;
         case "":if(ncomp.length == 0)ncomp.push("");break;
         default:ncomp.push(comp[i]);break}
      ncomp.orig = name;
      return ncomp}
    function caml_raise_sys_error(msg)
     {caml_raise_with_string(caml_global_data.Sys_error,msg)}
    function caml_raise_no_such_file(name)
     {name = name instanceof MlBytes?name.toString():name;
      caml_raise_sys_error(name + ": No such file or directory")}
    function caml_string_of_array(a){return new MlBytes(4,a,a.length)}
    function caml_bytes_get(s,i)
     {if(i >>> 0 >= s.l)caml_string_bound_error();
      return caml_bytes_unsafe_get(s,i)}
    function caml_ml_bytes_length(s){return s.l}
    function MlFile(){}
    function MlFakeFile(content){this.data = content}
    MlFakeFile.prototype = new MlFile();
    MlFakeFile.prototype.truncate
    =
    function(len)
     {var old=this.data;
      this.data = caml_create_bytes(len | 0);
      caml_blit_bytes(old,0,this.data,0,len)};
    MlFakeFile.prototype.length
    =
    function(){return caml_ml_bytes_length(this.data)};
    MlFakeFile.prototype.write
    =
    function(offset,buf,pos,len)
     {var clen=this.length();
      if(offset + len >= clen)
       {var new_str=caml_create_bytes(offset + len),old_data=this.data;
        this.data = new_str;
        caml_blit_bytes(old_data,0,this.data,0,clen)}
      caml_blit_bytes(buf,pos,this.data,offset,len);
      return 0};
    MlFakeFile.prototype.read
    =
    function(offset,buf,pos,len)
     {var clen=this.length();
      caml_blit_bytes(this.data,offset,buf,pos,len);
      return 0};
    MlFakeFile.prototype.read_one
    =
    function(offset){return caml_bytes_get(this.data,offset)};
    MlFakeFile.prototype.close = function(){};
    MlFakeFile.prototype.constructor = MlFakeFile;
    function MlFakeDevice(root,f)
     {this.content = {};this.root = root;this.lookupFun = f}
    MlFakeDevice.prototype.nm = function(name){return this.root + name};
    MlFakeDevice.prototype.lookup
    =
    function(name)
     {if(! this.content[name] && this.lookupFun)
       {var
         res=
          this.lookupFun(caml_new_string(this.root),caml_new_string(name));
        if(res !== 0)this.content[name] = new MlFakeFile(res[1])}};
    MlFakeDevice.prototype.exists
    =
    function(name)
     {if(name == "")return 1;
      var name_slash=name + "/",r=new RegExp("^" + name_slash);
      for(var n in this.content)if(n.match(r))return 1;
      this.lookup(name);
      return this.content[name]?1:0};
    MlFakeDevice.prototype.readdir
    =
    function(name)
     {var
       name_slash=name == ""?"":name + "/",
       r=new RegExp("^" + name_slash + "([^/]*)"),
       seen={},
       a=[];
      for(var n in this.content)
       {var m=n.match(r);
        if(m && ! seen[m[1]]){seen[m[1]] = true;a.push(m[1])}}
      return a};
    MlFakeDevice.prototype.is_dir
    =
    function(name)
     {var
       name_slash=name == ""?"":name + "/",
       r=new RegExp("^" + name_slash + "([^/]*)"),
       a=[];
      for(var n in this.content){var m=n.match(r);if(m)return 1}
      return 0};
    MlFakeDevice.prototype.unlink
    =
    function(name)
     {var ok=this.content[name]?true:false;
      delete this.content[name];
      return ok};
    MlFakeDevice.prototype.open
    =
    function(name,f)
     {if(f.rdonly && f.wronly)
       caml_raise_sys_error
        (this.nm(name)
         +
         " : flags Open_rdonly and Open_wronly are not compatible");
      if(f.text && f.binary)
       caml_raise_sys_error
        (this.nm(name)
         +
         " : flags Open_text and Open_binary are not compatible");
      this.lookup(name);
      if(this.content[name])
       {if(this.is_dir(name))
         caml_raise_sys_error(this.nm(name) + " : is a directory");
        if(f.create && f.excl)
         caml_raise_sys_error(this.nm(name) + " : file already exists");
        var file=this.content[name];
        if(f.truncate)file.truncate();
        return file}
      else
       if(f.create)
        {this.content[name] = new MlFakeFile(caml_create_bytes(0));
         return this.content[name]}
       else
        caml_raise_no_such_file(this.nm(name))};
    MlFakeDevice.prototype.register
    =
    function(name,content)
     {if(this.content[name])
       caml_raise_sys_error(this.nm(name) + " : file already exists");
      if(content instanceof MlBytes)
       this.content[name] = new MlFakeFile(content);
      else
       if(content instanceof Array)
        this.content[name] = new MlFakeFile(caml_string_of_array(content));
       else
        if(content.toString)
         {var mlstring=caml_new_string(content.toString());
          this.content[name] = new MlFakeFile(mlstring)}};
    MlFakeDevice.prototype.constructor = MlFakeDevice;
    function caml_array_of_string(s)
     {if(s.t != 4)caml_convert_string_to_array(s);return s.c}
    var Buffer=joo_global_object.Buffer;
    function MlNodeFile(fd){this.fs = require("fs");this.fd = fd}
    MlNodeFile.prototype = new MlFile();
    MlNodeFile.prototype.truncate
    =
    function(len){this.fs.ftruncateSync(this.fd,len | 0)};
    MlNodeFile.prototype.length
    =
    function(){return this.fs.fstatSync(this.fd).size};
    MlNodeFile.prototype.write
    =
    function(offset,buf,buf_offset,len)
     {var a=caml_array_of_string(buf);
      if(! (a instanceof joo_global_object.Uint8Array))
       a = new (joo_global_object.Uint8Array)(a);
      var buffer=Buffer.from(a);
      this.fs.writeSync(this.fd,buffer,buf_offset,len,offset);
      return 0};
    MlNodeFile.prototype.read
    =
    function(offset,buf,buf_offset,len)
     {var a=caml_array_of_string(buf);
      if(! (a instanceof joo_global_object.Uint8Array))
       a = new (joo_global_object.Uint8Array)(a);
      var buffer=Buffer.from(a);
      this.fs.readSync(this.fd,buffer,buf_offset,len,offset);
      for(var i=0;i < len;i++)
       caml_bytes_set(buf,buf_offset + i,buffer[buf_offset + i]);
      return 0};
    MlNodeFile.prototype.read_one
    =
    function(offset)
     {var a=new (joo_global_object.Uint8Array)(1),buffer=Buffer.from(a);
      this.fs.readSync(this.fd,buffer,0,1,offset);
      return buffer[0]};
    MlNodeFile.prototype.close = function(){this.fs.closeSync(this.fd)};
    MlNodeFile.prototype.constructor = MlNodeFile;
    function MlNodeDevice(root){this.fs = require("fs");this.root = root}
    MlNodeDevice.prototype.nm = function(name){return this.root + name};
    MlNodeDevice.prototype.exists
    =
    function(name){return this.fs.existsSync(this.nm(name))?1:0};
    MlNodeDevice.prototype.readdir
    =
    function(name){return this.fs.readdirSync(this.nm(name))};
    MlNodeDevice.prototype.is_dir
    =
    function(name){return this.fs.statSync(this.nm(name)).isDirectory()?1:0};
    MlNodeDevice.prototype.unlink
    =
    function(name)
     {var b=this.fs.existsSync(this.nm(name))?1:0;
      this.fs.unlinkSync(this.nm(name));
      return b};
    MlNodeDevice.prototype.open
    =
    function(name,f)
     {var consts=require("constants"),res=0;
      for(var key in f)
       switch(key)
        {case "rdonly":res |= consts.O_RDONLY;break;
         case "wronly":res |= consts.O_WRONLY;break;
         case "append":res |= consts.O_WRONLY | consts.O_APPEND;break;
         case "create":res |= consts.O_CREAT;break;
         case "truncate":res |= consts.O_TRUNC;break;
         case "excl":res |= consts.O_EXCL;break;
         case "binary":res |= consts.O_BINARY;break;
         case "text":res |= consts.O_TEXT;break;
         case "nonblock":res |= consts.O_NONBLOCK;break
         }
      var fd=this.fs.openSync(this.nm(name),res);
      return new MlNodeFile(fd)};
    MlNodeDevice.prototype.rename
    =
    function(o,n){this.fs.renameSync(this.nm(o),this.nm(n))};
    MlNodeDevice.prototype.constructor = MlNodeDevice;
    var caml_root=caml_current_dir.match(/[^\/]*\//)[0];
    function fs_node_supported()
     {return typeof joo_global_object.process
             !==
             "undefined"
             &&
             typeof joo_global_object.process.versions
             !==
             "undefined"
             &&
             typeof joo_global_object.process.versions.node
             !==
             "undefined"
             &&
             joo_global_object.process.platform
             !==
             "browser"}
    var jsoo_mount_point=[];
    if(fs_node_supported())
     jsoo_mount_point.push
      ({path:caml_root,device:new MlNodeDevice(caml_root)});
    else
     jsoo_mount_point.push
      ({path:caml_root,device:new MlFakeDevice(caml_root)});
    jsoo_mount_point.push
     ({path:caml_root + "static/",
       device:new MlFakeDevice(caml_root + "static/")});
    function resolve_fs_device(name)
     {var
       path=caml_make_path(name),
       name=path.join("/"),
       name_slash=name + "/",
       res;
      for(var i=0;i < jsoo_mount_point.length;i++)
       {var m=jsoo_mount_point[i];
        if
         (name_slash.search(m.path)
          ==
          0
          &&
          (! res || res.path.length < m.path.length))
         res
         =
         {path:m.path,
          device:m.device,
          rest:name.substring(m.path.length,name.length)}}
      return res}
    function caml_create_file(name,content)
     {var root=resolve_fs_device(name);
      if(! root.device.register)caml_failwith("cannot register file");
      root.device.register(root.rest,content);
      return 0}
    function caml_fill_bytes(s,i,l,c)
     {if(l > 0)
       if(i == 0 && (l >= s.l || s.t == 2 && l >= s.c.length))
        if(c == 0)
         {s.c = "";s.t = 2}
        else
         {s.c = caml_str_repeat(l,String.fromCharCode(c));s.t = l == s.l?0:2}
       else
        {if(s.t != 4)caml_convert_string_to_array(s);
         for(l += i;i < l;i++)s.c[i] = c}
      return 0}
    function caml_jsbytes_of_string(s)
     {if((s.t & 6) != 0)caml_convert_string_to_bytes(s);return s.c}
    function caml_parse_format(fmt)
     {fmt = caml_jsbytes_of_string(fmt);
      var len=fmt.length;
      if(len > 31)caml_invalid_argument("format_int: format too long");
      var
       f=
        {justify:"+",
         signstyle:"-",
         filler:" ",
         alternate:false,
         base:0,
         signedconv:false,
         width:0,
         uppercase:false,
         sign:1,
         prec:- 1,
         conv:"f"};
      for(var i=0;i < len;i++)
       {var c=fmt.charAt(i);
        switch(c)
         {case "-":f.justify = "-";break;
          case "+":
          case " ":f.signstyle = c;break;
          case "0":f.filler = "0";break;
          case "#":f.alternate = true;break;
          case "1":
          case "2":
          case "3":
          case "4":
          case "5":
          case "6":
          case "7":
          case "8":
          case "9":
           f.width = 0;
           while(c = fmt.charCodeAt(i) - 48,c >= 0 && c <= 9)
            {f.width = f.width * 10 + c;i++}
           i--;
           break;
          case ".":
           f.prec = 0;
           i++;
           while(c = fmt.charCodeAt(i) - 48,c >= 0 && c <= 9)
            {f.prec = f.prec * 10 + c;i++}
           i--;
          case "d":
          case "i":f.signedconv = true;
          case "u":f.base = 10;break;
          case "x":f.base = 16;break;
          case "X":f.base = 16;f.uppercase = true;break;
          case "o":f.base = 8;break;
          case "e":
          case "f":
          case "g":f.signedconv = true;f.conv = c;break;
          case "E":
          case "F":
          case "G":
           f.signedconv = true;
           f.uppercase = true;
           f.conv = c.toLowerCase();
           break
          }}
      return f}
    function caml_finish_formatting(f,rawbuffer)
     {if(f.uppercase)rawbuffer = rawbuffer.toUpperCase();
      var len=rawbuffer.length;
      if(f.signedconv && (f.sign < 0 || f.signstyle != "-"))len++;
      if(f.alternate){if(f.base == 8)len += 1;if(f.base == 16)len += 2}
      var buffer="";
      if(f.justify == "+" && f.filler == " ")
       for(var i=len;i < f.width;i++)buffer += " ";
      if(f.signedconv)
       if(f.sign < 0)
        buffer += "-";
       else
        if(f.signstyle != "-")buffer += f.signstyle;
      if(f.alternate && f.base == 8)buffer += "0";
      if(f.alternate && f.base == 16)buffer += "0x";
      if(f.justify == "+" && f.filler == "0")
       for(var i=len;i < f.width;i++)buffer += "0";
      buffer += rawbuffer;
      if(f.justify == "-")for(var i=len;i < f.width;i++)buffer += " ";
      return caml_new_string(buffer)}
    function caml_format_float(fmt,x)
     {var s,f=caml_parse_format(fmt),prec=f.prec < 0?6:f.prec;
      if(x < 0 || x == 0 && 1 / x == - Infinity){f.sign = - 1;x = - x}
      if(isNaN(x))
       {s = "nan";f.filler = " "}
      else
       if(! isFinite(x))
        {s = "inf";f.filler = " "}
       else
        switch(f.conv)
         {case "e":
           var s=x.toExponential(prec),i=s.length;
           if(s.charAt(i - 3) == "e")
            s = s.slice(0,i - 1) + "0" + s.slice(i - 1);
           break;
          case "f":s = x.toFixed(prec);break;
          case "g":
           prec = prec?prec:1;
           s = x.toExponential(prec - 1);
           var j=s.indexOf("e"),exp=+ s.slice(j + 1);
           if(exp < - 4 || x >= 1e21 || x.toFixed(0).length > prec)
            {var i=j - 1;
             while(s.charAt(i) == "0")i--;
             if(s.charAt(i) == ".")i--;
             s = s.slice(0,i + 1) + s.slice(j);
             i = s.length;
             if(s.charAt(i - 3) == "e")
              s = s.slice(0,i - 1) + "0" + s.slice(i - 1);
             break}
           else
            {var p=prec;
             if(exp < 0)
              {p -= exp + 1;s = x.toFixed(p)}
             else
              while(s = x.toFixed(p),s.length > prec + 1)p--;
             if(p)
              {var i=s.length - 1;
               while(s.charAt(i) == "0")i--;
               if(s.charAt(i) == ".")i--;
               s = s.slice(0,i + 1)}}
           break
          }
      return caml_finish_formatting(f,s)}
    function caml_format_int(fmt,i)
     {if(caml_jsbytes_of_string(fmt) == "%d")return caml_new_string("" + i);
      var f=caml_parse_format(fmt);
      if(i < 0)if(f.signedconv){f.sign = - 1;i = - i}else i >>>= 0;
      var s=i.toString(f.base);
      if(f.prec >= 0)
       {f.filler = " ";
        var n=f.prec - s.length;
        if(n > 0)s = caml_str_repeat(n,"0") + s}
      return caml_finish_formatting(f,s)}
    var caml_oo_last_id=0;
    function caml_fresh_oo_id(){return caml_oo_last_id++}
    function caml_get_exception_raw_backtrace(){return [0]}
    var caml_method_cache=[];
    function caml_get_public_method(obj,tag,cacheid)
     {var meths=obj[1],ofs=caml_method_cache[cacheid];
      if(ofs === null)
       for(var i=caml_method_cache.length;i < cacheid;i++)
        caml_method_cache[i] = 0;
      else
       if(meths[ofs] === tag)return meths[ofs - 1];
      var li=3,hi=meths[1] * 2 + 1,mi;
      while(li < hi)
       {mi = li + hi >> 1 | 1;if(tag < meths[mi + 1])hi = mi - 2;else li = mi}
      caml_method_cache[cacheid] = li + 1;
      return tag == meths[li + 1]?meths[li]:0}
    function caml_greaterequal(x,y)
     {return + (caml_compare_val(x,y,false) >= 0)}
    if(! Math.imul)
     Math.imul
     =
     function(x,y){y |= 0;return ((x >> 16) * y << 16) + (x & 0xffff) * y | 0};
    var caml_mul=Math.imul;
    function caml_hash_mix_int(h,d)
     {d = caml_mul(d,0xcc9e2d51 | 0);
      d = d << 15 | d >>> 32 - 15;
      d = caml_mul(d,0x1b873593);
      h ^= d;
      h = h << 13 | h >>> 32 - 13;
      return (h + (h << 2) | 0) + (0xe6546b64 | 0) | 0}
    function caml_hash_mix_int64(h,v)
     {var lo=v[1] | v[2] << 24,hi=v[2] >>> 8 | v[3] << 16;
      h = caml_hash_mix_int(h,lo);
      h = caml_hash_mix_int(h,hi);
      return h}
    var log2_ok=Math.log2 && Math.log2(1.1235582092889474E+307) == 1020;
    function jsoo_floor_log2(x)
     {if(log2_ok)return Math.floor(Math.log2(x));
      var i=0;
      if(x == 0)return - Infinity;
      if(x >= 1)while(x >= 2){x /= 2;i++}else while(x < 1){x *= 2;i--}
      return i}
    function caml_int64_bits_of_float(x)
     {if(! isFinite(x))
       {if(isNaN(x))return [255,1,0,0x7ff0];
        return x > 0?[255,0,0,0x7ff0]:[255,0,0,0xfff0]}
      var sign=x == 0 && 1 / x == - Infinity?0x8000:x >= 0?0:0x8000;
      if(sign)x = - x;
      var exp=jsoo_floor_log2(x) + 1023;
      if(exp <= 0)
       {exp = 0;x /= Math.pow(2,- 1026)}
      else
       {x /= Math.pow(2,exp - 1027);
        if(x < 16){x *= 2;exp -= 1}
        if(exp == 0)x /= 2}
      var k=Math.pow(2,24),r3=x | 0;
      x = (x - r3) * k;
      var r2=x | 0;
      x = (x - r2) * k;
      var r1=x | 0;
      r3 = r3 & 0xf | sign | exp << 4;
      return [255,r1,r2,r3]}
    function caml_hash_mix_float(h,v0)
     {var
       v=caml_int64_bits_of_float(v0),
       lo=v[1] | v[2] << 24,
       hi=v[2] >>> 8 | v[3] << 16;
      h = caml_hash_mix_int(h,lo);
      h = caml_hash_mix_int(h,hi);
      return h}
    function caml_hash_mix_string_arr(h,s)
     {var len=s.length,i,w;
      for(i = 0;i + 4 <= len;i += 4)
       {w = s[i] | s[i + 1] << 8 | s[i + 2] << 16 | s[i + 3] << 24;
        h = caml_hash_mix_int(h,w)}
      w = 0;
      switch(len & 3)
       {case 3:w = s[i + 2] << 16;
        case 2:w |= s[i + 1] << 8;
        case 1:w |= s[i];h = caml_hash_mix_int(h,w)
        }
      h ^= len;
      return h}
    function caml_hash_mix_string_str(h,s)
     {var len=s.length,i,w;
      for(i = 0;i + 4 <= len;i += 4)
       {w
        =
        s.charCodeAt(i)
        |
        s.charCodeAt(i + 1)
        <<
        8
        |
        s.charCodeAt(i + 2)
        <<
        16
        |
        s.charCodeAt(i + 3)
        <<
        24;
        h = caml_hash_mix_int(h,w)}
      w = 0;
      switch(len & 3)
       {case 3:w = s.charCodeAt(i + 2) << 16;
        case 2:w |= s.charCodeAt(i + 1) << 8;
        case 1:w |= s.charCodeAt(i);h = caml_hash_mix_int(h,w)
        }
      h ^= len;
      return h}
    function caml_hash_mix_string(h,v)
     {switch(v.t & 6)
       {default:caml_convert_string_to_bytes(v);case 0:
         h = caml_hash_mix_string_str(h,v.c);break;
        case 2:h = caml_hash_mix_string_arr(h,v.c)
        }
      return h}
    function caml_hash_mix_final(h)
     {h ^= h >>> 16;
      h = caml_mul(h,0x85ebca6b | 0);
      h ^= h >>> 13;
      h = caml_mul(h,0xc2b2ae35 | 0);
      h ^= h >>> 16;
      return h}
    var HASH_QUEUE_SIZE=256;
    function caml_hash(count,limit,seed,obj)
     {var queue,rd,wr,sz,num,h,v,i,len;
      sz = limit;
      if(sz < 0 || sz > HASH_QUEUE_SIZE)sz = HASH_QUEUE_SIZE;
      num = count;
      h = seed;
      queue = [obj];
      rd = 0;
      wr = 1;
      while(rd < wr && num > 0)
       {v = queue[rd++];
        if(v instanceof Array && v[0] === (v[0] | 0))
         switch(v[0])
          {case 248:h = caml_hash_mix_int(h,v[2]);num--;break;
           case 250:queue[--rd] = v[1];break;
           case 255:h = caml_hash_mix_int64(h,v);num--;break;
           default:
            var tag=v.length - 1 << 10 | v[0];
            h = caml_hash_mix_int(h,tag);
            for(i = 1,len = v.length;i < len;i++)
             {if(wr >= sz)break;queue[wr++] = v[i]}
            break}
        else
         if(v instanceof MlBytes)
          {h = caml_hash_mix_string(h,v);num--}
         else
          if(v === (v | 0))
           {h = caml_hash_mix_int(h,v + v + 1);num--}
          else
           if(v === + v)
            {h = caml_hash_mix_float(h,v);num--}
           else
            if(v && v.hash && typeof v.hash === "function")
             h = caml_hash_mix_int(h,v.hash())}
      h = caml_hash_mix_final(h);
      return h & 0x3FFFFFFF}
    function caml_int64_to_bytes(x)
     {return [x[3] >> 8,
              x[3] & 0xff,
              x[2] >> 16,
              x[2] >> 8 & 0xff,
              x[2] & 0xff,
              x[1] >> 16,
              x[1] >> 8 & 0xff,
              x[1] & 0xff]}
    function caml_hash_univ_param(count,limit,obj)
     {var hash_accu=0;
      function hash_aux(obj)
       {limit--;
        if(count < 0 || limit < 0)return;
        if(obj instanceof Array && obj[0] === (obj[0] | 0))
         switch(obj[0])
          {case 248:count--;hash_accu = hash_accu * 65599 + obj[2] | 0;break;
           case 250:limit++;hash_aux(obj);break;
           case 255:
            count--;
            hash_accu = hash_accu * 65599 + obj[1] + (obj[2] << 24) | 0;
            break;
           default:
            count--;
            hash_accu = hash_accu * 19 + obj[0] | 0;
            for(var i=obj.length - 1;i > 0;i--)hash_aux(obj[i])}
        else
         if(obj instanceof MlBytes)
          {count--;
           switch(obj.t & 6)
            {default:caml_convert_string_to_bytes(obj);case 0:
              for(var b=obj.c,l=obj.l,i=0;i < l;i++)
               hash_accu = hash_accu * 19 + b.charCodeAt(i) | 0;
              break;
             case 2:
              for(var a=obj.c,l=obj.l,i=0;i < l;i++)
               hash_accu = hash_accu * 19 + a[i] | 0
             }}
         else
          if(obj === (obj | 0))
           {count--;hash_accu = hash_accu * 65599 + obj | 0}
          else
           if(obj === + obj)
            {count--;
             var p=caml_int64_to_bytes(caml_int64_bits_of_float(obj));
             for(var i=7;i >= 0;i--)hash_accu = hash_accu * 19 + p[i] | 0}
           else
            if(obj && obj.hash && typeof obj.hash === "function")
             hash_accu = hash_accu * 65599 + obj.hash() | 0}
      hash_aux(obj);
      return hash_accu & 0x3FFFFFFF}
    function caml_utf8_of_utf16(s)
     {for(var b="",t=b,c,d,i=0,l=s.length;i < l;i++)
       {c = s.charCodeAt(i);
        if(c < 0x80)
         {for(var j=i + 1;j < l && (c = s.charCodeAt(j)) < 0x80;j++);
          if(j - i > 512)
           {t.substr(0,1);b += t;t = "";b += s.slice(i,j)}
          else
           t += s.slice(i,j);
          if(j == l)break;
          i = j}
        if(c < 0x800)
         {t += String.fromCharCode(0xc0 | c >> 6);
          t += String.fromCharCode(0x80 | c & 0x3f)}
        else
         if(c < 0xd800 || c >= 0xdfff)
          t
          +=
          String.fromCharCode
           (0xe0 | c >> 12,0x80 | c >> 6 & 0x3f,0x80 | c & 0x3f);
         else
          if
           (c
            >=
            0xdbff
            ||
            i
            +
            1
            ==
            l
            ||
            (d = s.charCodeAt(i + 1))
            <
            0xdc00
            ||
            d
            >
            0xdfff)
           t += "\xef\xbf\xbd";
          else
           {i++;
            c = (c << 10) + d - 0x35fdc00;
            t
            +=
            String.fromCharCode
             (0xf0 | c >> 18,
              0x80 | c >> 12 & 0x3f,
              0x80 | c >> 6 & 0x3f,
              0x80 | c & 0x3f)}
        if(t.length > 1024){t.substr(0,1);b += t;t = ""}}
      return b + t}
    function caml_js_to_string(s)
     {var tag=9;
      if(! caml_is_ascii(s))tag = 8,s = caml_utf8_of_utf16(s);
      return new MlBytes(tag,s,s.length)}
    function caml_hexstring_of_float(x,prec,style)
     {if(! isFinite(x))
       {if(isNaN(x))return caml_js_to_string("nan");
        return caml_js_to_string(x > 0?"infinity":"-infinity")}
      var sign=x == 0 && 1 / x == - Infinity?1:x >= 0?0:1;
      if(sign)x = - x;
      var exp=0;
      if(x == 0)
       ;
      else
       if(x < 1)
        while(x < 1 && exp > - 1022){x *= 2;exp--}
       else
        while(x >= 2){x /= 2;exp++}
      var exp_sign=exp < 0?"":"+",sign_str="";
      if(sign)
       sign_str = "-";
      else
       switch(style)
        {case 43:sign_str = "+";break;
         case 32:sign_str = " ";break;
         default:break}
      if(prec >= 0 && prec < 13)
       {var cst=Math.pow(2,prec * 4);x = Math.round(x * cst) / cst}
      var x_str=x.toString(16);
      if(prec >= 0)
       {var idx=x_str.indexOf(".");
        if(idx < 0)
         x_str += "." + caml_str_repeat(prec,"0");
        else
         {var size=idx + 1 + prec;
          if(x_str.length < size)
           x_str += caml_str_repeat(size - x_str.length,"0");
          else
           x_str = x_str.substr(0,size)}}
      return caml_js_to_string
              (sign_str + "0x" + x_str + "p" + exp_sign + exp.toString(10))}
    function caml_int64_is_zero(x){return (x[3] | x[2] | x[1]) == 0}
    function caml_int64_of_int32(x)
     {return [255,x & 0xffffff,x >> 24 & 0xffffff,x >> 31 & 0xffff]}
    function caml_obj_dup(x)
     {var l=x.length,a=new Array(l);
      for(var i=0;i < l;i++)a[i] = x[i];
      return a}
    function caml_int64_sub(x,y)
     {var
       z1=x[1] - y[1],
       z2=x[2] - y[2] + (z1 >> 24),
       z3=x[3] - y[3] + (z2 >> 24);
      return [255,z1 & 0xffffff,z2 & 0xffffff,z3 & 0xffff]}
    function caml_int64_ucompare(x,y)
     {if(x[3] > y[3])return 1;
      if(x[3] < y[3])return - 1;
      if(x[2] > y[2])return 1;
      if(x[2] < y[2])return - 1;
      if(x[1] > y[1])return 1;
      if(x[1] < y[1])return - 1;
      return 0}
    function caml_int64_lsl1(x)
     {x[3] = x[3] << 1 | x[2] >> 23;
      x[2] = (x[2] << 1 | x[1] >> 23) & 0xffffff;
      x[1] = x[1] << 1 & 0xffffff}
    function caml_int64_lsr1(x)
     {x[1] = (x[1] >>> 1 | x[2] << 23) & 0xffffff;
      x[2] = (x[2] >>> 1 | x[3] << 23) & 0xffffff;
      x[3] = x[3] >>> 1}
    function caml_int64_udivmod(x,y)
     {var
       offset=0,
       modulus=caml_obj_dup(x),
       divisor=caml_obj_dup(y),
       quotient=[255,0,0,0];
      while(caml_int64_ucompare(modulus,divisor) > 0)
       {offset++;caml_int64_lsl1(divisor)}
      while(offset >= 0)
       {offset--;
        caml_int64_lsl1(quotient);
        if(caml_int64_ucompare(modulus,divisor) >= 0)
         {quotient[1]++;modulus = caml_int64_sub(modulus,divisor)}
        caml_int64_lsr1(divisor)}
      return [0,quotient,modulus]}
    function caml_int64_to_int32(x){return x[1] | x[2] << 24}
    function caml_int64_is_negative(x){return x[3] << 16 < 0}
    function caml_int64_neg(x)
     {var y1=- x[1],y2=- x[2] + (y1 >> 24),y3=- x[3] + (y2 >> 24);
      return [255,y1 & 0xffffff,y2 & 0xffffff,y3 & 0xffff]}
    function caml_int64_format(fmt,x)
     {var f=caml_parse_format(fmt);
      if(f.signedconv && caml_int64_is_negative(x))
       {f.sign = - 1;x = caml_int64_neg(x)}
      var
       buffer="",
       wbase=caml_int64_of_int32(f.base),
       cvtbl="0123456789abcdef";
      do
       {var p=caml_int64_udivmod(x,wbase);
        x = p[1];
        buffer = cvtbl.charAt(caml_int64_to_int32(p[2])) + buffer}
      while
       (! caml_int64_is_zero(x));
      if(f.prec >= 0)
       {f.filler = " ";
        var n=f.prec - buffer.length;
        if(n > 0)buffer = caml_str_repeat(n,"0") + buffer}
      return caml_finish_formatting(f,buffer)}
    function caml_string_unsafe_get(s,i)
     {switch(s.t & 6)
       {default:if(i >= s.c.length)return 0;case 0:return s.c.charCodeAt(i);
        case 4:return s.c[i]
        }}
    function caml_ml_string_length(s){return s.l}
    function caml_parse_sign_and_base(s)
     {var i=0,len=caml_ml_string_length(s),base=10,sign=1;
      if(len > 0)
       switch(caml_string_unsafe_get(s,i))
        {case 45:i++;sign = - 1;break;case 43:i++;sign = 1;break}
      if(i + 1 < len && caml_string_unsafe_get(s,i) == 48)
       switch(caml_string_unsafe_get(s,i + 1))
        {case 120:
         case 88:base = 16;i += 2;break;
         case 111:
         case 79:base = 8;i += 2;break;
         case 98:
         case 66:base = 2;i += 2;break;
         case 117:
         case 85:sign = 0;i += 2;break
         }
      return [i,sign,base]}
    function caml_parse_digit(c)
     {if(c >= 48 && c <= 57)return c - 48;
      if(c >= 65 && c <= 90)return c - 55;
      if(c >= 97 && c <= 122)return c - 87;
      return - 1}
    function caml_int_of_string(s)
     {var
       r=caml_parse_sign_and_base(s),
       i=r[0],
       sign=r[1],
       base=r[2],
       len=caml_ml_string_length(s),
       threshold=- 1 >>> 0,
       c=i < len?caml_string_unsafe_get(s,i):0,
       d=caml_parse_digit(c);
      if(d < 0 || d >= base)caml_failwith("int_of_string");
      var res=d;
      for(i++;i < len;i++)
       {c = caml_string_unsafe_get(s,i);
        if(c == 95)continue;
        d = caml_parse_digit(c);
        if(d < 0 || d >= base)break;
        res = base * res + d;
        if(res > threshold)caml_failwith("int_of_string")}
      if(i != len)caml_failwith("int_of_string");
      res = sign * res;
      if(base == 10 && (res | 0) != res)caml_failwith("int_of_string");
      return res | 0}
    function caml_js_from_array(a){return raw_array_sub(a,1,a.length - 1)}
    function caml_js_call(f,o,args)
     {return f.apply(o,caml_js_from_array(args))}
    function caml_js_get_console()
     {var
       c=joo_global_object.console?joo_global_object.console:{},
       m=
        ["log",
         "debug",
         "info",
         "warn",
         "error",
         "assert",
         "dir",
         "dirxml",
         "trace",
         "group",
         "groupCollapsed",
         "groupEnd",
         "time",
         "timeEnd"];
      function f(){}
      for(var i=0;i < m.length;i++)if(! c[m[i]])c[m[i]] = f;
      return c}
    var caml_js_regexps={amp:/&/g,lt:/</g,quot:/\"/g,all:/[&<\"]/};
    function caml_js_html_escape(s)
     {if(! caml_js_regexps.all.test(s))return s;
      return s.replace(caml_js_regexps.amp,"&amp;").replace
               (caml_js_regexps.lt,"&lt;").replace
              (caml_js_regexps.quot,"&quot;")}
    function caml_js_on_ie()
     {var
       ua=
        joo_global_object.navigator?joo_global_object.navigator.userAgent:"";
      return ua.indexOf("MSIE") != - 1 && ua.indexOf("Opera") != 0}
    function caml_js_pure_expr(f){return f()}
    function caml_js_to_byte_string(s){return caml_new_string(s)}
    function caml_js_wrap_callback(f)
     {return function()
       {return arguments.length > 0
                ?caml_call_gen(f,arguments)
                :caml_call_gen(f,[undefined])}}
    function raw_array_cons(a,x)
     {var l=a.length,b=new Array(l + 1);
      b[0] = x;
      for(var i=1;i <= l;i++)b[i] = a[i - 1];
      return b}
    function caml_js_wrap_meth_callback(f)
     {return function()
       {return caml_call_gen(f,raw_array_cons(arguments,this))}}
    function caml_lessequal(x,y){return + (caml_compare_val(x,y,false) <= 0)}
    function caml_make_vect(len,init)
     {var len=len + 1 | 0,b=new Array(len);
      b[0] = 0;
      for(var i=1;i < len;i++)b[i] = init;
      return b}
    var
     caml_md5_string=
      function()
        {function add(x,y){return x + y | 0}
         function xx(q,a,b,x,s,t)
          {a = add(add(a,q),add(x,t));return add(a << s | a >>> 32 - s,b)}
         function ff(a,b,c,d,x,s,t){return xx(b & c | ~ b & d,a,b,x,s,t)}
         function gg(a,b,c,d,x,s,t){return xx(b & d | c & ~ d,a,b,x,s,t)}
         function hh(a,b,c,d,x,s,t){return xx(b ^ c ^ d,a,b,x,s,t)}
         function ii(a,b,c,d,x,s,t){return xx(c ^ (b | ~ d),a,b,x,s,t)}
         function md5(buffer,length)
          {var i=length;
           buffer[i >> 2] |= 0x80 << 8 * (i & 3);
           for(i = (i & ~ 0x3) + 8;(i & 0x3F) < 60;i += 4)
            buffer[(i >> 2) - 1] = 0;
           buffer[(i >> 2) - 1] = length << 3;
           buffer[i >> 2] = length >> 29 & 0x1FFFFFFF;
           var w=[0x67452301,0xEFCDAB89,0x98BADCFE,0x10325476];
           for(i = 0;i < buffer.length;i += 16)
            {var a=w[0],b=w[1],c=w[2],d=w[3];
             a = ff(a,b,c,d,buffer[i + 0],7,0xD76AA478);
             d = ff(d,a,b,c,buffer[i + 1],12,0xE8C7B756);
             c = ff(c,d,a,b,buffer[i + 2],17,0x242070DB);
             b = ff(b,c,d,a,buffer[i + 3],22,0xC1BDCEEE);
             a = ff(a,b,c,d,buffer[i + 4],7,0xF57C0FAF);
             d = ff(d,a,b,c,buffer[i + 5],12,0x4787C62A);
             c = ff(c,d,a,b,buffer[i + 6],17,0xA8304613);
             b = ff(b,c,d,a,buffer[i + 7],22,0xFD469501);
             a = ff(a,b,c,d,buffer[i + 8],7,0x698098D8);
             d = ff(d,a,b,c,buffer[i + 9],12,0x8B44F7AF);
             c = ff(c,d,a,b,buffer[i + 10],17,0xFFFF5BB1);
             b = ff(b,c,d,a,buffer[i + 11],22,0x895CD7BE);
             a = ff(a,b,c,d,buffer[i + 12],7,0x6B901122);
             d = ff(d,a,b,c,buffer[i + 13],12,0xFD987193);
             c = ff(c,d,a,b,buffer[i + 14],17,0xA679438E);
             b = ff(b,c,d,a,buffer[i + 15],22,0x49B40821);
             a = gg(a,b,c,d,buffer[i + 1],5,0xF61E2562);
             d = gg(d,a,b,c,buffer[i + 6],9,0xC040B340);
             c = gg(c,d,a,b,buffer[i + 11],14,0x265E5A51);
             b = gg(b,c,d,a,buffer[i + 0],20,0xE9B6C7AA);
             a = gg(a,b,c,d,buffer[i + 5],5,0xD62F105D);
             d = gg(d,a,b,c,buffer[i + 10],9,0x02441453);
             c = gg(c,d,a,b,buffer[i + 15],14,0xD8A1E681);
             b = gg(b,c,d,a,buffer[i + 4],20,0xE7D3FBC8);
             a = gg(a,b,c,d,buffer[i + 9],5,0x21E1CDE6);
             d = gg(d,a,b,c,buffer[i + 14],9,0xC33707D6);
             c = gg(c,d,a,b,buffer[i + 3],14,0xF4D50D87);
             b = gg(b,c,d,a,buffer[i + 8],20,0x455A14ED);
             a = gg(a,b,c,d,buffer[i + 13],5,0xA9E3E905);
             d = gg(d,a,b,c,buffer[i + 2],9,0xFCEFA3F8);
             c = gg(c,d,a,b,buffer[i + 7],14,0x676F02D9);
             b = gg(b,c,d,a,buffer[i + 12],20,0x8D2A4C8A);
             a = hh(a,b,c,d,buffer[i + 5],4,0xFFFA3942);
             d = hh(d,a,b,c,buffer[i + 8],11,0x8771F681);
             c = hh(c,d,a,b,buffer[i + 11],16,0x6D9D6122);
             b = hh(b,c,d,a,buffer[i + 14],23,0xFDE5380C);
             a = hh(a,b,c,d,buffer[i + 1],4,0xA4BEEA44);
             d = hh(d,a,b,c,buffer[i + 4],11,0x4BDECFA9);
             c = hh(c,d,a,b,buffer[i + 7],16,0xF6BB4B60);
             b = hh(b,c,d,a,buffer[i + 10],23,0xBEBFBC70);
             a = hh(a,b,c,d,buffer[i + 13],4,0x289B7EC6);
             d = hh(d,a,b,c,buffer[i + 0],11,0xEAA127FA);
             c = hh(c,d,a,b,buffer[i + 3],16,0xD4EF3085);
             b = hh(b,c,d,a,buffer[i + 6],23,0x04881D05);
             a = hh(a,b,c,d,buffer[i + 9],4,0xD9D4D039);
             d = hh(d,a,b,c,buffer[i + 12],11,0xE6DB99E5);
             c = hh(c,d,a,b,buffer[i + 15],16,0x1FA27CF8);
             b = hh(b,c,d,a,buffer[i + 2],23,0xC4AC5665);
             a = ii(a,b,c,d,buffer[i + 0],6,0xF4292244);
             d = ii(d,a,b,c,buffer[i + 7],10,0x432AFF97);
             c = ii(c,d,a,b,buffer[i + 14],15,0xAB9423A7);
             b = ii(b,c,d,a,buffer[i + 5],21,0xFC93A039);
             a = ii(a,b,c,d,buffer[i + 12],6,0x655B59C3);
             d = ii(d,a,b,c,buffer[i + 3],10,0x8F0CCC92);
             c = ii(c,d,a,b,buffer[i + 10],15,0xFFEFF47D);
             b = ii(b,c,d,a,buffer[i + 1],21,0x85845DD1);
             a = ii(a,b,c,d,buffer[i + 8],6,0x6FA87E4F);
             d = ii(d,a,b,c,buffer[i + 15],10,0xFE2CE6E0);
             c = ii(c,d,a,b,buffer[i + 6],15,0xA3014314);
             b = ii(b,c,d,a,buffer[i + 13],21,0x4E0811A1);
             a = ii(a,b,c,d,buffer[i + 4],6,0xF7537E82);
             d = ii(d,a,b,c,buffer[i + 11],10,0xBD3AF235);
             c = ii(c,d,a,b,buffer[i + 2],15,0x2AD7D2BB);
             b = ii(b,c,d,a,buffer[i + 9],21,0xEB86D391);
             w[0] = add(a,w[0]);
             w[1] = add(b,w[1]);
             w[2] = add(c,w[2]);
             w[3] = add(d,w[3])}
           var t=new Array(16);
           for(var i=0;i < 4;i++)
            for(var j=0;j < 4;j++)t[i * 4 + j] = w[i] >> 8 * j & 0xFF;
           return t}
         return function(s,ofs,len)
          {var buf=[];
           switch(s.t & 6)
            {default:caml_convert_string_to_bytes(s);case 0:
              var b=s.c;
              for(var i=0;i < len;i += 4)
               {var j=i + ofs;
                buf[i >> 2]
                =
                b.charCodeAt(j)
                |
                b.charCodeAt(j + 1)
                <<
                8
                |
                b.charCodeAt(j + 2)
                <<
                16
                |
                b.charCodeAt(j + 3)
                <<
                24}
              for(;i < len;i++)
               buf[i >> 2] |= b.charCodeAt(i + ofs) << 8 * (i & 3);
              break;
             case 4:
              var a=s.c;
              for(var i=0;i < len;i += 4)
               {var j=i + ofs;
                buf[i >> 2]
                =
                a[j]
                |
                a[j + 1]
                <<
                8
                |
                a[j + 2]
                <<
                16
                |
                a[j + 3]
                <<
                24}
              for(;i < len;i++)buf[i >> 2] |= a[i + ofs] << 8 * (i & 3)
             }
           return caml_string_of_array(md5(buf,len))}}
       (),
     caml_ml_channels=new Array();
    function caml_ml_flush(chanid)
     {var chan=caml_ml_channels[chanid];
      if(! chan.opened)caml_raise_sys_error("Cannot flush a closed channel");
      if(! chan.buffer || chan.buffer == "")return 0;
      if
       (chan.fd
        &&
        caml_global_data.fds[chan.fd]
        &&
        caml_global_data.fds[chan.fd].output)
       {var output=caml_global_data.fds[chan.fd].output;
        switch(output.length)
         {case 2:output(chanid,chan.buffer);break;default:output(chan.buffer)}}
      chan.buffer = "";
      return 0}
    function caml_std_output(chanid,s)
     {var
       chan=caml_ml_channels[chanid],
       str=caml_new_string(s),
       slen=caml_ml_string_length(str);
      chan.file.write(chan.offset,str,0,slen);
      chan.offset += slen;
      return 0}
    function js_print_stderr(s)
     {var s=caml_utf16_of_utf8(s),g=joo_global_object;
      if(g.process && g.process.stdout && g.process.stdout.write)
       g.process.stderr.write(s);
      else
       {if(s.charCodeAt(s.length - 1) == 10)s = s.substr(0,s.length - 1);
        var v=g.console;
        v && v.error && v.error(s)}}
    function js_print_stdout(s)
     {var s=caml_utf16_of_utf8(s),g=joo_global_object;
      if(g.process && g.process.stdout && g.process.stdout.write)
       g.process.stdout.write(s);
      else
       {if(s.charCodeAt(s.length - 1) == 10)s = s.substr(0,s.length - 1);
        var v=g.console;
        v && v.log && v.log(s)}}
    function caml_sys_open_internal(idx,output,file,flags)
     {if(caml_global_data.fds === undefined)
       caml_global_data.fds = new Array();
      flags = flags?flags:{};
      var info={};
      info.file = file;
      info.offset = flags.append?file.length():0;
      info.flags = flags;
      info.output = output;
      caml_global_data.fds[idx] = info;
      if(! caml_global_data.fd_last_idx || idx > caml_global_data.fd_last_idx)
       caml_global_data.fd_last_idx = idx;
      return idx}
    function caml_sys_open(name,flags,_perms)
     {var f={};
      while(flags)
       {switch(flags[1])
         {case 0:f.rdonly = 1;break;
          case 1:f.wronly = 1;break;
          case 2:f.append = 1;break;
          case 3:f.create = 1;break;
          case 4:f.truncate = 1;break;
          case 5:f.excl = 1;break;
          case 6:f.binary = 1;break;
          case 7:f.text = 1;break;
          case 8:f.nonblock = 1;break
          }
        flags = flags[2]}
      if(f.rdonly && f.wronly)
       caml_raise_sys_error
        (name.toString()
         +
         " : flags Open_rdonly and Open_wronly are not compatible");
      if(f.text && f.binary)
       caml_raise_sys_error
        (name.toString()
         +
         " : flags Open_text and Open_binary are not compatible");
      var
       root=resolve_fs_device(name),
       file=root.device.open(root.rest,f),
       idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0;
      return caml_sys_open_internal(idx + 1,caml_std_output,file,f)}
    caml_sys_open_internal
     (0,caml_std_output,new MlFakeFile(caml_create_bytes(0)));
    caml_sys_open_internal
     (1,js_print_stdout,new MlFakeFile(caml_create_bytes(0)));
    caml_sys_open_internal
     (2,js_print_stderr,new MlFakeFile(caml_create_bytes(0)));
    function caml_ml_open_descriptor_in(fd)
     {var data=caml_global_data.fds[fd];
      if(data.flags.wronly)caml_raise_sys_error("fd " + fd + " is writeonly");
      var
       channel=
        {file:data.file,
         offset:data.offset,
         fd:fd,
         opened:true,
         out:false,
         refill:null};
      caml_ml_channels[channel.fd] = channel;
      return channel.fd}
    function caml_ml_open_descriptor_out(fd)
     {var data=caml_global_data.fds[fd];
      if(data.flags.rdonly)caml_raise_sys_error("fd " + fd + " is readonly");
      var
       channel=
        {file:data.file,
         offset:data.offset,
         fd:fd,
         opened:true,
         out:true,
         buffer:""};
      caml_ml_channels[channel.fd] = channel;
      return channel.fd}
    function caml_ml_out_channels_list()
     {var l=0;
      for(var c=0;c < caml_ml_channels.length;c++)
       if
        (caml_ml_channels[c]
         &&
         caml_ml_channels[c].opened
         &&
         caml_ml_channels[c].out)
        l = [0,caml_ml_channels[c].fd,l];
      return l}
    function caml_ml_output_bytes(chanid,buffer,offset,len)
     {var chan=caml_ml_channels[chanid];
      if(! chan.opened)
       caml_raise_sys_error("Cannot output to a closed channel");
      var string;
      if(offset == 0 && caml_ml_bytes_length(buffer) == len)
       string = buffer;
      else
       {string = caml_create_bytes(len);
        caml_blit_bytes(buffer,offset,string,0,len)}
      var
       jsstring=caml_jsbytes_of_string(string),
       id=jsstring.lastIndexOf("\n");
      if(id < 0)
       chan.buffer += jsstring;
      else
       {chan.buffer += jsstring.substr(0,id + 1);
        caml_ml_flush(chanid);
        chan.buffer += jsstring.substr(id + 1)}
      return 0}
    function caml_ml_output(chanid,buffer,offset,len)
     {return caml_ml_output_bytes(chanid,buffer,offset,len)}
    function caml_ml_output_char(chanid,c)
     {var s=caml_new_string(String.fromCharCode(c));
      caml_ml_output(chanid,s,0,1);
      return 0}
    function caml_raise_constant(tag){throw tag}
    function caml_raise_zero_divide()
     {caml_raise_constant(caml_global_data.Division_by_zero)}
    function caml_mod(x,y){if(y == 0)caml_raise_zero_divide();return x % y}
    function caml_notequal(x,y){return + (caml_compare_val(x,y,false) != 0)}
    function caml_obj_block(tag,size)
     {var o=new Array(size + 1);
      o[0] = tag;
      for(var i=1;i <= size;i++)o[i] = 0;
      return o}
    function caml_obj_set_tag(x,tag){x[0] = tag;return 0}
    function caml_obj_tag(x)
     {return x instanceof Array
              ?x[0]
              :x instanceof MlBytes
                ?252
                :x instanceof joo_global_object.Function?247:1000}
    function caml_read_file_content(name)
     {var root=resolve_fs_device(name);
      if(root.device.exists(root.rest))
       {var
         file=root.device.open(root.rest,{rdonly:1}),
         len=file.length(),
         buf=caml_create_bytes(len);
        file.read(0,buf,0,len);
        return buf}
      caml_raise_no_such_file(name)}
    function caml_register_global(n,v,name_opt)
     {if(name_opt && joo_global_object.toplevelReloc)
       n = joo_global_object.toplevelReloc(name_opt);
      caml_global_data[n + 1] = v;
      if(name_opt)caml_global_data[name_opt] = v}
    var caml_named_values={};
    function caml_register_named_value(nm,v)
     {caml_named_values[caml_jsbytes_of_string(nm)] = v;return 0}
    function caml_set_oo_id(b){b[2] = caml_oo_last_id++;return b}
    function caml_string_get(s,i)
     {if(i >>> 0 >= s.l)caml_string_bound_error();
      return caml_string_unsafe_get(s,i)}
    function caml_string_equal(s1,s2)
     {if(s1 === s2)return 1;
      s1.t & 6 && caml_convert_string_to_bytes(s1);
      s2.t & 6 && caml_convert_string_to_bytes(s2);
      return s1.c == s2.c?1:0}
    function caml_string_notequal(s1,s2){return 1 - caml_string_equal(s1,s2)}
    function caml_string_of_bytes(s){return s}
    function caml_sys_const_backend_type()
     {return [0,caml_new_string("js_of_ocaml")]}
    function caml_sys_const_max_wosize(){return 0x7FFFFFFF / 4 | 0}
    function caml_sys_exit(code)
     {var g=joo_global_object;
      if(g.quit)g.quit(code);
      if(g.process && g.process.exit)g.process.exit(code);
      caml_invalid_argument("Function 'exit' not implemented")}
    var
     caml_argv=
      function()
        {var g=joo_global_object,main="a.out",args=[];
         if(g.process && g.process.argv && g.process.argv.length > 1)
          {var argv=g.process.argv;
           main = argv[1];
           args = raw_array_sub(argv,2,argv.length - 2)}
         var p=caml_js_to_string(main),args2=[0,p];
         for(var i=0;i < args.length;i++)
          args2.push(caml_js_to_string(args[i]));
         return args2}
       ();
    function caml_sys_get_argv(a){return [0,caml_argv[1],caml_argv]}
    function caml_raise_not_found()
     {caml_raise_constant(caml_global_data.Not_found)}
    function caml_sys_getenv(name)
     {var g=joo_global_object,n=name.toString();
      if(g.process && g.process.env && g.process.env[n] != undefined)
       return caml_js_to_string(g.process.env[n]);
      if
       (joo_global_object.jsoo_static_env
        &&
        joo_global_object.jsoo_static_env[n])
       return caml_js_to_string(joo_global_object.jsoo_static_env[n]);
      caml_raise_not_found()}
    function caml_sys_random_seed()
     {var now=new Date().getTime(),x=now ^ 0xffffffff * Math.random();
      return [0,x]}
    function caml_trampoline(res)
     {var c=1;
      while(res && res.joo_tramp)
       {res = res.joo_tramp.apply(null,res.joo_args);c++}
      return res}
    function caml_trampoline_return(f,args)
     {return {joo_tramp:f,joo_args:args}}
    function caml_update_dummy(x,y)
     {if(typeof y === "function"){x.fun = y;return 0}
      if(y.fun){x.fun = y.fun;return 0}
      var i=y.length;
      while(i--)x[i] = y[i];
      return 0}
    function caml_return_exn_constant(tag){return tag}
    function caml_named_value(nm){return caml_named_values[nm]}
    function caml_wrap_exception(e)
     {if(e instanceof Array)return e;
      if
       (joo_global_object.RangeError
        &&
        e instanceof joo_global_object.RangeError
        &&
        e.message
        &&
        e.message.match(/maximum call stack/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if
       (joo_global_object.InternalError
        &&
        e instanceof joo_global_object.InternalError
        &&
        e.message
        &&
        e.message.match(/too much recursion/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if(e instanceof joo_global_object.Error && caml_named_value("jsError"))
       return [0,caml_named_value("jsError"),e];
      return [0,caml_global_data.Failure,caml_js_to_string(String(e))]}
    function caml_call1(f,a0)
     {return f.length == 1?f(a0):caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length == 2?f(a0,a1):caml_call_gen(f,[a0,a1])}
    function caml_call3(f,a0,a1,a2)
     {return f.length == 3?f(a0,a1,a2):caml_call_gen(f,[a0,a1,a2])}
    function caml_call5(f,a0,a1,a2,a3,a4)
     {return f.length == 5?f(a0,a1,a2,a3,a4):caml_call_gen(f,[a0,a1,a2,a3,a4])}
    function caml_call6(f,a0,a1,a2,a3,a4,a5)
     {return f.length == 6
              ?f(a0,a1,a2,a3,a4,a5)
              :caml_call_gen(f,[a0,a1,a2,a3,a4,a5])}
    caml_create_file
     ("/static/image_info.json",
      '[0,[0,"ovibos","Ovibos_moschatus_attackierend2_.jpg","By BS Thurner Hof [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,489,[0,[0,"Ovibovini","fr",""],[0,"B\xc5\x93uf musqu\xc3\xa9","fr","B%C5%93uf_musqu%C3%A9"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Ovibos_moschatus_attackierend2_.jpg/800px-Ovibos_moschatus_attackierend2_.jpg"]],[0,"capra","Saanenziege.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5-2.0-1.0\\">CC-BY-SA-2.5-2.0-1.0</a>]",332,257,[0,[0,"Tan (goat pattern)","en","Tan_(goat_pattern)"],[0,"Saanen goat","en","Saanen_goat"],[0,"Saanen (race caprine)","fr","Saanen_(race_caprine)"],[0,"Ch\xc3\xa8vre","fr","Ch%C3%A8vre"],[0,"P\xc3\xa9lardon","fr","P%C3%A9lardon"],[0,"Rocamadour (fromage)","fr","Rocamadour_(fromage)"]],[0,"http://upload.wikimedia.org/wikipedia/commons/f/f5/Saanenziege.jpg"]],[0,"rupicapra","Rupicapra_rupicapra_0.jpg","By Andreas Tille [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,640,[0,[0,"Rupicapra","en",""],[0,"Alps","en",""],[0,"Lac du Crachet","fr","Lac_du_Crachet"],[0,"Val Trupchun","fr","Val_Trupchun"],[0,"Chamois","fr",""],[0,"Alpes","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Rupicapra_rupicapra_0.jpg/800px-Rupicapra_rupicapra_0.jpg"]],[0,"mouton","Schaf_bei_Woodhenge1.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,600,[0,[0,"Ovis","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Schaf_bei_Woodhenge1.jpg/800px-Schaf_bei_Woodhenge1.jpg"]],[0,"mouflon","Mouflon_2.jpg","<a target=\\"_blank\\" href=\\"http://en.wikipedia.org/wiki/User:Jdennett77\\">Jdennett77</a> [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.5\\">CC-BY-2.5</a>]",800,598,[0,[0,"Ovis","en",""],[0,"Mouflon","en",""],[0,"Ovina","fr",""],[0,"Ovis orientalis","fr","Ovis_orientalis"],[0,"Ovis","fr",""],[0,"Mouflon m\xc3\xa9diterran\xc3\xa9en","fr","Mouflon_m%C3%A9diterran%C3%A9en"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Mouflon_2.jpg/800px-Mouflon_2.jpg"]],[0,"connochaetes","Wildebeest_Steve_Evans.jpg","By Steve Evans from Citizen of the World (South Africa) [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.0\\">CC-BY-2.0</a>]",800,533,[0,[0,"Gnou","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/Wildebeest_Steve_Evans.jpg/800px-Wildebeest_Steve_Evans.jpg"]],[0,"oryx","Oryx_samburu.jpg","By \\"Daniel Fafard (Dreamdan)\\" (Auteur) [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,545,[0,[0,"Oryx","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/Oryx_samburu.jpg/800px-Oryx_samburu.jpg"]],[0,"aepyceros","Serengeti_Impala3.jpg","By Ikiwaner [<a target=\\"_blank\\" href =\\"http://www.gnu.org/licenses/old-licenses/fdl-1.2.html\\">GFDL 1.2</a>]",800,800,[0,[0,"Impala","en",""],[0,"Parc national de l\'\xc3\xaele Ndere","fr","Parc_national_de_l%27%C3%AEle_Ndere"],[0,"Impala","fr",""],[0,"Gazelle","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Serengeti_Impala3.jpg/800px-Serengeti_Impala3.jpg"]],[0,"bison","Bison_bison_009.jpg","By Donnie from WV, USA (VAC2010 1236\\nUploaded by berichard) [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.0\\">CC-BY-SA-2.0</a>]",800,506,[0,[0,"Bison d\'Am\xc3\xa9rique du Nord","fr","Bison_d%27Am%C3%A9rique_du_Nord"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Bison_bison_009.jpg/800px-Bison_bison_009.jpg"]],[0,"bos","Kuh_in_transkei.jpg","By Amada44 [Public domain]",800,532,[0,[0,"Afrikaner cattle","en","Afrikaner_cattle"],[0,"\xc3\x89levage bovin en Afrique du Sud","fr","%C3%89levage_bovin_en_Afrique_du_Sud"],[0,"Sanga (rameau)","fr","Sanga_(rameau)"],[0,"Afrikaner (race bovine)","fr","Afrikaner_(race_bovine)"],[0,"Bos taurus","fr","Bos_taurus"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Kuh_in_transkei.jpg/800px-Kuh_in_transkei.jpg"]],[0,"syncerus","Syncerus_caffer.jpg","By PaulRae\\nderivative work: Berichard (talk)\\n\\n (African_Buffalo.JPG) [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.5\\">CC-BY-2.5</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a>]",800,697,[0,[0,"Buffle d\'Afrique","fr","Buffle_d%27Afrique"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/2/25/Syncerus_caffer.jpg/800px-Syncerus_caffer.jpg"]],[0,"cervus","Cervus_elaphus_Luc_Viatour_6.jpg","By Lviatour [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0</a>]",800,533,[0,[0,"Cerf \xc3\xa9laphe","fr","Cerf_%C3%A9laphe"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Cervus_elaphus_Luc_Viatour_6.jpg/800px-Cervus_elaphus_Luc_Viatour_6.jpg"]],[0,"alces","Moose-Gustav.jpg","Author information on Wikimedia Commons [Attribution or <a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.5\\">CC-BY-2.5</a>]",600,450,[0,[0,"Red Marsh Nature Reserve","en","Red_Marsh_Nature_Reserve"],[0,"Wolves and moose on Isle Royale","en","Wolves_and_moose_on_Isle_Royale"],[0,"Alces alces","fr","Alces_alces"]],[0,"http://upload.wikimedia.org/wikipedia/commons/c/c9/Moose-Gustav.jpg"]],[0,"capreolus","Chevreuil_repos.jpg","By Asabengurtza [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,600,[0,[0,"Felix Salten","fr","Felix_Salten"],[0,"Chevreuil","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Chevreuil_repos.jpg/800px-Chevreuil_repos.jpg"]],[0,"okapia","Okapi2.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,695,[0,[0,"Donodon","en",""],[0,"Dorsetodon","en",""],[0,"Drescheratherium","en",""],[0,"Henkelotherium","en",""],[0,"Brancatherulum","en",""],[0,"Tragulina","en",""],[0,"Harbor seal","en","Harbor_seal"],[0,"Manzano Mountain Cottontail","en","Manzano_Mountain_Cottontail"],[0,"Mixodectidae","en",""],[0,"Robust Cottontail","en","Robust_Cottontail"],[0,"Euthlastus","en",""],[0,"Comotherium","en",""],[0,"Dryolestes","en",""],[0,"Laolestes","en",""],[0,"Miccylotyrans","en",""],[0,"Parcs nationaux congolais (RDC)","fr","Parcs_nationaux_congolais_(RDC)"],[0,"1901 en science","fr","1901_en_science"],[0,"G\xc3\xa9ographie de la R\xc3\xa9publique d\xc3\xa9mocratique du Congo","fr","G%C3%A9ographie_de_la_R%C3%A9publique_d%C3%A9mocratique_du_Congo"],[0,"Okapi","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Okapi2.jpg/800px-Okapi2.jpg"]],[0,"giraffa","Giraffa_camelopardalis_angolensis.jpg","<p>\xc2\xa9 Hans Hillewaert\xc2\xa0/\xc2\xa0<a target=\\"_blank\\" href=\\"http://creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a></p>",800,1067,[0,[0,"Giraffe","en",""],[0,"Oshikoto","fr",""],[0,"Girafe","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Giraffa_camelopardalis_angolensis.jpg/800px-Giraffa_camelopardalis_angolensis.jpg"]],[0,"hippopotamus","Hippo_pod_edit.jpg","By Paul Maritz [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,533,[0,[0,"Mammalia in the 10th edition of Systema Naturae","en","Mammalia_in_the_10th_edition_of_Systema_Naturae"],[0,"Largest organisms","en","Largest_organisms"],[0,"Wildlife of Zambia","en","Wildlife_of_Zambia"],[0,"Cetruminantia","en",""],[0,"Whippomorpha","en",""],[0,"Kasungu National Park","en","Kasungu_National_Park"],[0,"South Luangwa National Park","en","South_Luangwa_National_Park"],[0,"Democratic Republic of the Congo","en","Democratic_Republic_of_the_Congo"],[0,"Hippopotamidae","en",""],[0,"Hippopotamus","en",""],[0,"Mammif\xc3\xa8re aquatique","fr","Mammif%C3%A8re_aquatique"],[0,"Gabon","fr",""],[0,"Hippopotamus amphibius","fr","Hippopotamus_amphibius"],[0,"Hippopotamidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Hippo_pod_edit.jpg/800px-Hippo_pod_edit.jpg"]],[0,"orcinus","Killerwhales_jumping.jpg","By Pittman [Public domain]",450,313,[0,[0,"Mammals of Olympic National Park","en","Mammals_of_Olympic_National_Park"],[0,"Captive killer whales","en","Captive_killer_whales"],[0,"Life (BBC TV series)","en","Life_(BBC_TV_series)"],[0,"Flora and fauna of Greenland","en","Flora_and_fauna_of_Greenland"],[0,"Mammals of Antarctica","en","Mammals_of_Antarctica"],[0,"Bluespotted stingray","en","Bluespotted_stingray"],[0,"Cosmopolitan distribution","en","Cosmopolitan_distribution"],[0,"Megafauna","en",""],[0,"Killer whale","en","Killer_whale"],[0,"Dolphin","en",""],[0,"Orientation bibliographique en zoologie (taxinomie)","fr","Orientation_bibliographique_en_zoologie_(taxinomie)"],[0,"Superpr\xc3\xa9dateur","fr","Superpr%C3%A9dateur"],[0,"Parc national Olympique","fr","Parc_national_Olympique"],[0,"Orque","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/3/37/Killerwhales_jumping.jpg"]],[0,"phocoena","Daan_Close_Up.PNG","By AVampireTear [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",675,583,[0,[0,"Harbour porpoise","en","Harbour_porpoise"],[0,"Marsouin commun","fr","Marsouin_commun"],[0,"Phocoenidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/2/28/Daan_Close_Up.PNG"]],[0,"monodon","Narwhals_breach.jpg","By Glenn Williams (National Institute of Standards and Technology) [Public domain]",800,509,[0,[0,"Ivory trade","en","Ivory_trade"],[0,"Tusk","en",""],[0,"Narwhal","en",""],[0,"Corne de licorne","fr","Corne_de_licorne"],[0,"D\xc3\xa9fense (dent)","fr","D%C3%A9fense_(dent)"],[0,"Narval","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Narwhals_breach.jpg/800px-Narwhals_breach.jpg"]],[0,"delphinapterus","Delphinapterus_leucas_head_3.jpg","<a target=\\"_blank\\" href=\\"http://commons.wikimedia.org/wiki/User:Stan_Shebs\\">Stan Shebs</a> [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5\\">CC-BY-SA-2.5</a>]",800,573,[0,[0,"B\xc3\xa9luga (baleine)","fr","B%C3%A9luga_(baleine)"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Delphinapterus_leucas_head_3.jpg/800px-Delphinapterus_leucas_head_3.jpg"]],[0,"balaenoptera","Humpback_stellwagen_edit.jpg","By Whit Welles Wwelles14 [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/3.0\\">CC-BY-3.0</a>]",800,453,[0,[0,"Silas D. Alben","en","Silas_D._Alben"],[0,"Stellwagen Bank National Marine Sanctuary","en","Stellwagen_Bank_National_Marine_Sanctuary"],[0,"National Recording Registry","en","National_Recording_Registry"],[0,"Cetartiodactyla","en",""],[0,"Cetology","en",""],[0,"Whale surfacing behaviour","en","Whale_surfacing_behaviour"],[0,"Whale watching","en","Whale_watching"],[0,"Humpback whale","en","Humpback_whale"],[0,"Baleen whale","en","Baleen_whale"],[0,"Whale","en",""],[0,"Cetacea","en",""],[0,"Baleine \xc3\xa0 bosse","fr","Baleine_%C3%A0_bosse"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Humpback_stellwagen_edit.jpg/800px-Humpback_stellwagen_edit.jpg"]],[0,"phacochoerus","Tarangire_Warzenschwein1.jpg","By Ikiwaner [<a target=\\"_blank\\" href =\\"http://www.gnu.org/licenses/old-licenses/fdl-1.2.html\\">GFDL 1.2</a>]",800,600,[0,[0,"Warthog","en",""],[0,"Phacoch\xc3\xa8re","fr","Phacoch%C3%A8re"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/0/01/Tarangire_Warzenschwein1.jpg/800px-Tarangire_Warzenschwein1.jpg"]],[0,"sus","WildZwijn_cropped.jpg","By nl:User:GerardM (Image:WildZwijn.jpg) [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,606,[0,[0,"Sanglier","fr",""],[0,"Fenouill\xc3\xa8des","fr","Fenouill%C3%A8des"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/6/61/WildZwijn_cropped.jpg/800px-WildZwijn_cropped.jpg"]],[0,"camel","07._Camel_Profile,_near_Silverton,_NSW,_07.07.2007.jpg","By Jjron [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,985,[0,[0,"Mandora Marsh","en","Mandora_Marsh"],[0,"Australian feral camel","en","Australian_feral_camel"],[0,"Taboo food and drink","en","Taboo_food_and_drink"],[0,"Invasive species in Australia","en","Invasive_species_in_Australia"],[0,"Dromedary","en",""],[0,"Camelid","en",""],[0,"Tylopoda","en",""],[0,"Camel","en",""],[0,"Dromadaire australien","fr","Dromadaire_australien"],[0,"Dromadaire","fr",""],[0,"Camelidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/4/43/07._Camel_Profile%2C_near_Silverton%2C_NSW%2C_07.07.2007.jpg/800px-07._Camel_Profile%2C_near_Silverton%2C_NSW%2C_07.07.2007.jpg"]],[0,"lama","Lama_animal.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5\\">CC-BY-SA-2.5</a>]",800,600,[0,[0,"Lama (animal)","fr","Lama_(animal)"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Lama_animal.jpg/800px-Lama_animal.jpg"]],[0,"lutra","Loutre_des_pyrenees_baronnies_2004.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",594,394,[0,[0,"Lac Arpi","fr","Lac_Arpi"],[0,"Petite Amazonie des Pyr\xc3\xa9n\xc3\xa9es","fr","Petite_Amazonie_des_Pyr%C3%A9n%C3%A9es"],[0,"G\xc3\xa9ographie de la Charente","fr","G%C3%A9ographie_de_la_Charente"],[0,"Vis (rivi\xc3\xa8re)","fr","Vis_(rivi%C3%A8re)"],[0,"Lutra","fr",""],[0,"Loutre d\'Europe","fr","Loutre_d%27Europe"],[0,"Loutre","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/c/c3/Loutre_des_pyrenees_baronnies_2004.jpg"]],[0,"procyon","Procyon_lotor_1.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,927,[0,[0,"Procyonidae","fr",""],[0,"Am\xc3\xa9rique du Nord","fr","Am%C3%A9rique_du_Nord"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Procyon_lotor_1.jpg/800px-Procyon_lotor_1.jpg"]],[0,"simocyon","Red_Panda.JPG","By User Bernard Landgraf on de.wikipedia.org [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,534,[0,[0,"Wildlife of India","en","Wildlife_of_India"],[0,"Red panda","en","Red_panda"],[0,"Ailuridae","fr",""],[0,"Petit panda","fr","Petit_panda"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/c/c6/Red_Panda.JPG/800px-Red_Panda.JPG"]],[0,"mephitis","Striped_skunk.jpg","Author information on Wikimedia Commons [Public domain]",300,437,[0,[0,"Mammals of the Indiana Dunes","en","Mammals_of_the_Indiana_Dunes"],[0,"Mammals of New England","en","Mammals_of_New_England"],[0,"P\xc3\xa9p\xc3\xa9 le putois","fr","P%C3%A9p%C3%A9_le_putois"],[0,"Mouffette","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/6/63/Striped_skunk.jpg"]],[0,"mirounga","Mirounga_leonina_male.JPG","By B.navez (self-made (scan of paper photo)) [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,544,[0,[0,"Southern elephant seal","en","Southern_elephant_seal"],[0,"Largest organisms","en","Largest_organisms"],[0,"Elephant seal","en","Elephant_seal"],[0,"Carnivora","en",""],[0,"\xc3\x89l\xc3\xa9phant de mer du sud","fr","%C3%89l%C3%A9phant_de_mer_du_sud"],[0,"Province de Santa Cruz","fr","Province_de_Santa_Cruz"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/ed/Mirounga_leonina_male.JPG/800px-Mirounga_leonina_male.JPG"]],[0,"arctocephalus","Arctocephalus_galapagoensis2.jpg","By Kelly J. Kane [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/3.0\\">CC-BY-3.0</a>]",800,800,[0,[0,"Gal\xc3\xa1pagos Sea Lion","en","Gal%C3%A1pagos_Sea_Lion"],[0,"Arctocephalus galapagoensis","fr","Arctocephalus_galapagoensis"],[0,"Nageoire","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/Arctocephalus_galapagoensis2.jpg/800px-Arctocephalus_galapagoensis2.jpg"]],[0,"odobenus","Noaa-walrus30.jpg","Author information on Wikimedia Commons [Public domain]",700,455,[0,[0,"Odobenus","fr",""],[0,"Odobenidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/d/de/Noaa-walrus30.jpg"]],[0,"ursus","Polar_Bear_2004-11-15.jpg","By Ansgar Walk [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5\\">CC-BY-SA-2.5</a>]",800,606,[0,[0,"Nordic countries","en","Nordic_countries"],[0,"Polar seas","en","Polar_seas"],[0,"Wapusk National Park","en","Wapusk_National_Park"],[0,"Polar region","en","Polar_region"],[0,"Megafauna","en",""],[0,"Bear","en",""],[0,"Parcs nationaux du Canada","fr","Parcs_nationaux_du_Canada"],[0,"Embl\xc3\xa8mes des provinces et territoires du Canada","fr","Embl%C3%A8mes_des_provinces_et_territoires_du_Canada"],[0,"Parc national Wapusk","fr","Parc_national_Wapusk"],[0,"Ours blanc","fr","Ours_blanc"],[0,"Oc\xc3\xa9an Arctique","fr","Oc%C3%A9an_Arctique"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Polar_Bear_2004-11-15.jpg/800px-Polar_Bear_2004-11-15.jpg"]],[0,"tremarctos","Spectacled_Bear_-_Houston_Zoo.jpg","By en:User:Cburnett [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,728,[0,[0,"Ichigkat muja \xe2\x80\x93 Cordillera del Condor National Park","en","Ichigkat_muja_%E2%80%93_Cordillera_del_Condor_National_Park"],[0,"Serran\xc3\xada de los Churumbelos","en","Serran%C3%ADa_de_los_Churumbelos"],[0,"Tremarctos","en",""],[0,"Spectacled bear","en","Spectacled_bear"],[0,"Ours \xc3\xa0 lunettes","fr","Ours_%C3%A0_lunettes"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Spectacled_Bear_-_Houston_Zoo.jpg/800px-Spectacled_Bear_-_Houston_Zoo.jpg"]],[0,"ailuropoda","Grosser_Panda.JPG","By J. Patrick Fischer [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0</a>]",800,533,[0,[0,"World Wide Fund for Nature","en","World_Wide_Fund_for_Nature"],[0,"Giant panda","en","Giant_panda"],[0,"Panda g\xc3\xa9ant","fr","Panda_g%C3%A9ant"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Grosser_Panda.JPG/800px-Grosser_Panda.JPG"]],[0,"canis","Wolf._bei_Eekholt.jpg","By Volker.G [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/3.0\\">CC-BY-3.0</a>]",800,600,[0,[0,"B\xc3\xaate du G\xc3\xa9vaudan","fr","B%C3%AAte_du_G%C3%A9vaudan"],[0,"Loup","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/ee/Wolf._bei_Eekholt.jpg/800px-Wolf._bei_Eekholt.jpg"]],[0,"vulpes","R%C3%B8d_r%C3%A6v_%28Vulpes_vulpes%29.jpg","I, <a target=\\"_blank\\" href=\\"http://commons.wikimedia.org/wiki/User:Malene\\">Malene</a> [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.5\\">CC-BY-2.5</a>]",800,560,[0,[0,"Burns Inquiry","en","Burns_Inquiry"],[0,"Fox hunting","en","Fox_hunting"],[0,"Renard roux","fr","Renard_roux"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/R%C3%B8d_r%C3%A6v_%28Vulpes_vulpes%29.jpg/800px-R%C3%B8d_r%C3%A6v_%28Vulpes_vulpes%29.jpg"]],[0,"suricata","Suricata_suricatta18082009b.jpg","By Sylfred1977 [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,1198,[0,[0,"Suricate","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Suricata_suricatta18082009b.jpg/800px-Suricata_suricatta18082009b.jpg"]],[0,"parahyaena","Parahyaena_brunnea_3.jpg","By http://www.pistoleros.no (http://www.pistoleros.no) [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",300,221,[0,[0,"Hy\xc3\xa8ne brune","fr","Hy%C3%A8ne_brune"],[0,"Parahyaena","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/0/04/Parahyaena_brunnea_3.jpg"]],[0,"neofelis","Neofelis_nebulosa.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",432,252,[0,[0,"Kameng Elephant Reserve","en","Kameng_Elephant_Reserve"],[0,"Neofelis","en",""],[0,"Clouded leopard","en","Clouded_leopard"],[0,"Neofelis","fr",""],[0,"Panth\xc3\xa8re n\xc3\xa9buleuse","fr","Panth%C3%A8re_n%C3%A9buleuse"],[0,"Pardofelis","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/7/7d/Neofelis_nebulosa.jpg"]],[0,"panthera","Lion_waiting_in_Namibia.jpg","By yaaaay (Originally posted on Flickr at The King.) [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.0\\">CC-BY-2.0</a>]",800,600,[0,[0,"Lion (color)","en","Lion_(color)"],[0,"Lion","en",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Lion_waiting_in_Namibia.jpg/800px-Lion_waiting_in_Namibia.jpg"]],[0,"felis","WhiteCat.jpg","By Icebooter at en.wikipedia Later versions were uploaded by JamesWeb, Pd THOR, Bean2020, Balls187, Persian Poet Gal at en.wikipedia. [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a>]",348,326,[0,[0,"Feline hip replacement","en","Feline_hip_replacement"],[0,"Kass","en",""],[0,"Cat","en",""],[0,"Carnivora","en",""],[0,"Chat","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/b/b2/WhiteCat.jpg"]],[0,"lynx","Linces10.jpg","By (c)\\"Programa de Conservaci\xc3\xb3n Ex-situ del Lince Ib\xc3\xa9rico www.lynxexsitu.es\\" [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.5\\">CC-BY-2.5</a>]",294,420,[0,[0,"Genetic monitoring","en","Genetic_monitoring"],[0,"Lynx","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/f/f5/Linces10.jpg"]],[0,"acinonyx","TheCheethcat.jpg","By James Temple [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.0\\">CC-BY-2.0</a>]",800,1200,[0,[0,"Cheetah","en",""],[0,"Mammal","en",""],[0,"Gu\xc3\xa9pard","fr","Gu%C3%A9pard"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/0/09/TheCheethcat.jpg/800px-TheCheethcat.jpg"]],[0,"ceratotherium","Rhinoc%C3%A9ros_blanc_JHE.jpg","By Coralie [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,434,[0,[0,"Rhinoc\xc3\xa9ros","fr","Rhinoc%C3%A9ros"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Rhinoc%C3%A9ros_blanc_JHE.jpg/800px-Rhinoc%C3%A9ros_blanc_JHE.jpg"]],[0,"equus_grevyi","Zebra_zoo-leipzig.jpg","By Thomas Lersch [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5\\">CC-BY-SA-2.5</a>]",800,600,[0,[0,"Equus (genus)","en","Equus_(genus)"],[0,"Z\xc3\xa8bre de Gr\xc3\xa9vy","fr","Z%C3%A8bre_de_Gr%C3%A9vy"],[0,"Equidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Zebra_zoo-leipzig.jpg/800px-Zebra_zoo-leipzig.jpg"]],[0,"equus_asinus","Equus_asinus_Kadzid%C5%82owo_002.jpg","By Lilly M [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,516,[0,[0,"Asses\' milk (Donkey\'s milk)","en","Asses%27_milk_(Donkey%27s_milk)"],[0,"Lait d\'\xc3\xa2nesse","fr","Lait_d%27%C3%A2nesse"],[0,"Equidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Equus_asinus_Kadzid%C5%82owo_002.jpg/800px-Equus_asinus_Kadzid%C5%82owo_002.jpg"]],[0,"equus_caballus","Pferde_im_Galopp.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5\\">CC-BY-SA-2.5</a>]",800,371,[0,[0,"Equine coat color","en","Equine_coat_color"],[0,"Cheval","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Pferde_im_Galopp.jpg/800px-Pferde_im_Galopp.jpg"]],[0,"plecotus","Plecotus_auritus_01.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.0\\">CC-BY-SA-2.0</a>]",800,600,[0,[0,"Mother Ludlam\'s Cave","en","Mother_Ludlam%27s_Cave"],[0,"Norfolk Roadside Nature Reserve","en","Norfolk_Roadside_Nature_Reserve"],[0,"Plecotus","en",""],[0,"Brown long-eared bat","en","Brown_long-eared_bat"],[0,"Chiroptera (classification phylog\xc3\xa9n\xc3\xa9tique)","fr","Chiroptera_(classification_phylog%C3%A9n%C3%A9tique)"],[0,"Plecotus auritus","fr","Plecotus_auritus"],[0,"For\xc3\xaat de Soignes","fr","For%C3%AAt_de_Soignes"],[0,"Oreillard","fr",""],[0,"Vespertilionidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Plecotus_auritus_01.jpg/800px-Plecotus_auritus_01.jpg"]],[0,"rhinolophus","Grand_Rhinolophe.jpg","By Marie Jullion [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,600,[0,[0,"Greater Horseshoe Bat","en","Greater_Horseshoe_Bat"],[0,"Plateau d\'Albion","fr","Plateau_d%27Albion"],[0,"Alpes dinariques","fr","Alpes_dinariques"],[0,"Rhinolophus ferrumequinum","fr","Rhinolophus_ferrumequinum"],[0,"Biosp\xc3\xa9ologie","fr","Biosp%C3%A9ologie"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Grand_Rhinolophe.jpg/800px-Grand_Rhinolophe.jpg"]],[0,"talpa","Talpa_europaea_hg.jpg","By Hannes Grobe, Hgrobe 21:20, 4 July 2006 (UTC) [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5\\">CC-BY-SA-2.5</a>]",800,571,[0,[0,"European Mole","en","European_Mole"],[0,"Taupe d\'Europe","fr","Taupe_d%27Europe"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Talpa_europaea_hg.jpg/800px-Talpa_europaea_hg.jpg"]],[0,"erinaceus","Erinaceus_europaeus_LC0119.jpg","I, <a target=\\"_blank\\" href=\\"http://commons.wikimedia.org/wiki/User:LC-de\\">J\xc3\xb6rg Hempel</a> [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.0/de/deed.en\\">CC-BY-SA-2.0-de</a>]",800,599,[0,[0,"Erinaceus europaeus","fr","Erinaceus_europaeus"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Erinaceus_europaeus_LC0119.jpg/800px-Erinaceus_europaeus_LC0119.jpg"]],[0,"sorex","Common_Shrew.jpg","By Sjonge at en.wikipedia [Public domain]",800,600,[0,[0,"Common Shrew","en","Common_Shrew"],[0,"Raasay","fr",""],[0,"Musaraigne","fr",""],[0,"Sorex araneus","fr","Sorex_araneus"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/Common_Shrew.jpg/800px-Common_Shrew.jpg"]],[0,"homo","Infant_smile.jpg","By Mehregan Javanmard [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.5\\">CC-BY-2.5</a>]",800,1237,[0,[0,"Homo sapiens","fr","Homo_sapiens"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Infant_smile.jpg/800px-Infant_smile.jpg"]],[0,"pan","Schimpanse_zoo-leipig.jpg","By Thomas Lersch [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.5\\">CC-BY-2.5</a>]",800,600,[0,[0,"Chimpanzee","en",""],[0,"Common chimpanzee","en","Common_chimpanzee"],[0,"Gabon","fr",""],[0,"Chimpanz\xc3\xa9","fr","Chimpanz%C3%A9"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Schimpanse_zoo-leipig.jpg/800px-Schimpanse_zoo-leipig.jpg"]],[0,"gorilla","Gorilla_gorilla_gorilla8.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,1067,[0,[0,"Gabon","fr",""],[0,"Gorille","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/6/6e/Gorilla_gorilla_gorilla8.jpg/800px-Gorilla_gorilla_gorilla8.jpg"]],[0,"pongo","Kutai_Orangutan_2008.jpg","By Neil WWW.NEILSRTW.BLOGSPOT.COM (Wild Orangutan) [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.0\\">CC-BY-2.0</a>]",800,977,[0,[0,"Kutai National Park","en","Kutai_National_Park"],[0,"Orang-outan de Born\xc3\xa9o","fr","Orang-outan_de_Born%C3%A9o"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/ee/Kutai_Orangutan_2008.jpg/800px-Kutai_Orangutan_2008.jpg"]],[0,"macaca","JapaneseMacaque1_CincinnatiZoo.jpg","By Ltshears [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a>]",800,650,[0,[0,"Macaque japonais","fr","Macaque_japonais"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/JapaneseMacaque1_CincinnatiZoo.jpg/800px-JapaneseMacaque1_CincinnatiZoo.jpg"]],[0,"callitrix","Wei%C3%9Fb%C3%BCschelaffe_%28Callithrix_jacchus%29.jpg","<p>\xc2\xa9 Raimond Spekking\xc2\xa0/\xc2\xa0<a target=\\"_blank\\" href=\\"http://creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a></p>",800,620,[0,[0,"Common marmoset","en","Common_marmoset"],[0,"Ouistiti","fr",""],[0,"Simiiformes","fr",""],[0,"Callithrix","fr",""],[0,"Callithrix jacchus","fr","Callithrix_jacchus"],[0,"Primates","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/2/23/Wei%C3%9Fb%C3%BCschelaffe_%28Callithrix_jacchus%29.jpg/800px-Wei%C3%9Fb%C3%BCschelaffe_%28Callithrix_jacchus%29.jpg"]],[0,"ateles","Ateles_fusciceps_robustus_moving.JPG","By Patrick M\xc3\xbcller [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,533,[0,[0,"At\xc3\xa8le \xc3\xa0 t\xc3\xaate brune","fr","At%C3%A8le_%C3%A0_t%C3%AAte_brune"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Ateles_fusciceps_robustus_moving.JPG/800px-Ateles_fusciceps_robustus_moving.JPG"]],[0,"tarsius","Tarsier_Hugs_Mossy_Branch.jpg","By Kok Leng Yeo [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by/2.0\\">CC-BY-2.0</a>]",800,1067,[0,[0,"Wildlife of the Philippines","en","Wildlife_of_the_Philippines"],[0,"Philippine tarsier","en","Philippine_tarsier"],[0,"Tarsiiformes","en",""],[0,"Primate","en",""],[0,"Philippines","fr",""],[0,"Tarsius","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Tarsier_Hugs_Mossy_Branch.jpg/800px-Tarsier_Hugs_Mossy_Branch.jpg"]],[0,"lemur","Knuthenborg_Safaripark_-_en_lemur.jpg","By Hubertus45 [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a>]",800,737,[0,[0,"Fourr\xc3\xa9 \xc3\xa9pineux de Madagascar","fr","Fourr%C3%A9_%C3%A9pineux_de_Madagascar"],[0,"L\xc3\xa9mur catta","fr","L%C3%A9mur_catta"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Knuthenborg_Safaripark_-_en_lemur.jpg/800px-Knuthenborg_Safaripark_-_en_lemur.jpg"]],[0,"platacanthomys","Malabar_spiny_dormouse.jpg","By Kalyanvarma [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0</a>]",800,527,[0,[0,"Malabar Spiny Dormouse","en","Malabar_Spiny_Dormouse"],[0,"Platacanthomyidae","en",""],[0,"Loir \xc3\xa9pineux","fr","Loir_%C3%A9pineux"],[0,"Platacanthomyinae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/6/61/Malabar_spiny_dormouse.jpg"]],[0,"synaptomys","Synaptomys_cooperi.jpg","By PaulT [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,611,[0,[0,"Synaptomys cooperi","fr","Synaptomys_cooperi"],[0,"Campagnol","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Synaptomys_cooperi.jpg/800px-Synaptomys_cooperi.jpg"]],[0,"mesocricetus","Hamster_im_Gras.jpg","By Tux [Public domain or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.0/de/deed.en\\">CC-BY-SA-2.0-de</a>]",800,600,[0,[0,"Hamster dor\xc3\xa9","fr","Hamster_dor%C3%A9"],[0,"Mesocricetus","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/0/01/Hamster_im_Gras.jpg/800px-Hamster_im_Gras.jpg"]],[0,"mus","Mouse-19-Dec-2004.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,484,[0,[0,"Stockage des c\xc3\xa9r\xc3\xa9ales","fr","Stockage_des_c%C3%A9r%C3%A9ales"],[0,"Souris","fr",""],[0,"Sibylline","fr",""],[0,"Mus (genre)","fr","Mus_(genre)"],[0,"Gris","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Mouse-19-Dec-2004.jpg/800px-Mouse-19-Dec-2004.jpg"]],[0,"castor","Beaver_pho34.jpg","By Per Harald Olsen (User made.) [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5-2.0-1.0\\">CC-BY-SA-2.5-2.0-1.0</a>]",711,554,[0,[0,"Fauna of Scotland","en","Fauna_of_Scotland"],[0,"Dyke Marsh","en","Dyke_Marsh"],[0,"Waitoreke","en",""],[0,"Eurasian Beaver","en","Eurasian_Beaver"],[0,"Beaver","en",""],[0,"Monts d\'Arr\xc3\xa9e","fr","Monts_d%27Arr%C3%A9e"],[0,"Faune de l\'\xc3\x89cosse","fr","Faune_de_l%27%C3%89cosse"],[0,"Virenque","fr",""],[0,"Parc national de Fulufj\xc3\xa4llet","fr","Parc_national_de_Fulufj%C3%A4llet"],[0,"Castor fiber","fr","Castor_fiber"],[0,"Saint-Rambert-en-Bugey","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/c/cc/Beaver_pho34.jpg"]],[0,"eliomys","L%C3%A9rot.jpg","By Jctramasure [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0</a>]",800,600,[0,[0,"Eliomys quercinus","fr","Eliomys_quercinus"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/0/08/L%C3%A9rot.jpg/800px-L%C3%A9rot.jpg"]],[0,"marmota","Marmotte_des_Pyr%C3%A9n%C3%A9es.jpg","By Sylvouille at fr.wikipedia [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/1.0\\">CC-BY-SA-1.0</a>]",800,533,[0,[0,"Alpine marmot","en","Alpine_marmot"],[0,"Marmota marmota","fr","Marmota_marmota"],[0,"Marmotte","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Marmotte_des_Pyr%C3%A9n%C3%A9es.jpg/800px-Marmotte_des_Pyr%C3%A9n%C3%A9es.jpg"]],[0,"sciurus","Red_Squirrel_-_Lazienki.JPG","By Pawel Ryszawa [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5-2.0-1.0\\">CC-BY-SA-2.5-2.0-1.0</a>]",800,639,[0,[0,"\xc3\x89cureuil roux","fr","%C3%89cureuil_roux"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Red_Squirrel_-_Lazienki.JPG/800px-Red_Squirrel_-_Lazienki.JPG"]],[0,"hystrix","Westafrikanisches_Stachelschwein.jpg","By C-8 [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0-2.5-2.0-1.0</a>]",800,537,[0,[0,"Crested Porcupine","en","Crested_Porcupine"],[0,"Hystrix cristata","fr","Hystrix_cristata"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Westafrikanisches_Stachelschwein.jpg/800px-Westafrikanisches_Stachelschwein.jpg"]],[0,"lepus","Li%C3%A8vre_en_%C3%A9t%C3%A9.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.artlibre.org/licence/lal/en\\">FAL</a>]",753,1013,[0,[0,"Li\xc3\xa8vres dans la Bible","fr","Li%C3%A8vres_dans_la_Bible"],[0,"Usagi","fr",""],[0,"Li\xc3\xa8vre","fr","Li%C3%A8vre"]],[0,"http://upload.wikimedia.org/wikipedia/commons/4/42/Li%C3%A8vre_en_%C3%A9t%C3%A9.jpg"]],[0,"myrmecophaga","Myresluger.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5\\">CC-BY-SA-2.5</a>]",350,229,[0,[0,"Pilosa","en",""],[0,"R\xc3\xado Pl\xc3\xa1tano Biosphere Reserve","en","R%C3%ADo_Pl%C3%A1tano_Biosphere_Reserve"],[0,"Pantanal","fr",""],[0,"Fourmilier","fr",""],[0,"Tamanoir","fr",""],[0,"Myrmecophagidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/e/e1/Myresluger.jpg"]],[0,"bradypus","9092_-_Milano_-_Museo_storia_naturale_-_Diorama_-_Bradypus_trydactilus_-_Foto_Giovanni_Dall%27Orto_22-Apr-2007.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5/it/deed.en\\">CC-BY-SA-2.5-it</a>]",800,531,[0,[0,"Sloth moth","en","Sloth_moth"],[0,"Paresseux \xc3\xa0 trois doigts","fr","Paresseux_%C3%A0_trois_doigts"],[0,"Province de Salta","fr","Province_de_Salta"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/9092_-_Milano_-_Museo_storia_naturale_-_Diorama_-_Bradypus_trydactilus_-_Foto_Giovanni_Dall%27Orto_22-Apr-2007.jpg/800px-9092_-_Milano_-_Museo_storia_naturale_-_Diorama_-_Bradypus_trydactilus_-_Foto_Giovanni_Dall%27Orto_22-Apr-2007.jpg"]],[0,"priodontes","Chubut-PeninsulaValdes-Armadillo-TatuCarreta-P2230729b.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,580,[0,[0,"Valdes Peninsula","en","Valdes_Peninsula"],[0,"Priodontes maximus","fr","Priodontes_maximus"],[0,"Dasypodinae","fr",""],[0,"Dasypodidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/Chubut-PeninsulaValdes-Armadillo-TatuCarreta-P2230729b.jpg/800px-Chubut-PeninsulaValdes-Armadillo-TatuCarreta-P2230729b.jpg"]],[0,"loxodonta","African_Bush_Elephants.jpg","By Gorgo (Photo taken by author) [Public domain]",800,600,[0,[0,"Seismic communication","en","Seismic_communication"],[0,"African Bush Elephant","en","African_Bush_Elephant"],[0,"Addo Elephant National Park","en","Addo_Elephant_National_Park"],[0,"Parc national des \xc3\x89l\xc3\xa9phants d\'Addo","fr","Parc_national_des_%C3%89l%C3%A9phants_d%27Addo"],[0,"\xc3\x89l\xc3\xa9phant d\'Afrique","fr","%C3%89l%C3%A9phant_d%27Afrique"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/African_Bush_Elephants.jpg/800px-African_Bush_Elephants.jpg"]],[0,"lamantins","Manatee_photo.jpg","By NASA [license on Wikimedia Commons]",800,571,[0,[0,"Manatee","en",""],[0,"Gabon","fr",""],[0,"Baie de Chetumal","fr","Baie_de_Chetumal"],[0,"Lamantin","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Manatee_photo.jpg/800px-Manatee_photo.jpg"]],[0,"macropus","Kangaroo_and_joey03.jpg","Author information on Wikimedia Commons [<a target=\\"_blank\\" href =\\"http://www.gnu.org/licenses/old-licenses/fdl-1.2.html\\">GFDL 1.2</a>]",800,1200,[0,[0,"Eden Park Kangaroo Cull","en","Eden_Park_Kangaroo_Cull"],[0,"Pouch (marsupial)","en","Pouch_(marsupial)"],[0,"Theria","en",""],[0,"Eastern Grey Kangaroo","en","Eastern_Grey_Kangaroo"],[0,"Marsupial","en",""],[0,"Kangaroo","en",""],[0,"Kangourou g\xc3\xa9ant","fr","Kangourou_g%C3%A9ant"],[0,"Macropodiformes","fr",""],[0,"Marsupium","fr",""],[0,"Kangourou","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/Kangaroo_and_joey03.jpg/800px-Kangaroo_and_joey03.jpg"]],[0,"koala","Koala_climbing_tree.jpg","By Diliff [<a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a>]",800,787,[0,[0,"Symbols of Queensland","en","Symbols_of_Queensland"],[0,"Outline of Australia","en","Outline_of_Australia"],[0,"Mammals of Australia","en","Mammals_of_Australia"],[0,"Australia","en",""],[0,"Phascolarctos","en",""],[0,"Vombatiformes","en",""],[0,"Phascolarctidae","en",""],[0,"Great Otway National Park","en","Great_Otway_National_Park"],[0,"Marsupial","en",""],[0,"Australidelphia","fr",""],[0,"Koala","fr",""],[0,"Orientation bibliographique en mammalogie","fr","Orientation_bibliographique_en_mammalogie"],[0,"Riverina","fr",""],[0,"Australie","fr",""],[0,"Marsupialia (classification phylog\xc3\xa9n\xc3\xa9tique)","fr","Marsupialia_(classification_phylog%C3%A9n%C3%A9tique)"],[0,"Mammalia (classification phylog\xc3\xa9n\xc3\xa9tique)","fr","Mammalia_(classification_phylog%C3%A9n%C3%A9tique)"],[0,"Guide phylog\xc3\xa9n\xc3\xa9tique illustr\xc3\xa9 du monde animal","fr","Guide_phylog%C3%A9n%C3%A9tique_illustr%C3%A9_du_monde_animal"],[0,"Phascolarctos","fr",""],[0,"Phascolarctidae","fr",""]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Koala_climbing_tree.jpg/800px-Koala_climbing_tree.jpg"]],[0,"ornithorynque","Platypus.jpg","By Stefan Kraft [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a>]",800,538,[0,[0,"Monotreme","en",""],[0,"Symbols of New South Wales","en","Symbols_of_New_South_Wales"],[0,"Phineas and Ferb","en","Phineas_and_Ferb"],[0,"Sydney Aquarium","en","Sydney_Aquarium"],[0,"Aquatic mammal","en","Aquatic_mammal"],[0,"Waitoreke","en",""],[0,"Artificial induction of immunity","en","Artificial_induction_of_immunity"],[0,"Electroreception","en",""],[0,"Ornithorhynchidae","en",""],[0,"Platypus","en",""],[0,"Mammif\xc3\xa8re aquatique","fr","Mammif%C3%A8re_aquatique"],[0,"Faune de l\'Australie","fr","Faune_de_l%27Australie"],[0,"Murray (fleuve)","fr","Murray_(fleuve)"],[0,"Monotremata","fr",""],[0,"Ornithorynque","fr",""],[0,"Mammif\xc3\xa8re","fr","Mammif%C3%A8re"]],[0,"http://upload.wikimedia.org/wikipedia/commons/f/f2/Platypus.jpg"]],[0,"echidne","Short-beaked_Echidna_Tasmania.jpg","I, <a target=\\"_blank\\" href=\\"http://commons.wikimedia.org/wiki/User:KeresH\\">KeresH</a> [<a target=\\"_blank\\" href =\\"http://www.gnu.org/copyleft/fdl.html\\">GFDL</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/3.0/\\">CC-BY-SA-3.0</a> or <a target=\\"_blank\\" href =\\"http://www.creativecommons.org/licenses/by-sa/2.5-2.0-1.0\\">CC-BY-SA-2.5-2.0-1.0</a>]",800,523,[0,[0,"\xc3\x89chidn\xc3\xa9 \xc3\xa0 nez court","fr","%C3%89chidn%C3%A9_%C3%A0_nez_court"]],[0,"http://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Short-beaked_Echidna_Tasmania.jpg/800px-Short-beaked_Echidna_Tasmania.jpg"]]]');
    caml_create_file
     ("/static/messages.json",
      '{\n"fr":\n{"info": "Informations",\n "recenter": "Recentrer",\n "close": "Cliquez n\'importe o\xc3\xb9 pour retourner \xc3\xa0 l\'arbre",\n "wikimediaCommons": "Voir la description de l\'image sur Wikimedia Commons",\n "language": "En fran\xc3\xa7ais",\n "noRef": "Aucune r\xc3\xa9f\xc3\xa9rence disponible.",\n "languages": "Langues",\n "ok": "OK"\n}\n}\n');
    caml_create_file
     ("/static/tree.json",
      '[0,[0,"Mammalia",[0,[0,"Monotremata",[0,[0,"|echidne",[0]],[0,"|ornithorynque",[0]]]],[0,"",[0,[0,"Marsupialia",[0,[0,"|koala",[0]],[0,"|macropus",[0]]]],[0,"",[0,[0,"",[0,[0,"|lamantins",[0]],[0,"|loxodonta",[0]]]],[0,"",[0,[0,"",[0,[0,"|priodontes",[0]],[0,"",[0,[0,"|bradypus",[0]],[0,"|myrmecophaga",[0]]]]]],[0,"",[0,[0,"",[0,[0,"",[0,[0,"|lepus",[0]],[0,"Rodentia",[0,[0,"|hystrix",[0]],[0,"",[0,[0,"",[0,[0,"|sciurus",[0]],[0,"|marmota",[0]]]],[0,"",[0,[0,"|eliomys",[0]],[0,"",[0,[0,"|castor",[0]],[0,"",[0,[0,"|mus",[0]],[0,"",[0,[0,"|mesocricetus",[0]],[0,"|synaptomys",[0]],[0,"|platacanthomys",[0]]]]]]]]]]]]]]]],[0,"Primates",[0,[0,"|lemur",[0]],[0,"",[0,[0,"|tarsius",[0]],[0,"",[0,[0,"",[0,[0,"|ateles",[0]],[0,"|callitrix",[0]]]],[0,"",[0,[0,"|macaca",[0]],[0,"",[0,[0,"|pongo",[0]],[0,"",[0,[0,"|gorilla",[0]],[0,"",[0,[0,"|pan",[0]],[0,"|homo",[0]]]]]]]]]]]]]]]]]],[0,"",[0,[0,"",[0,[0,"|sorex",[0]],[0,"",[0,[0,"|erinaceus",[0]],[0,"|talpa",[0]]]]]],[0,"",[0,[0,"Chiroptera",[0,[0,"|rhinolophus",[0]],[0,"|plecotus",[0]]]],[0,"",[0,[0,"",[0,[0,"",[0,[0,"",[0,[0,"|equus_caballus",[0]],[0,"|equus_asinus",[0]],[0,"|equus_grevyi",[0]]]],[0,"|ceratotherium",[0]]]],[0,"Carnivora",[0,[0,"",[0,[0,"Felidae",[0,[0,"|acinonyx",[0]],[0,"",[0,[0,"",[0,[0,"|lynx",[0]],[0,"|felis",[0]]]],[0,"",[0,[0,"|panthera",[0]],[0,"|neofelis",[0]]]]]]]],[0,"",[0,[0,"|parahyaena",[0]],[0,"|suricata",[0]]]]]],[0,"",[0,[0,"Canidae",[0,[0,"|vulpes",[0]],[0,"|canis",[0]]]],[0,"",[0,[0,"",[0,[0,"|ailuropoda",[0]],[0,"",[0,[0,"|tremarctos",[0]],[0,"|ursus",[0]]]]]],[0,"",[0,[0,"",[0,[0,"",[0,[0,"|odobenus",[0]],[0,"|arctocephalus",[0]]]],[0,"|mirounga",[0]]]],[0,"",[0,[0,"|mephitis",[0]],[0,"|simocyon",[0]],[0,"",[0,[0,"|procyon",[0]],[0,"|lutra",[0]]]]]]]]]]]]]]]],[0,"",[0,[0,"",[0,[0,"|lama",[0]],[0,"|camel",[0]]]],[0,"",[0,[0,"|sus",[0]],[0,"|phacochoerus",[0]]]],[0,"",[0,[0,"",[0,[0,"Cetacea",[0,[0,"|balaenoptera",[0]],[0,"",[0,[0,"",[0,[0,"|delphinapterus",[0]],[0,"|monodon",[0]]]],[0,"",[0,[0,"|phocoena",[0]],[0,"|orcinus",[0]]]]]]]],[0,"|hippopotamus",[0]]]],[0,"Ruminantia",[0,[0,"",[0,[0,"|giraffa",[0]],[0,"|okapia",[0]]]],[0,"",[0,[0,"Cervidae",[0,[0,"",[0,[0,"|capreolus",[0]],[0,"|alces",[0]]]],[0,"|cervus",[0]]]],[0,"Bovidae",[0,[0,"",[0,[0,"|syncerus",[0]],[0,"",[0,[0,"|bos",[0]],[0,"|bison",[0]]]]]],[0,"",[0,[0,"|aepyceros",[0]],[0,"",[0,[0,"",[0,[0,"|oryx",[0]],[0,"|connochaetes",[0]]]],[0,"",[0,[0,"",[0,[0,"",[0,[0,"|mouflon",[0]],[0,"|mouton",[0]]]],[0,"",[0,[0,"|rupicapra",[0]],[0,"|capra",[0]]]]]],[0,"|ovibos",[0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[0,[0,"fr",[0,[0,"<TITLE>","Les mammif\xc3\xa8res"],[0,"Mammalia","Mammif\xc3\xa8res"],[0,"Monotremata","Monotr\xc3\xa8mes"],[0,"Marsupialia","Marsupiaux"],[0,"Rodentia","Rongeurs"],[0,"Primates","Primates"],[0,"Chiroptera","Chiropt\xc3\xa8res"],[0,"Carnivora","Carnivores"],[0,"Felidae","F\xc3\xa9lins"],[0,"Canidae","Canid\xc3\xa9s"],[0,"Cetacea","C\xc3\xa9tac\xc3\xa9s"],[0,"Ruminantia","Ruminants"],[0,"Cervidae","Cervid\xc3\xa9s"],[0,"Bovidae","Bovid\xc3\xa9s"]],"<h1>Un arbre des animaux</h1>\\n\\nCet <a target=\\"_blank\\"\\nhref=\\"http://fr.wikipedia.org/wiki/Arbre_phylog%C3%A9n%C3%A9tique\\">\\narbre <em>phylog\xc3\xa9n\xc3\xa9tique</em></a> repr\xc3\xa9sente les liens de parent\xc3\xa9\\nentre animaux.\\n\\n<h2>Utilisation</h2>\\n\\nParcourez l\'arbre en le faisant glisser avec la souris.  Cliquez\\nsur une image pour l\'afficher en grand.\\n\\n<h2>Cr\xc3\xa9dits</h2>\\n\\nCe logiciel et les images qu\'il utilise sont sous des licences libres.\\nLes images proviennent de <a target=\\"_blank\\"\\nhref=\\"http://commons.wikimedia.org/wiki/Main_Page?uselang=fr\\">Wikimedia\\nCommons</a>.  Vous pouvez cliquer sur chaque image pour plus de\\nd\xc3\xa9tails. Le logiciel a \xc3\xa9t\xc3\xa9 \xc3\xa9crit par J\xc3\xa9r\xc3\xb4me Vouillon (CNRS)."],[0,"en",[0,[0,"<TITLE>","Mammals"],[0,"Mammalia","Mammals"],[0,"Monotremata","Monotremes"],[0,"Marsupialia","Marsupials"],[0,"Rodentia","Rodents"],[0,"Primates","Primates"],[0,"Chiroptera","Bats"],[0,"Carnivora","Carnivorans"],[0,"Felidae","Felids"],[0,"Canidae","Canids"],[0,"Cetacea","Cetaceans"],[0,"Ruminantia","Ruminants"],[0,"Cervidae","Deer"],[0,"Bovidae","Bovids"]],"<h1>A Tree of Animals</h1>\\n\\nThis <a target=\\"_blank\\"\\nhref=\\"http://en.wikipedia.org/wiki/Phylogenetic_tree\\">\\n<em>phylogenetic</em> tree</a> displays the relationships among\\nanimals.\\n\\n<h2>Usage</h2>\\n\\nBrowse the tree by dragging it with the mouse. Click on any image to\\ndisplay a larger version.\\n\\n<h2>Credits</h2>\\n\\nThis software and the images it uses are under free licenses.  Images\\nare from <a target=\\"_blank\\"\\nhref=\\"http://commons.wikimedia.org/wiki/Main_Page\\">Wikimedia\\nCommons</a>.  You can click on each image for details.  The software\\nhas been written by J\xc3\xa9r\xc3\xb4me Vouillon (CNRS)."]]]');
    var
     Out_of_memory=[248,caml_new_string("Out_of_memory"),-1],
     Sys_error=[248,caml_new_string("Sys_error"),-2],
     Failure=[248,caml_new_string("Failure"),-3],
     Invalid_argument=[248,caml_new_string("Invalid_argument"),-4],
     End_of_file=[248,caml_new_string("End_of_file"),-5],
     Division_by_zero=[248,caml_new_string("Division_by_zero"),-6],
     Not_found=[248,caml_new_string("Not_found"),-7],
     Match_failure=[248,caml_new_string("Match_failure"),-8],
     Stack_overflow=[248,caml_new_string("Stack_overflow"),-9],
     Sys_blocked_io=[248,caml_new_string("Sys_blocked_io"),-10],
     Assert_failure=[248,caml_new_string("Assert_failure"),-11],
     Undefined_recursive_module=
      [248,caml_new_string("Undefined_recursive_module"),-12],
     s=caml_new_string("Buffer.add: cannot grow buffer"),
     partial=[4,0,0,0,0],
     locfmt=
      [0,
       [11,
        caml_new_string('File "'),
        [2,
         0,
         [11,
          caml_new_string('", line '),
          [4,
           0,
           0,
           0,
           [11,
            caml_new_string(", characters "),
            [4,0,0,0,[12,45,[4,0,0,0,[11,caml_new_string(": "),[2,0,0]]]]]]]]]],
       caml_new_string('File "%s", line %d, characters %d-%d: %s')],
     names=
      [0,
       caml_new_string("search"),
       caml_new_string("replace"),
       caml_new_string("reload"),
       caml_new_string("protocol"),
       caml_new_string("port"),
       caml_new_string("pathname"),
       caml_new_string("origin"),
       caml_new_string("href"),
       caml_new_string("hostname"),
       caml_new_string("host"),
       caml_new_string("hash"),
       caml_new_string("assign")],
     public_methods=
      [0,
       caml_new_string("hash"),
       caml_new_string("host"),
       caml_new_string("href"),
       caml_new_string("port"),
       caml_new_string("origin"),
       caml_new_string("assign"),
       caml_new_string("hostname"),
       caml_new_string("pathname"),
       caml_new_string("search"),
       caml_new_string("protocol"),
       caml_new_string("reload"),
       caml_new_string("replace")],
     s$0=caml_new_string("3.4.0"),
     git_version=caml_new_string("dd9f9d139"),
     languages=
      [0,
       [0,caml_new_string("Fran\xc3\xa7ais"),caml_new_string("fr")],
       [0,[0,caml_new_string("English"),caml_new_string("en")],0]],
     z0=[254,0.,0.],
     z1=[254,0.1,0.],
     z0$0=[254,0.,0.],
     z1$0=[254,0.,0.1],
     z0$1=[254,0.,0.],
     z1$1=[254,-0.1,0.],
     z0$2=[254,0.,0.],
     z1$2=[254,0.,-0.1],
     a=[254,0.25,0.],
     icons=
      [0,
       caml_new_string("commons-38.png"),
       [0,
        caml_new_string("wikipedia-38.png"),
        [0,
         caml_new_string("info-38.png"),
         [0,
          caml_new_string("meeting-point-38.png"),
          [0,
           caml_new_string("globe-38.png"),
           [0,caml_new_string("ocsigen-powered.png"),0]]]]]],
     t=[254,1.,0.],
     zero=[254,0.,0.],
     tree_url=caml_new_string("tree.json");
    caml_register_global
     (11,Undefined_recursive_module,"Undefined_recursive_module");
    caml_register_global(10,Assert_failure,"Assert_failure");
    caml_register_global(9,Sys_blocked_io,"Sys_blocked_io");
    caml_register_global(8,Stack_overflow,"Stack_overflow");
    caml_register_global(7,Match_failure,"Match_failure");
    caml_register_global(6,Not_found,"Not_found");
    caml_register_global(5,Division_by_zero,"Division_by_zero");
    caml_register_global(4,End_of_file,"End_of_file");
    caml_register_global(3,Invalid_argument,"Invalid_argument");
    caml_register_global(2,Failure,"Failure");
    caml_register_global(1,Sys_error,"Sys_error");
    caml_register_global(0,Out_of_memory,"Out_of_memory");
    var
     _d_=caml_new_string("%.12g"),
     _c_=caml_new_string("."),
     _a_=caml_new_string("true"),
     _b_=caml_new_string("false"),
     _e_=caml_new_string("\\\\"),
     _f_=caml_new_string("\\'"),
     _g_=caml_new_string("\\b"),
     _h_=caml_new_string("\\t"),
     _i_=caml_new_string("\\n"),
     _j_=caml_new_string("\\r"),
     _m_=caml_new_string("String.blit / Bytes.blit_string"),
     _l_=caml_new_string("Bytes.blit"),
     _k_=caml_new_string("String.sub / Bytes.sub"),
     _o_=caml_new_string("String.contains_from / Bytes.contains_from"),
     _n_=caml_new_string("String.index_from / Bytes.index_from"),
     _p_=caml_new_string("Array.blit"),
     _u_=caml_new_string("Map.remove_min_elt"),
     _v_=[0,0,0,0],
     _w_=[0,caml_new_string("map.ml"),398,10],
     _x_=[0,0,0],
     _q_=caml_new_string("Map.bal"),
     _r_=caml_new_string("Map.bal"),
     _s_=caml_new_string("Map.bal"),
     _t_=caml_new_string("Map.bal"),
     _z_=caml_new_string("Stdlib.Queue.Empty"),
     _A_=caml_new_string("CamlinternalLazy.Undefined"),
     _J_=caml_new_string("%c"),
     _K_=caml_new_string("%s"),
     _L_=caml_new_string("%i"),
     _M_=caml_new_string("%li"),
     _N_=caml_new_string("%ni"),
     _O_=caml_new_string("%Li"),
     _P_=caml_new_string("%f"),
     _Q_=caml_new_string("%B"),
     _R_=caml_new_string("%{"),
     _S_=caml_new_string("%}"),
     _T_=caml_new_string("%("),
     _U_=caml_new_string("%)"),
     _V_=caml_new_string("%a"),
     _W_=caml_new_string("%t"),
     _X_=caml_new_string("%?"),
     _Y_=caml_new_string("%r"),
     _Z_=caml_new_string("%_r"),
     ___=[0,caml_new_string("camlinternalFormat.ml"),847,23],
     _aj_=[0,caml_new_string("camlinternalFormat.ml"),811,21],
     _ab_=[0,caml_new_string("camlinternalFormat.ml"),812,21],
     _ak_=[0,caml_new_string("camlinternalFormat.ml"),815,21],
     _ac_=[0,caml_new_string("camlinternalFormat.ml"),816,21],
     _al_=[0,caml_new_string("camlinternalFormat.ml"),819,19],
     _ad_=[0,caml_new_string("camlinternalFormat.ml"),820,19],
     _am_=[0,caml_new_string("camlinternalFormat.ml"),823,22],
     _ae_=[0,caml_new_string("camlinternalFormat.ml"),824,22],
     _an_=[0,caml_new_string("camlinternalFormat.ml"),828,30],
     _af_=[0,caml_new_string("camlinternalFormat.ml"),829,30],
     _ah_=[0,caml_new_string("camlinternalFormat.ml"),833,26],
     _$_=[0,caml_new_string("camlinternalFormat.ml"),834,26],
     _ai_=[0,caml_new_string("camlinternalFormat.ml"),843,28],
     _aa_=[0,caml_new_string("camlinternalFormat.ml"),844,28],
     _ag_=[0,caml_new_string("camlinternalFormat.ml"),848,23],
     _bk_=caml_new_string("%u"),
     _bi_=[0,caml_new_string("camlinternalFormat.ml"),1556,4],
     _bj_=caml_new_string("Printf: bad conversion %["),
     _bl_=[0,caml_new_string("camlinternalFormat.ml"),1624,39],
     _bm_=[0,caml_new_string("camlinternalFormat.ml"),1647,31],
     _bn_=[0,caml_new_string("camlinternalFormat.ml"),1648,31],
     _bo_=caml_new_string("Printf: bad conversion %_"),
     _bp_=caml_new_string("@{"),
     _bq_=caml_new_string("@["),
     _br_=caml_new_string("@{"),
     _bs_=caml_new_string("@["),
     _bg_=caml_new_string("nan"),
     _bh_=caml_new_string("."),
     _be_=caml_new_string("neg_infinity"),
     _bf_=caml_new_string("infinity"),
     _bd_=caml_new_string("%.12g"),
     _a3_=caml_new_string("%+nd"),
     _a4_=caml_new_string("% nd"),
     _a6_=caml_new_string("%+ni"),
     _a7_=caml_new_string("% ni"),
     _a8_=caml_new_string("%nx"),
     _a9_=caml_new_string("%#nx"),
     _a__=caml_new_string("%nX"),
     _a$_=caml_new_string("%#nX"),
     _ba_=caml_new_string("%no"),
     _bb_=caml_new_string("%#no"),
     _a2_=caml_new_string("%nd"),
     _a5_=caml_new_string("%ni"),
     _bc_=caml_new_string("%nu"),
     _aQ_=caml_new_string("%+ld"),
     _aR_=caml_new_string("% ld"),
     _aT_=caml_new_string("%+li"),
     _aU_=caml_new_string("% li"),
     _aV_=caml_new_string("%lx"),
     _aW_=caml_new_string("%#lx"),
     _aX_=caml_new_string("%lX"),
     _aY_=caml_new_string("%#lX"),
     _aZ_=caml_new_string("%lo"),
     _a0_=caml_new_string("%#lo"),
     _aP_=caml_new_string("%ld"),
     _aS_=caml_new_string("%li"),
     _a1_=caml_new_string("%lu"),
     _aD_=caml_new_string("%+Ld"),
     _aE_=caml_new_string("% Ld"),
     _aG_=caml_new_string("%+Li"),
     _aH_=caml_new_string("% Li"),
     _aI_=caml_new_string("%Lx"),
     _aJ_=caml_new_string("%#Lx"),
     _aK_=caml_new_string("%LX"),
     _aL_=caml_new_string("%#LX"),
     _aM_=caml_new_string("%Lo"),
     _aN_=caml_new_string("%#Lo"),
     _aC_=caml_new_string("%Ld"),
     _aF_=caml_new_string("%Li"),
     _aO_=caml_new_string("%Lu"),
     _aq_=caml_new_string("%+d"),
     _ar_=caml_new_string("% d"),
     _at_=caml_new_string("%+i"),
     _au_=caml_new_string("% i"),
     _av_=caml_new_string("%x"),
     _aw_=caml_new_string("%#x"),
     _ax_=caml_new_string("%X"),
     _ay_=caml_new_string("%#X"),
     _az_=caml_new_string("%o"),
     _aA_=caml_new_string("%#o"),
     _ap_=caml_new_string("%d"),
     _as_=caml_new_string("%i"),
     _aB_=caml_new_string("%u"),
     _B_=caml_new_string("@]"),
     _C_=caml_new_string("@}"),
     _D_=caml_new_string("@?"),
     _E_=caml_new_string("@\n"),
     _F_=caml_new_string("@."),
     _G_=caml_new_string("@@"),
     _H_=caml_new_string("@%"),
     _I_=caml_new_string("@"),
     _ao_=caml_new_string("CamlinternalFormat.Type_mismatch"),
     _bw_=caml_new_string(""),
     _bx_=
      [0,[11,caml_new_string(", "),[2,0,[2,0,0]]],caml_new_string(", %s%s")],
     _bP_=[0,[2,0,[12,10,0]],caml_new_string("%s\n")],
     _bQ_=
      [0,
       [11,
        caml_new_string
         ("(Program not linked with -g, cannot print stack backtrace)\n"),
        0],
       caml_new_string
        ("(Program not linked with -g, cannot print stack backtrace)\n")],
     _bH_=caml_new_string("Raised at"),
     _bI_=caml_new_string("Re-raised at"),
     _bJ_=caml_new_string("Raised by primitive operation at"),
     _bK_=caml_new_string("Called from"),
     _bL_=caml_new_string(" (inlined)"),
     _bN_=caml_new_string(""),
     _bM_=
      [0,
       [2,
        0,
        [11,
         caml_new_string(' file "'),
         [2,
          0,
          [12,
           34,
           [2,
            0,
            [11,
             caml_new_string(", line "),
             [4,
              0,
              0,
              0,
              [11,caml_new_string(", characters "),[4,0,0,0,[12,45,partial]]]]]]]]]],
       caml_new_string('%s file "%s"%s, line %d, characters %d-%d')],
     _bO_=
      [0,
       [2,0,[11,caml_new_string(" unknown location"),0]],
       caml_new_string("%s unknown location")],
     _bC_=caml_new_string("Out of memory"),
     _bD_=caml_new_string("Stack overflow"),
     _bE_=caml_new_string("Pattern matching failed"),
     _bF_=caml_new_string("Assertion failed"),
     _bG_=caml_new_string("Undefined recursive module"),
     _by_=[0,[12,40,[2,0,[2,0,[12,41,0]]]],caml_new_string("(%s%s)")],
     _bz_=caml_new_string(""),
     _bA_=caml_new_string(""),
     _bB_=[0,[12,40,[2,0,[12,41,0]]],caml_new_string("(%s)")],
     _bv_=[0,[4,0,0,0,0],caml_new_string("%d")],
     _bt_=[0,[3,0,0],caml_new_string("%S")],
     _bu_=caml_new_string("_"),
     _bR_=caml_new_string("x"),
     _dh_=caml_new_string("OCAMLRUNPARAM"),
     _df_=caml_new_string("CAMLRUNPARAM"),
     _bS_=caml_new_string(""),
     _bU_=caml_new_string(""),
     _bV_=caml_new_string("Js_of_ocaml__Js.Error"),
     _bW_=caml_new_string("jsError"),
     _b7_=caml_new_string("canvas"),
     _b5_=caml_new_string("dt"),
     _b4_=caml_new_string("dd"),
     _b3_=caml_new_string("img"),
     _b2_=caml_new_string("a"),
     _b1_=caml_new_string("div"),
     _b0_=caml_new_string("li"),
     _bZ_=caml_new_string("dl"),
     _bY_=caml_new_string("ul"),
     _bX_=caml_new_string("button"),
     _b6_=caml_new_string("Js_of_ocaml__Dom_html.Canvas_not_available"),
     _b8_=[0,caml_new_string("lib/js_of_ocaml/xmlHttpRequest.ml"),128,75],
     _b9_=caml_new_string("[\\][()\\\\|+*.?{}^$]"),
     _db_=caml_new_string(""),
     _ca_=caml_new_string(""),
     _cb_=caml_new_string(""),
     _cc_=[0,caml_new_string(""),0],
     _b__=caml_new_string("Js_of_ocaml__Url.Local_exn"),
     _b$_=caml_new_string("+"),
     _cd_=
      caml_new_string
       ("^([Hh][Tt][Tt][Pp][Ss]?)://([0-9a-zA-Z.-]+|\\[[0-9a-zA-Z.-]+\\]|\\[[0-9A-Fa-f:.]+\\])?(:([0-9]+))?(/([^\\?#]*)(\\?([^#]*))?(#(.*))?)?$"),
     _ce_=
      caml_new_string
       ("^([Ff][Ii][Ll][Ee])://([^\\?#]*)(\\?([^#]*))?(#(.*))?$"),
     _c__=caml_new_string("+"),
     _cs_=[0,0],
     _ct_=[0,1],
     _cq_=[0,0],
     _cr_=[0,1],
     _co_=[0,0],
     _cp_=[0,0],
     _cn_=caml_new_string("wakeup_exn"),
     _cm_=caml_new_string("wakeup"),
     _cj_=[0,[11,caml_new_string("Lwt."),[2,0,0]],caml_new_string("Lwt.%s")],
     _ck_=[0,[11,caml_new_string("Lwt."),[2,0,0]],caml_new_string("Lwt.%s")],
     _cl_=[0,0],
     _ch_=caml_new_string("Fatal error: exception "),
     _ci_=caml_new_string("Lwt.Resolution_loop.Canceled"),
     _cv_=caml_new_string("Js_of_ocaml_lwt__Lwt_xmlHttpRequest.Wrong_headers"),
     _cw_=caml_new_string("Exception during Lwt.async: "),
     _c6_=caml_new_string("info-38.png"),
     _c7_=caml_new_string("globe-38.png"),
     _c8_=caml_new_string("meeting-point-38.png"),
     _c9_=caml_new_string("ocsigen-powered.png"),
     _cZ_=caml_new_string(".wikipedia.org/wiki/"),
     _c0_=caml_new_string("http://"),
     _cU_=caml_new_string("px"),
     _c2_=caml_new_string(".jpg"),
     _c3_=caml_new_string("images/"),
     _cV_=caml_new_string(""),
     _c1_=caml_new_string("?uselang="),
     _cW_=caml_new_string("http://commons.wikimedia.org/wiki/File:"),
     _cX_=caml_new_string("commons-38.png"),
     _cY_=caml_new_string("wikipedia-38.png"),
     _cN_=caml_new_string("px"),
     _cO_=caml_new_string("px 3px"),
     _cP_=caml_new_string("px 3px "),
     _cQ_=caml_new_string("on"),
     _cS_=caml_new_string("off"),
     _cR_=caml_new_string("filled_button "),
     _cT_=caml_new_string("px"),
     _cL_=caml_new_string("on"),
     _cM_=caml_new_string("off"),
     _cK_=caml_new_string("image_info.json"),
     _cI_=[0,0,0,0.],
     _cJ_=[254,-1.,0.],
     _cH_=[0,caml_new_string("examples/hyperbolic/hypertree.ml"),985,2],
     _cG_=caml_new_string("<TITLE>"),
     _cF_=caml_new_string(""),
     _cA_=caml_new_string(".jpg"),
     _cB_=caml_new_string("thumbnails/"),
     _cz_=caml_new_string("messages.json"),
     _cx_=caml_new_string("icons/"),
     _cC_=caml_new_string("\n"),
     _cD_=caml_new_string("[^ ]"),
     _cE_=caml_new_string("[|]"),
     _c4_=
      caml_new_string
       ('<h1>A tree of animals</h1> This <a target="_blank" href="http://en.wikipedia.org/wiki/Phylogenetic_tree"><em>phylogenetic</em> tree</a> displays the relationships among animals.<h2>Usage</h2>Browse the tree by dragging it with the mouse. Click on any image to display a larger version.<h2>Credits</h2>This software and the images it uses are under free licenses. Images are from <a target="_blank" href="http://commons.wikimedia.org/wiki/Main_Page">Wikimedia Commons</a>.  You can click on each image for details.  The software has been written by J\xc3\xa9r\xc3\xb4me Vouillon (CNRS).');
    function erase_rel(param)
     {if(typeof param === "number")
       return 0;
      else
       switch(param[0])
        {case 0:var rest=param[1];return [0,erase_rel(rest)];
         case 1:var rest$0=param[1];return [1,erase_rel(rest$0)];
         case 2:var rest$1=param[1];return [2,erase_rel(rest$1)];
         case 3:var rest$2=param[1];return [3,erase_rel(rest$2)];
         case 4:var rest$3=param[1];return [4,erase_rel(rest$3)];
         case 5:var rest$4=param[1];return [5,erase_rel(rest$4)];
         case 6:var rest$5=param[1];return [6,erase_rel(rest$5)];
         case 7:var rest$6=param[1];return [7,erase_rel(rest$6)];
         case 8:
          var rest$7=param[2],ty=param[1];return [8,ty,erase_rel(rest$7)];
         case 9:
          var rest$8=param[3],ty1=param[1];
          return [9,ty1,ty1,erase_rel(rest$8)];
         case 10:var rest$9=param[1];return [10,erase_rel(rest$9)];
         case 11:var rest$10=param[1];return [11,erase_rel(rest$10)];
         case 12:var rest$11=param[1];return [12,erase_rel(rest$11)];
         case 13:var rest$12=param[1];return [13,erase_rel(rest$12)];
         default:var rest$13=param[1];return [14,erase_rel(rest$13)]}}
    function concat_fmtty(fmtty1,fmtty2)
     {if(typeof fmtty1 === "number")
       return fmtty2;
      else
       switch(fmtty1[0])
        {case 0:var rest=fmtty1[1];return [0,concat_fmtty(rest,fmtty2)];
         case 1:var rest$0=fmtty1[1];return [1,concat_fmtty(rest$0,fmtty2)];
         case 2:var rest$1=fmtty1[1];return [2,concat_fmtty(rest$1,fmtty2)];
         case 3:var rest$2=fmtty1[1];return [3,concat_fmtty(rest$2,fmtty2)];
         case 4:var rest$3=fmtty1[1];return [4,concat_fmtty(rest$3,fmtty2)];
         case 5:var rest$4=fmtty1[1];return [5,concat_fmtty(rest$4,fmtty2)];
         case 6:var rest$5=fmtty1[1];return [6,concat_fmtty(rest$5,fmtty2)];
         case 7:var rest$6=fmtty1[1];return [7,concat_fmtty(rest$6,fmtty2)];
         case 8:
          var rest$7=fmtty1[2],ty=fmtty1[1];
          return [8,ty,concat_fmtty(rest$7,fmtty2)];
         case 9:
          var rest$8=fmtty1[3],ty2=fmtty1[2],ty1=fmtty1[1];
          return [9,ty1,ty2,concat_fmtty(rest$8,fmtty2)];
         case 10:var rest$9=fmtty1[1];return [10,concat_fmtty(rest$9,fmtty2)];
         case 11:
          var rest$10=fmtty1[1];return [11,concat_fmtty(rest$10,fmtty2)];
         case 12:
          var rest$11=fmtty1[1];return [12,concat_fmtty(rest$11,fmtty2)];
         case 13:
          var rest$12=fmtty1[1];return [13,concat_fmtty(rest$12,fmtty2)];
         default:
          var rest$13=fmtty1[1];return [14,concat_fmtty(rest$13,fmtty2)]}}
    function concat_fmt(fmt1,fmt2)
     {if(typeof fmt1 === "number")
       return fmt2;
      else
       switch(fmt1[0])
        {case 0:var rest=fmt1[1];return [0,concat_fmt(rest,fmt2)];
         case 1:var rest$0=fmt1[1];return [1,concat_fmt(rest$0,fmt2)];
         case 2:
          var rest$1=fmt1[2],pad=fmt1[1];
          return [2,pad,concat_fmt(rest$1,fmt2)];
         case 3:
          var rest$2=fmt1[2],pad$0=fmt1[1];
          return [3,pad$0,concat_fmt(rest$2,fmt2)];
         case 4:
          var rest$3=fmt1[4],prec=fmt1[3],pad$1=fmt1[2],iconv=fmt1[1];
          return [4,iconv,pad$1,prec,concat_fmt(rest$3,fmt2)];
         case 5:
          var rest$4=fmt1[4],prec$0=fmt1[3],pad$2=fmt1[2],iconv$0=fmt1[1];
          return [5,iconv$0,pad$2,prec$0,concat_fmt(rest$4,fmt2)];
         case 6:
          var rest$5=fmt1[4],prec$1=fmt1[3],pad$3=fmt1[2],iconv$1=fmt1[1];
          return [6,iconv$1,pad$3,prec$1,concat_fmt(rest$5,fmt2)];
         case 7:
          var rest$6=fmt1[4],prec$2=fmt1[3],pad$4=fmt1[2],iconv$2=fmt1[1];
          return [7,iconv$2,pad$4,prec$2,concat_fmt(rest$6,fmt2)];
         case 8:
          var rest$7=fmt1[4],prec$3=fmt1[3],pad$5=fmt1[2],fconv=fmt1[1];
          return [8,fconv,pad$5,prec$3,concat_fmt(rest$7,fmt2)];
         case 9:
          var rest$8=fmt1[2],pad$6=fmt1[1];
          return [9,pad$6,concat_fmt(rest$8,fmt2)];
         case 10:var rest$9=fmt1[1];return [10,concat_fmt(rest$9,fmt2)];
         case 11:
          var rest$10=fmt1[2],str=fmt1[1];
          return [11,str,concat_fmt(rest$10,fmt2)];
         case 12:
          var rest$11=fmt1[2],chr=fmt1[1];
          return [12,chr,concat_fmt(rest$11,fmt2)];
         case 13:
          var rest$12=fmt1[3],fmtty=fmt1[2],pad$7=fmt1[1];
          return [13,pad$7,fmtty,concat_fmt(rest$12,fmt2)];
         case 14:
          var rest$13=fmt1[3],fmtty$0=fmt1[2],pad$8=fmt1[1];
          return [14,pad$8,fmtty$0,concat_fmt(rest$13,fmt2)];
         case 15:var rest$14=fmt1[1];return [15,concat_fmt(rest$14,fmt2)];
         case 16:var rest$15=fmt1[1];return [16,concat_fmt(rest$15,fmt2)];
         case 17:
          var rest$16=fmt1[2],fmting_lit=fmt1[1];
          return [17,fmting_lit,concat_fmt(rest$16,fmt2)];
         case 18:
          var rest$17=fmt1[2],fmting_gen=fmt1[1];
          return [18,fmting_gen,concat_fmt(rest$17,fmt2)];
         case 19:var rest$18=fmt1[1];return [19,concat_fmt(rest$18,fmt2)];
         case 20:
          var rest$19=fmt1[3],char_set=fmt1[2],width_opt=fmt1[1];
          return [20,width_opt,char_set,concat_fmt(rest$19,fmt2)];
         case 21:
          var rest$20=fmt1[2],counter=fmt1[1];
          return [21,counter,concat_fmt(rest$20,fmt2)];
         case 22:var rest$21=fmt1[1];return [22,concat_fmt(rest$21,fmt2)];
         case 23:
          var rest$22=fmt1[2],ign=fmt1[1];
          return [23,ign,concat_fmt(rest$22,fmt2)];
         default:
          var rest$23=fmt1[3],f=fmt1[2],arity=fmt1[1];
          return [24,arity,f,concat_fmt(rest$23,fmt2)]}}
    function invalid_arg(s){throw [0,Invalid_argument,s]}
    caml_fresh_oo_id(0);
    function min(x,y){return caml_lessequal(x,y)?x:y}
    function max(x,y){return caml_greaterequal(x,y)?x:y}
    function abs(x){return 0 <= x?x:- x | 0}
    function symbol(s1,s2)
     {var
       l1=caml_ml_string_length(s1),
       l2=caml_ml_string_length(s2),
       s=caml_create_bytes(l1 + l2 | 0);
      caml_blit_string(s1,0,s,0,l1);
      caml_blit_string(s2,0,s,l1,l2);
      return caml_string_of_bytes(s)}
    function string_of_bool(b){return b?_a_:_b_}
    caml_ml_open_descriptor_in(0);
    caml_ml_open_descriptor_out(1);
    var stderr=caml_ml_open_descriptor_out(2);
    function output_string(oc,s)
     {return caml_ml_output(oc,s,0,caml_ml_string_length(s))}
    function prerr_string(s){return output_string(stderr,s)}
    function do_at_exit(param)
     {function iter(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var l=param$0[2],a=param$0[1];
            try
             {caml_ml_flush(a)}
            catch(_lz_)
             {_lz_ = caml_wrap_exception(_lz_);
              if(_lz_[1] !== Sys_error)throw _lz_;
              var _ly_=_lz_}
            var param$0=l;
            continue}
          return 0}}
      return iter(caml_ml_out_channels_list(0))}
    caml_sys_get_argv(0);
    var
     match=caml_sys_const_backend_type(0),
     max_array_length=caml_sys_const_max_wosize(0),
     max_string_length=(4 * max_array_length | 0) - 1 | 0;
    caml_fresh_oo_id(0);
    typeof match === "number";
    function iter(f,param)
     {var param$0=param;
      for(;;)
       {if(param$0)
         {var l=param$0[2],a=param$0[1];
          caml_call1(f,a);
          var param$0=l;
          continue}
        return 0}}
    function assq(x,param)
     {var param$0=param;
      for(;;)
       {if(param$0)
         {var l=param$0[2],match=param$0[1],b=match[2],a=match[1];
          if(a === x)return b;
          var param$0=l;
          continue}
        throw Not_found}}
    function find(p,param)
     {var param$0=param;
      for(;;)
       {if(param$0)
         {var l=param$0[2],x=param$0[1];
          if(caml_call1(p,x))return x;
          var param$0=l;
          continue}
        throw Not_found}}
    function make(n,c)
     {var s=caml_create_bytes(n);caml_fill_bytes(s,0,n,c);return s}
    function sub(s,ofs,len)
     {if(0 <= ofs)
       if(0 <= len)
        if(! ((caml_ml_bytes_length(s) - len | 0) < ofs))
         {var r=caml_create_bytes(len);
          caml_blit_bytes(s,ofs,r,0,len);
          return r}
      return invalid_arg(_k_)}
    function sub_string(b,ofs,len)
     {return caml_string_of_bytes(sub(b,ofs,len))}
    function blit(s1,ofs1,s2,ofs2,len)
     {if(0 <= len)
       if(0 <= ofs1)
        if(! ((caml_ml_bytes_length(s1) - len | 0) < ofs1))
         if(0 <= ofs2)
          if(! ((caml_ml_bytes_length(s2) - len | 0) < ofs2))
           return caml_blit_bytes(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_l_)}
    function blit$0(s1,ofs1,s2,ofs2,len)
     {if(0 <= len)
       if(0 <= ofs1)
        if(! ((caml_ml_string_length(s1) - len | 0) < ofs1))
         if(0 <= ofs2)
          if(! ((caml_ml_bytes_length(s2) - len | 0) < ofs2))
           return caml_blit_string(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_m_)}
    function make$0(n,c){return caml_string_of_bytes(make(n,c))}
    function sub$0(s,ofs,len)
     {return caml_string_of_bytes(sub(caml_bytes_of_string(s),ofs,len))}
    function index_rec(s,lim,i,c)
     {var i$0=i;
      for(;;)
       {if(lim <= i$0)throw Not_found;
        if(caml_string_unsafe_get(s,i$0) === c)return i$0;
        var i$1=i$0 + 1 | 0,i$0=i$1;
        continue}}
    function index_from(s,i,c)
     {var l=caml_ml_string_length(s);
      if(0 <= i)if(! (l < i))return index_rec(s,l,i,c);
      return invalid_arg(_n_)}
    function contains_from(s,i,c)
     {var l=caml_ml_string_length(s);
      if(0 <= i)
       if(! (l < i))
        try
         {index_rec(s,l,i,c);var _lw_=1;return _lw_}
        catch(_lx_)
         {_lx_ = caml_wrap_exception(_lx_);
          if(_lx_ === Not_found)return 0;
          throw _lx_}
      return invalid_arg(_o_)}
    function contains(s,c){return contains_from(s,0,c)}
    function iter$0(f,a)
     {var _lu_=a.length - 1 - 1 | 0,_lt_=0;
      if(! (_lu_ < 0))
       {var i=_lt_;
        for(;;)
         {caml_call1(f,a[1 + i]);
          var _lv_=i + 1 | 0;
          if(_lu_ !== i){var i=_lv_;continue}
          break}}
      return 0}
    function map(f,a)
     {var l=a.length - 1;
      if(0 === l)return [0];
      var r=caml_make_vect(l,caml_call1(f,a[1])),_lr_=l - 1 | 0,_lq_=1;
      if(! (_lr_ < 1))
       {var i=_lq_;
        for(;;)
         {r[1 + i] = caml_call1(f,a[1 + i]);
          var _ls_=i + 1 | 0;
          if(_lr_ !== i){var i=_ls_;continue}
          break}}
      return r}
    function to_list(a)
     {var i$1=a.length - 1 - 1 | 0,i=i$1,res=0;
      for(;;)
       {if(0 <= i)
         {var res$0=[0,a[1 + i],res],i$0=i - 1 | 0,i=i$0,res=res$0;continue}
        return res}}
    function fold_left(f,x,a)
     {var r=[0,x],_lo_=a.length - 1 - 1 | 0,_ln_=0;
      if(! (_lo_ < 0))
       {var i=_ln_;
        for(;;)
         {r[1] = caml_call2(f,r[1],a[1 + i]);
          var _lp_=i + 1 | 0;
          if(_lo_ !== i){var i=_lp_;continue}
          break}}
      return r[1]}
    caml_fresh_oo_id(0);
    function _y_(Ord)
     {function height(param){if(param){var h=param[5];return h}return 0}
      function create(l,x,d,r)
       {var hl=height(l),hr=height(r),_lm_=hr <= hl?hl + 1 | 0:hr + 1 | 0;
        return [0,l,x,d,r,_lm_]}
      function singleton(x,d){return [0,0,x,d,0,1]}
      function bal(l,x,d,r)
       {if(l)var h=l[5],hl=h;else var hl=0;
        if(r)var h$0=r[5],hr=h$0;else var hr=0;
        if((hr + 2 | 0) < hl)
         {if(l)
           {var lr=l[4],ld=l[3],lv=l[2],ll=l[1],_lh_=height(lr);
            if(_lh_ <= height(ll))return create(ll,lv,ld,create(lr,x,d,r));
            if(lr)
             {var
               lrr=lr[4],
               lrd=lr[3],
               lrv=lr[2],
               lrl=lr[1],
               _li_=create(lrr,x,d,r);
              return create(create(ll,lv,ld,lrl),lrv,lrd,_li_)}
            return invalid_arg(_q_)}
          return invalid_arg(_r_)}
        if((hl + 2 | 0) < hr)
         {if(r)
           {var rr=r[4],rd=r[3],rv=r[2],rl=r[1],_lj_=height(rl);
            if(_lj_ <= height(rr))return create(create(l,x,d,rl),rv,rd,rr);
            if(rl)
             {var
               rlr=rl[4],
               rld=rl[3],
               rlv=rl[2],
               rll=rl[1],
               _lk_=create(rlr,rv,rd,rr);
              return create(create(l,x,d,rll),rlv,rld,_lk_)}
            return invalid_arg(_s_)}
          return invalid_arg(_t_)}
        var _ll_=hr <= hl?hl + 1 | 0:hr + 1 | 0;
        return [0,l,x,d,r,_ll_]}
      var empty=0;
      function is_empty(param){return param?0:1}
      function add(x,data,m)
       {if(m)
         {var h=m[5],r=m[4],d=m[3],v=m[2],l=m[1],c=caml_call2(Ord[1],x,v);
          if(0 === c)return d === data?m:[0,l,x,data,r,h];
          if(0 <= c){var rr=add(x,data,r);return r === rr?m:bal(l,v,d,rr)}
          var ll=add(x,data,l);
          return l === ll?m:bal(ll,v,d,r)}
        return [0,0,x,data,0,1]}
      function find(x,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             d=param$0[3],
             v=param$0[2],
             l=param$0[1],
             c=caml_call2(Ord[1],x,v);
            if(0 === c)return d;
            var param$1=0 <= c?r:l,param$0=param$1;
            continue}
          throw Not_found}}
      function find_first(f,param$0)
       {var param$1=param$0;
        for(;;)
         {if(param$1)
           {var r$0=param$1[4],d$0=param$1[3],v$0=param$1[2],l$0=param$1[1];
            if(caml_call1(f,v$0))
             {var v0=v$0,d0=d$0,param=l$0;
              for(;;)
               {if(param)
                 {var r=param[4],d=param[3],v=param[2],l=param[1];
                  if(caml_call1(f,v)){var v0=v,d0=d,param=l;continue}
                  var param=r;
                  continue}
                return [0,v0,d0]}}
            var param$1=r$0;
            continue}
          throw Not_found}}
      function find_first_opt(f,param$0)
       {var param$1=param$0;
        for(;;)
         {if(param$1)
           {var r$0=param$1[4],d$0=param$1[3],v$0=param$1[2],l$0=param$1[1];
            if(caml_call1(f,v$0))
             {var v0=v$0,d0=d$0,param=l$0;
              for(;;)
               {if(param)
                 {var r=param[4],d=param[3],v=param[2],l=param[1];
                  if(caml_call1(f,v)){var v0=v,d0=d,param=l;continue}
                  var param=r;
                  continue}
                return [0,[0,v0,d0]]}}
            var param$1=r$0;
            continue}
          return 0}}
      function find_last(f,param$0)
       {var param$1=param$0;
        for(;;)
         {if(param$1)
           {var r$0=param$1[4],d$0=param$1[3],v$0=param$1[2],l$0=param$1[1];
            if(caml_call1(f,v$0))
             {var v0=v$0,d0=d$0,param=r$0;
              for(;;)
               {if(param)
                 {var r=param[4],d=param[3],v=param[2],l=param[1];
                  if(caml_call1(f,v)){var v0=v,d0=d,param=r;continue}
                  var param=l;
                  continue}
                return [0,v0,d0]}}
            var param$1=l$0;
            continue}
          throw Not_found}}
      function find_last_opt(f,param$0)
       {var param$1=param$0;
        for(;;)
         {if(param$1)
           {var r$0=param$1[4],d$0=param$1[3],v$0=param$1[2],l$0=param$1[1];
            if(caml_call1(f,v$0))
             {var v0=v$0,d0=d$0,param=r$0;
              for(;;)
               {if(param)
                 {var r=param[4],d=param[3],v=param[2],l=param[1];
                  if(caml_call1(f,v)){var v0=v,d0=d,param=r;continue}
                  var param=l;
                  continue}
                return [0,[0,v0,d0]]}}
            var param$1=l$0;
            continue}
          return 0}}
      function find_opt(x,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             d=param$0[3],
             v=param$0[2],
             l=param$0[1],
             c=caml_call2(Ord[1],x,v);
            if(0 === c)return [0,d];
            var param$1=0 <= c?r:l,param$0=param$1;
            continue}
          return 0}}
      function mem(x,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             v=param$0[2],
             l=param$0[1],
             c=caml_call2(Ord[1],x,v),
             _lg_=0 === c?1:0;
            if(_lg_)return _lg_;
            var param$1=0 <= c?r:l,param$0=param$1;
            continue}
          return 0}}
      function min_binding(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var _lf_=param$0[1];
            if(_lf_){var param$0=_lf_;continue}
            var d=param$0[3],v=param$0[2];
            return [0,v,d]}
          throw Not_found}}
      function min_binding_opt(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var _le_=param$0[1];
            if(_le_){var param$0=_le_;continue}
            var d=param$0[3],v=param$0[2];
            return [0,[0,v,d]]}
          return 0}}
      function max_binding(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var _lb_=param$0[4],_lc_=param$0[3],_ld_=param$0[2];
            if(_lb_){var param$0=_lb_;continue}
            return [0,_ld_,_lc_]}
          throw Not_found}}
      function max_binding_opt(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var _k__=param$0[4],_k$_=param$0[3],_la_=param$0[2];
            if(_k__){var param$0=_k__;continue}
            return [0,[0,_la_,_k$_]]}
          return 0}}
      function remove_min_binding(param)
       {if(param)
         {var _k9_=param[1];
          if(_k9_)
           {var r=param[4],d=param[3],v=param[2];
            return bal(remove_min_binding(_k9_),v,d,r)}
          var r$0=param[4];
          return r$0}
        return invalid_arg(_u_)}
      function _kM_(t,match)
       {if(t)
         {if(match)
           {var match$0=min_binding(match),d=match$0[2],x=match$0[1];
            return bal(t,x,d,remove_min_binding(match))}
          return t}
        return match}
      function remove(x,m)
       {if(m)
         {var r=m[4],d=m[3],v=m[2],l=m[1],c=caml_call2(Ord[1],x,v);
          if(0 === c)return _kM_(l,r);
          if(0 <= c){var rr=remove(x,r);return r === rr?m:bal(l,v,d,rr)}
          var ll=remove(x,l);
          return l === ll?m:bal(ll,v,d,r)}
        return 0}
      function update(x,f,m)
       {if(m)
         {var h=m[5],r=m[4],d=m[3],v=m[2],l=m[1],c=caml_call2(Ord[1],x,v);
          if(0 === c)
           {var match=caml_call1(f,[0,d]);
            if(match){var data=match[1];return d === data?m:[0,l,x,data,r,h]}
            return _kM_(l,r)}
          if(0 <= c){var rr=update(x,f,r);return r === rr?m:bal(l,v,d,rr)}
          var ll=update(x,f,l);
          return l === ll?m:bal(ll,v,d,r)}
        var match$0=caml_call1(f,0);
        if(match$0){var data$0=match$0[1];return [0,0,x,data$0,0,1]}
        return 0}
      function iter(f,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var r=param$0[4],d=param$0[3],v=param$0[2],l=param$0[1];
            iter(f,l);
            caml_call2(f,v,d);
            var param$0=r;
            continue}
          return 0}}
      function map(f,param)
       {if(param)
         {var
           h=param[5],
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           l$0=map(f,l),
           d$0=caml_call1(f,d),
           r$0=map(f,r);
          return [0,l$0,v,d$0,r$0,h]}
        return 0}
      function mapi(f,param)
       {if(param)
         {var
           h=param[5],
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           l$0=mapi(f,l),
           d$0=caml_call2(f,v,d),
           r$0=mapi(f,r);
          return [0,l$0,v,d$0,r$0,h]}
        return 0}
      function fold(f,m,accu)
       {var m$0=m,accu$0=accu;
        for(;;)
         {if(m$0)
           {var
             r=m$0[4],
             d=m$0[3],
             v=m$0[2],
             l=m$0[1],
             accu$1=caml_call3(f,v,d,fold(f,l,accu$0)),
             m$0=r,
             accu$0=accu$1;
            continue}
          return accu$0}}
      function for_all(p,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             d=param$0[3],
             v=param$0[2],
             l=param$0[1],
             _k6_=caml_call2(p,v,d);
            if(_k6_)
             {var _k7_=for_all(p,l);
              if(_k7_){var param$0=r;continue}
              var _k8_=_k7_}
            else
             var _k8_=_k6_;
            return _k8_}
          return 1}}
      function exists(p,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             d=param$0[3],
             v=param$0[2],
             l=param$0[1],
             _k3_=caml_call2(p,v,d);
            if(_k3_)
             var _k4_=_k3_;
            else
             {var _k5_=exists(p,l);
              if(! _k5_){var param$0=r;continue}
              var _k4_=_k5_}
            return _k4_}
          return 0}}
      function add_min_binding(k,x,param)
       {if(param)
         {var r=param[4],d=param[3],v=param[2],l=param[1];
          return bal(add_min_binding(k,x,l),v,d,r)}
        return singleton(k,x)}
      function add_max_binding(k,x,param)
       {if(param)
         {var r=param[4],d=param[3],v=param[2],l=param[1];
          return bal(l,v,d,add_max_binding(k,x,r))}
        return singleton(k,x)}
      function join(l,v,d,r)
       {if(l)
         {if(r)
           {var
             rh=r[5],
             rr=r[4],
             rd=r[3],
             rv=r[2],
             rl=r[1],
             lh=l[5],
             lr=l[4],
             ld=l[3],
             lv=l[2],
             ll=l[1];
            return (rh + 2 | 0) < lh
                    ?bal(ll,lv,ld,join(lr,v,d,r))
                    :(lh + 2 | 0) < rh
                      ?bal(join(l,v,d,rl),rv,rd,rr)
                      :create(l,v,d,r)}
          return add_max_binding(v,d,l)}
        return add_min_binding(v,d,r)}
      function concat(t,match)
       {if(t)
         {if(match)
           {var match$0=min_binding(match),d=match$0[2],x=match$0[1];
            return join(t,x,d,remove_min_binding(match))}
          return t}
        return match}
      function concat_or_join(t1,v,d,t2)
       {if(d){var d$0=d[1];return join(t1,v,d$0,t2)}return concat(t1,t2)}
      function split(x,param)
       {if(param)
         {var
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           c=caml_call2(Ord[1],x,v);
          if(0 === c)return [0,l,[0,d],r];
          if(0 <= c)
           {var match=split(x,r),rr=match[3],pres=match[2],lr=match[1];
            return [0,join(l,v,d,lr),pres,rr]}
          var
           match$0=split(x,l),
           rl=match$0[3],
           pres$0=match$0[2],
           ll=match$0[1];
          return [0,ll,pres$0,join(rl,v,d,r)]}
        return _v_}
      function merge(f,s1,s2)
       {if(s1)
         {var h1=s1[5],r1=s1[4],d1=s1[3],v1=s1[2],l1=s1[1];
          if(height(s2) <= h1)
           {var
             match=split(v1,s2),
             r2=match[3],
             d2=match[2],
             l2=match[1],
             _kZ_=merge(f,r1,r2),
             _k0_=caml_call3(f,v1,[0,d1],d2);
            return concat_or_join(merge(f,l1,l2),v1,_k0_,_kZ_)}}
        else
         if(! s2)return 0;
        if(s2)
         {var
           r2$0=s2[4],
           d2$0=s2[3],
           v2=s2[2],
           l2$0=s2[1],
           match$0=split(v2,s1),
           r1$0=match$0[3],
           d1$0=match$0[2],
           l1$0=match$0[1],
           _k1_=merge(f,r1$0,r2$0),
           _k2_=caml_call3(f,v2,d1$0,[0,d2$0]);
          return concat_or_join(merge(f,l1$0,l2$0),v2,_k2_,_k1_)}
        throw [0,Assert_failure,_w_]}
      function union(f,s1,s2)
       {if(s1)
         {if(s2)
           {var
             h2=s2[5],
             r2=s2[4],
             d2=s2[3],
             v2=s2[2],
             l2=s2[1],
             h1=s1[5],
             r1=s1[4],
             d1=s1[3],
             v1=s1[2],
             l1=s1[1];
            if(h2 <= h1)
             {var
               match=split(v1,s2),
               r2$0=match[3],
               d2$0=match[2],
               l2$0=match[1],
               l=union(f,l1,l2$0),
               r=union(f,r1,r2$0);
              if(d2$0)
               {var d2$1=d2$0[1];
                return concat_or_join(l,v1,caml_call3(f,v1,d1,d2$1),r)}
              return join(l,v1,d1,r)}
            var
             match$0=split(v2,s1),
             r1$0=match$0[3],
             d1$0=match$0[2],
             l1$0=match$0[1],
             l$0=union(f,l1$0,l2),
             r$0=union(f,r1$0,r2);
            if(d1$0)
             {var d1$1=d1$0[1];
              return concat_or_join(l$0,v2,caml_call3(f,v2,d1$1,d2),r$0)}
            return join(l$0,v2,d2,r$0)}
          var s=s1}
        else
         var s=s2;
        return s}
      function filter(p,m)
       {if(m)
         {var
           r=m[4],
           d=m[3],
           v=m[2],
           l=m[1],
           l$0=filter(p,l),
           pvd=caml_call2(p,v,d),
           r$0=filter(p,r);
          if(pvd){if(l === l$0)if(r === r$0)return m;return join(l$0,v,d,r$0)}
          return concat(l$0,r$0)}
        return 0}
      function partition(p,param)
       {if(param)
         {var
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           match=partition(p,l),
           lf=match[2],
           lt=match[1],
           pvd=caml_call2(p,v,d),
           match$0=partition(p,r),
           rf=match$0[2],
           rt=match$0[1];
          if(pvd){var _kX_=concat(lf,rf);return [0,join(lt,v,d,rt),_kX_]}
          var _kY_=join(lf,v,d,rf);
          return [0,concat(lt,rt),_kY_]}
        return _x_}
      function cons_enum(m,e)
       {var m$0=m,e$0=e;
        for(;;)
         {if(m$0)
           {var
             r=m$0[4],
             d=m$0[3],
             v=m$0[2],
             m$1=m$0[1],
             e$1=[0,v,d,r,e$0],
             m$0=m$1,
             e$0=e$1;
            continue}
          return e$0}}
      function compare(cmp,m1,m2)
       {var e2$2=cons_enum(m2,0),e1$2=cons_enum(m1,0),e1=e1$2,e2=e2$2;
        for(;;)
         {if(e1)
           {if(e2)
             {var
               e2$0=e2[4],
               r2=e2[3],
               d2=e2[2],
               v2=e2[1],
               e1$0=e1[4],
               r1=e1[3],
               d1=e1[2],
               v1=e1[1],
               c=caml_call2(Ord[1],v1,v2);
              if(0 === c)
               {var c$0=caml_call2(cmp,d1,d2);
                if(0 === c$0)
                 {var
                   e2$1=cons_enum(r2,e2$0),
                   e1$1=cons_enum(r1,e1$0),
                   e1=e1$1,
                   e2=e2$1;
                  continue}
                return c$0}
              return c}
            return 1}
          return e2?-1:0}}
      function equal(cmp,m1,m2)
       {var e2$2=cons_enum(m2,0),e1$2=cons_enum(m1,0),e1=e1$2,e2=e2$2;
        for(;;)
         {if(e1)
           {if(e2)
             {var
               e2$0=e2[4],
               r2=e2[3],
               d2=e2[2],
               v2=e2[1],
               e1$0=e1[4],
               r1=e1[3],
               d1=e1[2],
               v1=e1[1],
               _kU_=0 === caml_call2(Ord[1],v1,v2)?1:0;
              if(_kU_)
               {var _kV_=caml_call2(cmp,d1,d2);
                if(_kV_)
                 {var
                   e2$1=cons_enum(r2,e2$0),
                   e1$1=cons_enum(r1,e1$0),
                   e1=e1$1,
                   e2=e2$1;
                  continue}
                var _kW_=_kV_}
              else
               var _kW_=_kU_;
              return _kW_}
            return 0}
          return e2?0:1}}
      function cardinal(param)
       {if(param)
         {var r=param[4],l=param[1],_kT_=cardinal(r);
          return (cardinal(l) + 1 | 0) + _kT_ | 0}
        return 0}
      function bindings_aux(accu,param)
       {var accu$0=accu,param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             d=param$0[3],
             v=param$0[2],
             l=param$0[1],
             accu$1=[0,[0,v,d],bindings_aux(accu$0,r)],
             accu$0=accu$1,
             param$0=l;
            continue}
          return accu$0}}
      function bindings(s){return bindings_aux(0,s)}
      function add_seq(i,m)
       {var acc=m,seq=i;
        for(;;)
         {var match=caml_call1(seq,0);
          if(match)
           {var
             next=match[2],
             x=match[1],
             v=x[2],
             k=x[1],
             acc$0=add(k,v,acc),
             acc=acc$0,
             seq=next;
            continue}
          return acc}}
      function of_seq(i){return add_seq(i,empty)}
      function seq_of_enum(c,param)
       {if(c)
         {var rest=c[4],t=c[3],v=c[2],k=c[1],_kR_=cons_enum(t,rest);
          return [0,[0,k,v],function(_kS_){return seq_of_enum(_kR_,_kS_)}]}
        return 0}
      function to_seq(m)
       {var _kP_=cons_enum(m,0);
        return function(_kQ_){return seq_of_enum(_kP_,_kQ_)}}
      function to_seq_from(low,m)
       {var m$0=m,c=0;
        for(;;)
         {if(m$0)
           {var
             r=m$0[4],
             d=m$0[3],
             v=m$0[2],
             l=m$0[1],
             n=caml_call2(Ord[1],v,low);
            if(0 !== n)
             {if(0 <= n){var c$0=[0,v,d,r,c],m$0=l,c=c$0;continue}
              var m$0=r;
              continue}
            var _kN_=[0,v,d,r,c]}
          else
           var _kN_=c;
          return function(_kO_){return seq_of_enum(_kN_,_kO_)}}}
      return [0,
              empty,
              is_empty,
              mem,
              add,
              update,
              singleton,
              remove,
              merge,
              union,
              compare,
              equal,
              iter,
              fold,
              for_all,
              exists,
              filter,
              partition,
              cardinal,
              bindings,
              min_binding,
              min_binding_opt,
              max_binding,
              max_binding_opt,
              min_binding,
              min_binding_opt,
              split,
              find,
              find_opt,
              find_first,
              find_first_opt,
              find_last,
              find_last_opt,
              map,
              mapi,
              to_seq,
              to_seq_from,
              add_seq,
              of_seq]}
    var Empty=[248,_z_,caml_fresh_oo_id(0)];
    function create(param){return [0,0,0,0]}
    function add(x,q)
     {var cell=[0,x,0],_kL_=q[3];
      return _kL_
              ?(q[1] = q[1] + 1 | 0,_kL_[2] = cell,q[3] = cell,0)
              :(q[1] = 1,q[2] = cell,q[3] = cell,0)}
    var Undefined=[248,_A_,caml_fresh_oo_id(0)];
    function raise_undefined(param){throw Undefined}
    function force_lazy_block(blk)
     {var closure=blk[1];
      blk[1] = raise_undefined;
      try
       {var result=caml_call1(closure,0);
        blk[1] = result;
        caml_obj_set_tag(blk,250);
        return result}
      catch(e)
       {e = caml_wrap_exception(e);blk[1] = function(param){throw e};throw e}}
    function resize(b,more)
     {var len=b[3],new_len=[0,len];
      for(;;)
       {if(new_len[1] < (b[2] + more | 0))
         {new_len[1] = 2 * new_len[1] | 0;continue}
        if(max_string_length < new_len[1])
         {if(! ((b[2] + more | 0) <= max_string_length))throw [0,Failure,s];
          new_len[1] = max_string_length}
        var new_buffer=caml_create_bytes(new_len[1]);
        blit(b[1],0,new_buffer,0,b[2]);
        b[1] = new_buffer;
        b[3] = new_len[1];
        return 0}}
    function add_string(b,s)
     {var len=caml_ml_string_length(s),new_position=b[2] + len | 0;
      if(b[3] < new_position)resize(b,len);
      blit$0(s,0,b[1],b[2],len);
      b[2] = new_position;
      return 0}
    var default_float_precision=-6;
    function buffer_create(init_size)
     {return [0,0,caml_create_bytes(init_size)]}
    function buffer_check_size(buf,overhead)
     {var
       len=caml_ml_bytes_length(buf[2]),
       min_len=buf[1] + overhead | 0,
       _kJ_=len < min_len?1:0;
      if(_kJ_)
       {var
         new_len=max(len * 2 | 0,min_len),
         new_str=caml_create_bytes(new_len);
        blit(buf[2],0,new_str,0,len);
        buf[2] = new_str;
        var _kK_=0}
      else
       var _kK_=_kJ_;
      return _kK_}
    function buffer_add_char(buf,c)
     {buffer_check_size(buf,1);
      caml_bytes_set(buf[2],buf[1],c);
      buf[1] = buf[1] + 1 | 0;
      return 0}
    function buffer_add_string(buf,s)
     {var str_len=caml_ml_string_length(s);
      buffer_check_size(buf,str_len);
      blit$0(s,0,buf[2],buf[1],str_len);
      buf[1] = buf[1] + str_len | 0;
      return 0}
    function buffer_contents(buf){return sub_string(buf[2],0,buf[1])}
    function string_of_formatting_lit(formatting_lit)
     {if(typeof formatting_lit === "number")
       switch(formatting_lit)
        {case 0:return _B_;
         case 1:return _C_;
         case 2:return _D_;
         case 3:return _E_;
         case 4:return _F_;
         case 5:return _G_;
         default:return _H_}
      else
       switch(formatting_lit[0])
        {case 0:var str=formatting_lit[1];return str;
         case 1:var str$0=formatting_lit[1];return str$0;
         default:var c=formatting_lit[1];return symbol(_I_,make$0(1,c))}}
    function bprint_fmtty(buf,fmtty)
     {var fmtty$0=fmtty;
      for(;;)
       if(typeof fmtty$0 === "number")
        return 0;
       else
        switch(fmtty$0[0])
         {case 0:
           var rest=fmtty$0[1];
           buffer_add_string(buf,_J_);
           var fmtty$0=rest;
           continue;
          case 1:
           var rest$0=fmtty$0[1];
           buffer_add_string(buf,_K_);
           var fmtty$0=rest$0;
           continue;
          case 2:
           var rest$1=fmtty$0[1];
           buffer_add_string(buf,_L_);
           var fmtty$0=rest$1;
           continue;
          case 3:
           var rest$2=fmtty$0[1];
           buffer_add_string(buf,_M_);
           var fmtty$0=rest$2;
           continue;
          case 4:
           var rest$3=fmtty$0[1];
           buffer_add_string(buf,_N_);
           var fmtty$0=rest$3;
           continue;
          case 5:
           var rest$4=fmtty$0[1];
           buffer_add_string(buf,_O_);
           var fmtty$0=rest$4;
           continue;
          case 6:
           var rest$5=fmtty$0[1];
           buffer_add_string(buf,_P_);
           var fmtty$0=rest$5;
           continue;
          case 7:
           var rest$6=fmtty$0[1];
           buffer_add_string(buf,_Q_);
           var fmtty$0=rest$6;
           continue;
          case 8:
           var rest$7=fmtty$0[2],sub_fmtty=fmtty$0[1];
           buffer_add_string(buf,_R_);
           bprint_fmtty(buf,sub_fmtty);
           buffer_add_string(buf,_S_);
           var fmtty$0=rest$7;
           continue;
          case 9:
           var rest$8=fmtty$0[3],sub_fmtty$0=fmtty$0[1];
           buffer_add_string(buf,_T_);
           bprint_fmtty(buf,sub_fmtty$0);
           buffer_add_string(buf,_U_);
           var fmtty$0=rest$8;
           continue;
          case 10:
           var rest$9=fmtty$0[1];
           buffer_add_string(buf,_V_);
           var fmtty$0=rest$9;
           continue;
          case 11:
           var rest$10=fmtty$0[1];
           buffer_add_string(buf,_W_);
           var fmtty$0=rest$10;
           continue;
          case 12:
           var rest$11=fmtty$0[1];
           buffer_add_string(buf,_X_);
           var fmtty$0=rest$11;
           continue;
          case 13:
           var rest$12=fmtty$0[1];
           buffer_add_string(buf,_Y_);
           var fmtty$0=rest$12;
           continue;
          default:
           var rest$13=fmtty$0[1];
           buffer_add_string(buf,_Z_);
           var fmtty$0=rest$13;
           continue}}
    function symm(param)
     {if(typeof param === "number")
       return 0;
      else
       switch(param[0])
        {case 0:var rest=param[1];return [0,symm(rest)];
         case 1:var rest$0=param[1];return [1,symm(rest$0)];
         case 2:var rest$1=param[1];return [2,symm(rest$1)];
         case 3:var rest$2=param[1];return [3,symm(rest$2)];
         case 4:var rest$3=param[1];return [4,symm(rest$3)];
         case 5:var rest$4=param[1];return [5,symm(rest$4)];
         case 6:var rest$5=param[1];return [6,symm(rest$5)];
         case 7:var rest$6=param[1];return [7,symm(rest$6)];
         case 8:var rest$7=param[2],ty=param[1];return [8,ty,symm(rest$7)];
         case 9:
          var rest$8=param[3],ty2=param[2],ty1=param[1];
          return [9,ty2,ty1,symm(rest$8)];
         case 10:var rest$9=param[1];return [10,symm(rest$9)];
         case 11:var rest$10=param[1];return [11,symm(rest$10)];
         case 12:var rest$11=param[1];return [12,symm(rest$11)];
         case 13:var rest$12=param[1];return [13,symm(rest$12)];
         default:var rest$13=param[1];return [14,symm(rest$13)]}}
    function fmtty_rel_det(param)
     {if(typeof param === "number")
       {var
         _kl_=function(param){return 0},
         _km_=function(param){return 0},
         _kn_=function(param){return 0};
        return [0,function(param){return 0},_kn_,_km_,_kl_]}
      else
       switch(param[0])
        {case 0:
          var
           rest=param[1],
           match=fmtty_rel_det(rest),
           de=match[4],
           ed=match[3],
           af=match[2],
           fa=match[1],
           _ko_=function(param){caml_call1(af,0);return 0};
          return [0,function(param){caml_call1(fa,0);return 0},_ko_,ed,de];
         case 1:
          var
           rest$0=param[1],
           match$0=fmtty_rel_det(rest$0),
           de$0=match$0[4],
           ed$0=match$0[3],
           af$0=match$0[2],
           fa$0=match$0[1],
           _kp_=function(param){caml_call1(af$0,0);return 0};
          return [0,
                  function(param){caml_call1(fa$0,0);return 0},
                  _kp_,
                  ed$0,
                  de$0];
         case 2:
          var
           rest$1=param[1],
           match$1=fmtty_rel_det(rest$1),
           de$1=match$1[4],
           ed$1=match$1[3],
           af$1=match$1[2],
           fa$1=match$1[1],
           _kq_=function(param){caml_call1(af$1,0);return 0};
          return [0,
                  function(param){caml_call1(fa$1,0);return 0},
                  _kq_,
                  ed$1,
                  de$1];
         case 3:
          var
           rest$2=param[1],
           match$2=fmtty_rel_det(rest$2),
           de$2=match$2[4],
           ed$2=match$2[3],
           af$2=match$2[2],
           fa$2=match$2[1],
           _kr_=function(param){caml_call1(af$2,0);return 0};
          return [0,
                  function(param){caml_call1(fa$2,0);return 0},
                  _kr_,
                  ed$2,
                  de$2];
         case 4:
          var
           rest$3=param[1],
           match$3=fmtty_rel_det(rest$3),
           de$3=match$3[4],
           ed$3=match$3[3],
           af$3=match$3[2],
           fa$3=match$3[1],
           _ks_=function(param){caml_call1(af$3,0);return 0};
          return [0,
                  function(param){caml_call1(fa$3,0);return 0},
                  _ks_,
                  ed$3,
                  de$3];
         case 5:
          var
           rest$4=param[1],
           match$4=fmtty_rel_det(rest$4),
           de$4=match$4[4],
           ed$4=match$4[3],
           af$4=match$4[2],
           fa$4=match$4[1],
           _kt_=function(param){caml_call1(af$4,0);return 0};
          return [0,
                  function(param){caml_call1(fa$4,0);return 0},
                  _kt_,
                  ed$4,
                  de$4];
         case 6:
          var
           rest$5=param[1],
           match$5=fmtty_rel_det(rest$5),
           de$5=match$5[4],
           ed$5=match$5[3],
           af$5=match$5[2],
           fa$5=match$5[1],
           _ku_=function(param){caml_call1(af$5,0);return 0};
          return [0,
                  function(param){caml_call1(fa$5,0);return 0},
                  _ku_,
                  ed$5,
                  de$5];
         case 7:
          var
           rest$6=param[1],
           match$6=fmtty_rel_det(rest$6),
           de$6=match$6[4],
           ed$6=match$6[3],
           af$6=match$6[2],
           fa$6=match$6[1],
           _kv_=function(param){caml_call1(af$6,0);return 0};
          return [0,
                  function(param){caml_call1(fa$6,0);return 0},
                  _kv_,
                  ed$6,
                  de$6];
         case 8:
          var
           rest$7=param[2],
           match$7=fmtty_rel_det(rest$7),
           de$7=match$7[4],
           ed$7=match$7[3],
           af$7=match$7[2],
           fa$7=match$7[1],
           _kw_=function(param){caml_call1(af$7,0);return 0};
          return [0,
                  function(param){caml_call1(fa$7,0);return 0},
                  _kw_,
                  ed$7,
                  de$7];
         case 9:
          var
           rest$8=param[3],
           ty2=param[2],
           ty1=param[1],
           match$8=fmtty_rel_det(rest$8),
           de$8=match$8[4],
           ed$8=match$8[3],
           af$8=match$8[2],
           fa$8=match$8[1],
           ty=trans(symm(ty1),ty2),
           match$9=fmtty_rel_det(ty),
           jd=match$9[4],
           dj=match$9[3],
           ga=match$9[2],
           ag=match$9[1],
           _kx_=function(param){caml_call1(jd,0);caml_call1(de$8,0);return 0},
           _ky_=function(param){caml_call1(ed$8,0);caml_call1(dj,0);return 0},
           _kz_=function(param){caml_call1(ga,0);caml_call1(af$8,0);return 0};
          return [0,
                  function(param)
                   {caml_call1(fa$8,0);caml_call1(ag,0);return 0},
                  _kz_,
                  _ky_,
                  _kx_];
         case 10:
          var
           rest$9=param[1],
           match$10=fmtty_rel_det(rest$9),
           de$9=match$10[4],
           ed$9=match$10[3],
           af$9=match$10[2],
           fa$9=match$10[1],
           _kA_=function(param){caml_call1(af$9,0);return 0};
          return [0,
                  function(param){caml_call1(fa$9,0);return 0},
                  _kA_,
                  ed$9,
                  de$9];
         case 11:
          var
           rest$10=param[1],
           match$11=fmtty_rel_det(rest$10),
           de$10=match$11[4],
           ed$10=match$11[3],
           af$10=match$11[2],
           fa$10=match$11[1],
           _kB_=function(param){caml_call1(af$10,0);return 0};
          return [0,
                  function(param){caml_call1(fa$10,0);return 0},
                  _kB_,
                  ed$10,
                  de$10];
         case 12:
          var
           rest$11=param[1],
           match$12=fmtty_rel_det(rest$11),
           de$11=match$12[4],
           ed$11=match$12[3],
           af$11=match$12[2],
           fa$11=match$12[1],
           _kC_=function(param){caml_call1(af$11,0);return 0};
          return [0,
                  function(param){caml_call1(fa$11,0);return 0},
                  _kC_,
                  ed$11,
                  de$11];
         case 13:
          var
           rest$12=param[1],
           match$13=fmtty_rel_det(rest$12),
           de$12=match$13[4],
           ed$12=match$13[3],
           af$12=match$13[2],
           fa$12=match$13[1],
           _kD_=function(param){caml_call1(de$12,0);return 0},
           _kE_=function(param){caml_call1(ed$12,0);return 0},
           _kF_=function(param){caml_call1(af$12,0);return 0};
          return [0,
                  function(param){caml_call1(fa$12,0);return 0},
                  _kF_,
                  _kE_,
                  _kD_];
         default:
          var
           rest$13=param[1],
           match$14=fmtty_rel_det(rest$13),
           de$13=match$14[4],
           ed$13=match$14[3],
           af$13=match$14[2],
           fa$13=match$14[1],
           _kG_=function(param){caml_call1(de$13,0);return 0},
           _kH_=function(param){caml_call1(ed$13,0);return 0},
           _kI_=function(param){caml_call1(af$13,0);return 0};
          return [0,
                  function(param){caml_call1(fa$13,0);return 0},
                  _kI_,
                  _kH_,
                  _kG_]}}
    function trans(ty1,match)
     {if(typeof ty1 === "number")
       if(typeof match === "number")
        return 0;
       else
        switch(match[0])
         {case 10:var switch$0=0;break;
          case 11:var switch$0=1;break;
          case 12:var switch$0=2;break;
          case 13:var switch$0=3;break;
          case 14:var switch$0=4;break;
          case 8:var switch$0=5;break;
          case 9:var switch$0=6;break;
          default:throw [0,Assert_failure,___]}
      else
       switch(ty1[0])
        {case 0:
          var _j4_=ty1[1];
          if(typeof match === "number")
           var switch$1=1;
          else
           switch(match[0])
            {case 0:var rest2=match[1];return [0,trans(_j4_,rest2)];
             case 8:var switch$0=5,switch$1=0;break;
             case 9:var switch$0=6,switch$1=0;break;
             case 10:var switch$0=0,switch$1=0;break;
             case 11:var switch$0=1,switch$1=0;break;
             case 12:var switch$0=2,switch$1=0;break;
             case 13:var switch$0=3,switch$1=0;break;
             case 14:var switch$0=4,switch$1=0;break;
             default:var switch$1=1}
          if(switch$1)var switch$0=7;
          break;
         case 1:
          var _j5_=ty1[1];
          if(typeof match === "number")
           var switch$2=1;
          else
           switch(match[0])
            {case 1:var rest2$0=match[1];return [1,trans(_j5_,rest2$0)];
             case 8:var switch$0=5,switch$2=0;break;
             case 9:var switch$0=6,switch$2=0;break;
             case 10:var switch$0=0,switch$2=0;break;
             case 11:var switch$0=1,switch$2=0;break;
             case 12:var switch$0=2,switch$2=0;break;
             case 13:var switch$0=3,switch$2=0;break;
             case 14:var switch$0=4,switch$2=0;break;
             default:var switch$2=1}
          if(switch$2)var switch$0=7;
          break;
         case 2:
          var _j6_=ty1[1];
          if(typeof match === "number")
           var switch$3=1;
          else
           switch(match[0])
            {case 2:var rest2$1=match[1];return [2,trans(_j6_,rest2$1)];
             case 8:var switch$0=5,switch$3=0;break;
             case 9:var switch$0=6,switch$3=0;break;
             case 10:var switch$0=0,switch$3=0;break;
             case 11:var switch$0=1,switch$3=0;break;
             case 12:var switch$0=2,switch$3=0;break;
             case 13:var switch$0=3,switch$3=0;break;
             case 14:var switch$0=4,switch$3=0;break;
             default:var switch$3=1}
          if(switch$3)var switch$0=7;
          break;
         case 3:
          var _j7_=ty1[1];
          if(typeof match === "number")
           var switch$4=1;
          else
           switch(match[0])
            {case 3:var rest2$2=match[1];return [3,trans(_j7_,rest2$2)];
             case 8:var switch$0=5,switch$4=0;break;
             case 9:var switch$0=6,switch$4=0;break;
             case 10:var switch$0=0,switch$4=0;break;
             case 11:var switch$0=1,switch$4=0;break;
             case 12:var switch$0=2,switch$4=0;break;
             case 13:var switch$0=3,switch$4=0;break;
             case 14:var switch$0=4,switch$4=0;break;
             default:var switch$4=1}
          if(switch$4)var switch$0=7;
          break;
         case 4:
          var _j8_=ty1[1];
          if(typeof match === "number")
           var switch$5=1;
          else
           switch(match[0])
            {case 4:var rest2$3=match[1];return [4,trans(_j8_,rest2$3)];
             case 8:var switch$0=5,switch$5=0;break;
             case 9:var switch$0=6,switch$5=0;break;
             case 10:var switch$0=0,switch$5=0;break;
             case 11:var switch$0=1,switch$5=0;break;
             case 12:var switch$0=2,switch$5=0;break;
             case 13:var switch$0=3,switch$5=0;break;
             case 14:var switch$0=4,switch$5=0;break;
             default:var switch$5=1}
          if(switch$5)var switch$0=7;
          break;
         case 5:
          var _j9_=ty1[1];
          if(typeof match === "number")
           var switch$6=1;
          else
           switch(match[0])
            {case 5:var rest2$4=match[1];return [5,trans(_j9_,rest2$4)];
             case 8:var switch$0=5,switch$6=0;break;
             case 9:var switch$0=6,switch$6=0;break;
             case 10:var switch$0=0,switch$6=0;break;
             case 11:var switch$0=1,switch$6=0;break;
             case 12:var switch$0=2,switch$6=0;break;
             case 13:var switch$0=3,switch$6=0;break;
             case 14:var switch$0=4,switch$6=0;break;
             default:var switch$6=1}
          if(switch$6)var switch$0=7;
          break;
         case 6:
          var _j__=ty1[1];
          if(typeof match === "number")
           var switch$7=1;
          else
           switch(match[0])
            {case 6:var rest2$5=match[1];return [6,trans(_j__,rest2$5)];
             case 8:var switch$0=5,switch$7=0;break;
             case 9:var switch$0=6,switch$7=0;break;
             case 10:var switch$0=0,switch$7=0;break;
             case 11:var switch$0=1,switch$7=0;break;
             case 12:var switch$0=2,switch$7=0;break;
             case 13:var switch$0=3,switch$7=0;break;
             case 14:var switch$0=4,switch$7=0;break;
             default:var switch$7=1}
          if(switch$7)var switch$0=7;
          break;
         case 7:
          var _j$_=ty1[1];
          if(typeof match === "number")
           var switch$8=1;
          else
           switch(match[0])
            {case 7:var rest2$6=match[1];return [7,trans(_j$_,rest2$6)];
             case 8:var switch$0=5,switch$8=0;break;
             case 9:var switch$0=6,switch$8=0;break;
             case 10:var switch$0=0,switch$8=0;break;
             case 11:var switch$0=1,switch$8=0;break;
             case 12:var switch$0=2,switch$8=0;break;
             case 13:var switch$0=3,switch$8=0;break;
             case 14:var switch$0=4,switch$8=0;break;
             default:var switch$8=1}
          if(switch$8)var switch$0=7;
          break;
         case 8:
          var _ka_=ty1[2],_kb_=ty1[1];
          if(typeof match === "number")
           var switch$9=1;
          else
           switch(match[0])
            {case 8:
              var rest2$7=match[2],ty2=match[1],_kc_=trans(_ka_,rest2$7);
              return [8,trans(_kb_,ty2),_kc_];
             case 10:var switch$0=0,switch$9=0;break;
             case 11:var switch$0=1,switch$9=0;break;
             case 12:var switch$0=2,switch$9=0;break;
             case 13:var switch$0=3,switch$9=0;break;
             case 14:var switch$0=4,switch$9=0;break;
             default:var switch$9=1}
          if(switch$9)throw [0,Assert_failure,_ah_];
          break;
         case 9:
          var _kd_=ty1[3],_ke_=ty1[2],_kf_=ty1[1];
          if(typeof match === "number")
           var switch$10=1;
          else
           switch(match[0])
            {case 8:var switch$0=5,switch$10=0;break;
             case 9:
              var
               rest2$8=match[3],
               ty22=match[2],
               ty21=match[1],
               ty=trans(symm(_ke_),ty21),
               match$0=fmtty_rel_det(ty),
               f4=match$0[4],
               f2=match$0[2];
              caml_call1(f2,0);
              caml_call1(f4,0);
              return [9,_kf_,ty22,trans(_kd_,rest2$8)];
             case 10:var switch$0=0,switch$10=0;break;
             case 11:var switch$0=1,switch$10=0;break;
             case 12:var switch$0=2,switch$10=0;break;
             case 13:var switch$0=3,switch$10=0;break;
             case 14:var switch$0=4,switch$10=0;break;
             default:var switch$10=1}
          if(switch$10)throw [0,Assert_failure,_ai_];
          break;
         case 10:
          var _kg_=ty1[1];
          if(typeof match !== "number" && 10 === match[0])
           {var rest2$9=match[1];return [10,trans(_kg_,rest2$9)]}
          throw [0,Assert_failure,_aj_];
         case 11:
          var _kh_=ty1[1];
          if(typeof match === "number")
           var switch$11=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$11=0;break;
             case 11:var rest2$10=match[1];return [11,trans(_kh_,rest2$10)];
             default:var switch$11=1}
          if(switch$11)throw [0,Assert_failure,_ak_];
          break;
         case 12:
          var _ki_=ty1[1];
          if(typeof match === "number")
           var switch$12=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$12=0;break;
             case 11:var switch$0=1,switch$12=0;break;
             case 12:var rest2$11=match[1];return [12,trans(_ki_,rest2$11)];
             default:var switch$12=1}
          if(switch$12)throw [0,Assert_failure,_al_];
          break;
         case 13:
          var _kj_=ty1[1];
          if(typeof match === "number")
           var switch$13=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$13=0;break;
             case 11:var switch$0=1,switch$13=0;break;
             case 12:var switch$0=2,switch$13=0;break;
             case 13:var rest2$12=match[1];return [13,trans(_kj_,rest2$12)];
             default:var switch$13=1}
          if(switch$13)throw [0,Assert_failure,_am_];
          break;
         default:
          var _kk_=ty1[1];
          if(typeof match === "number")
           var switch$14=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$14=0;break;
             case 11:var switch$0=1,switch$14=0;break;
             case 12:var switch$0=2,switch$14=0;break;
             case 13:var switch$0=3,switch$14=0;break;
             case 14:var rest2$13=match[1];return [14,trans(_kk_,rest2$13)];
             default:var switch$14=1}
          if(switch$14)throw [0,Assert_failure,_an_]}
      switch(switch$0)
       {case 0:throw [0,Assert_failure,_ab_];
        case 1:throw [0,Assert_failure,_ac_];
        case 2:throw [0,Assert_failure,_ad_];
        case 3:throw [0,Assert_failure,_ae_];
        case 4:throw [0,Assert_failure,_af_];
        case 5:throw [0,Assert_failure,_$_];
        case 6:throw [0,Assert_failure,_aa_];
        default:throw [0,Assert_failure,_ag_]}}
    var Type_mismatch=[248,_ao_,caml_fresh_oo_id(0)];
    function type_padding(pad,match)
     {if(typeof pad === "number")
       return [0,0,match];
      else
       {if(0 === pad[0])
         {var w=pad[2],padty=pad[1];return [0,[0,padty,w],match]}
        if(typeof match !== "number" && 2 === match[0])
         {var rest=match[1],padty$0=pad[1];return [0,[1,padty$0],rest]}
        throw Type_mismatch}}
    function type_padprec(pad,prec,fmtty)
     {var match=type_padding(pad,fmtty);
      if(typeof prec === "number")
       {if(0 === prec)
         {var rest=match[2],pad$0=match[1];return [0,pad$0,0,rest]}
        var _j3_=match[2];
        if(typeof _j3_ !== "number" && 2 === _j3_[0])
         {var rest$0=_j3_[1],pad$1=match[1];return [0,pad$1,1,rest$0]}
        throw Type_mismatch}
      var rest$1=match[2],pad$2=match[1],p=prec[1];
      return [0,pad$2,[0,p],rest$1]}
    function type_ignored_param_one(ign,fmt,fmtty)
     {var match=type_format_gen(fmt,fmtty),fmtty$0=match[2],fmt$0=match[1];
      return [0,[23,ign,fmt$0],fmtty$0]}
    function type_format_gen(fmt,fmtty)
     {if(typeof fmt === "number")
       return [0,0,fmtty];
      else
       switch(fmt[0])
        {case 0:
          if(typeof fmtty !== "number" && 0 === fmtty[0])
           {var
             fmtty_rest=fmtty[1],
             fmt_rest=fmt[1],
             match=type_format_gen(fmt_rest,fmtty_rest),
             fmtty$0=match[2],
             fmt$0=match[1];
            return [0,[0,fmt$0],fmtty$0]}
          break;
         case 1:
          if(typeof fmtty !== "number" && 0 === fmtty[0])
           {var
             fmtty_rest$0=fmtty[1],
             fmt_rest$0=fmt[1],
             match$0=type_format_gen(fmt_rest$0,fmtty_rest$0),
             fmtty$1=match$0[2],
             fmt$1=match$0[1];
            return [0,[1,fmt$1],fmtty$1]}
          break;
         case 2:
          var
           fmt_rest$1=fmt[2],
           pad=fmt[1],
           _jy_=type_padding(pad,fmtty),
           _jz_=_jy_[2],
           _jA_=_jy_[1];
          if(typeof _jz_ !== "number" && 1 === _jz_[0])
           {var
             fmtty_rest$1=_jz_[1],
             match$1=type_format_gen(fmt_rest$1,fmtty_rest$1),
             fmtty$2=match$1[2],
             fmt$2=match$1[1];
            return [0,[2,_jA_,fmt$2],fmtty$2]}
          throw Type_mismatch;
         case 3:
          var
           fmt_rest$2=fmt[2],
           pad$0=fmt[1],
           _jB_=type_padding(pad$0,fmtty),
           _jC_=_jB_[2],
           _jD_=_jB_[1];
          if(typeof _jC_ !== "number" && 1 === _jC_[0])
           {var
             fmtty_rest$2=_jC_[1],
             match$2=type_format_gen(fmt_rest$2,fmtty_rest$2),
             fmtty$3=match$2[2],
             fmt$3=match$2[1];
            return [0,[3,_jD_,fmt$3],fmtty$3]}
          throw Type_mismatch;
         case 4:
          var
           fmt_rest$3=fmt[4],
           prec=fmt[3],
           pad$1=fmt[2],
           iconv=fmt[1],
           _jE_=type_padprec(pad$1,prec,fmtty),
           _jF_=_jE_[3],
           _jG_=_jE_[2],
           _jH_=_jE_[1];
          if(typeof _jF_ !== "number" && 2 === _jF_[0])
           {var
             fmtty_rest$3=_jF_[1],
             match$3=type_format_gen(fmt_rest$3,fmtty_rest$3),
             fmtty$4=match$3[2],
             fmt$4=match$3[1];
            return [0,[4,iconv,_jH_,_jG_,fmt$4],fmtty$4]}
          throw Type_mismatch;
         case 5:
          var
           fmt_rest$4=fmt[4],
           prec$0=fmt[3],
           pad$2=fmt[2],
           iconv$0=fmt[1],
           _jI_=type_padprec(pad$2,prec$0,fmtty),
           _jJ_=_jI_[3],
           _jK_=_jI_[2],
           _jL_=_jI_[1];
          if(typeof _jJ_ !== "number" && 3 === _jJ_[0])
           {var
             fmtty_rest$4=_jJ_[1],
             match$4=type_format_gen(fmt_rest$4,fmtty_rest$4),
             fmtty$5=match$4[2],
             fmt$5=match$4[1];
            return [0,[5,iconv$0,_jL_,_jK_,fmt$5],fmtty$5]}
          throw Type_mismatch;
         case 6:
          var
           fmt_rest$5=fmt[4],
           prec$1=fmt[3],
           pad$3=fmt[2],
           iconv$1=fmt[1],
           _jM_=type_padprec(pad$3,prec$1,fmtty),
           _jN_=_jM_[3],
           _jO_=_jM_[2],
           _jP_=_jM_[1];
          if(typeof _jN_ !== "number" && 4 === _jN_[0])
           {var
             fmtty_rest$5=_jN_[1],
             match$5=type_format_gen(fmt_rest$5,fmtty_rest$5),
             fmtty$6=match$5[2],
             fmt$6=match$5[1];
            return [0,[6,iconv$1,_jP_,_jO_,fmt$6],fmtty$6]}
          throw Type_mismatch;
         case 7:
          var
           fmt_rest$6=fmt[4],
           prec$2=fmt[3],
           pad$4=fmt[2],
           iconv$2=fmt[1],
           _jQ_=type_padprec(pad$4,prec$2,fmtty),
           _jR_=_jQ_[3],
           _jS_=_jQ_[2],
           _jT_=_jQ_[1];
          if(typeof _jR_ !== "number" && 5 === _jR_[0])
           {var
             fmtty_rest$6=_jR_[1],
             match$6=type_format_gen(fmt_rest$6,fmtty_rest$6),
             fmtty$7=match$6[2],
             fmt$7=match$6[1];
            return [0,[7,iconv$2,_jT_,_jS_,fmt$7],fmtty$7]}
          throw Type_mismatch;
         case 8:
          var
           fmt_rest$7=fmt[4],
           prec$3=fmt[3],
           pad$5=fmt[2],
           fconv=fmt[1],
           _jU_=type_padprec(pad$5,prec$3,fmtty),
           _jV_=_jU_[3],
           _jW_=_jU_[2],
           _jX_=_jU_[1];
          if(typeof _jV_ !== "number" && 6 === _jV_[0])
           {var
             fmtty_rest$7=_jV_[1],
             match$7=type_format_gen(fmt_rest$7,fmtty_rest$7),
             fmtty$8=match$7[2],
             fmt$8=match$7[1];
            return [0,[8,fconv,_jX_,_jW_,fmt$8],fmtty$8]}
          throw Type_mismatch;
         case 9:
          var
           fmt_rest$8=fmt[2],
           pad$6=fmt[1],
           _jY_=type_padding(pad$6,fmtty),
           _jZ_=_jY_[2],
           _j0_=_jY_[1];
          if(typeof _jZ_ !== "number" && 7 === _jZ_[0])
           {var
             fmtty_rest$8=_jZ_[1],
             match$8=type_format_gen(fmt_rest$8,fmtty_rest$8),
             fmtty$9=match$8[2],
             fmt$9=match$8[1];
            return [0,[9,_j0_,fmt$9],fmtty$9]}
          throw Type_mismatch;
         case 10:
          var
           fmt_rest$9=fmt[1],
           match$9=type_format_gen(fmt_rest$9,fmtty),
           fmtty$10=match$9[2],
           fmt$10=match$9[1];
          return [0,[10,fmt$10],fmtty$10];
         case 11:
          var
           fmt_rest$10=fmt[2],
           str=fmt[1],
           match$10=type_format_gen(fmt_rest$10,fmtty),
           fmtty$11=match$10[2],
           fmt$11=match$10[1];
          return [0,[11,str,fmt$11],fmtty$11];
         case 12:
          var
           fmt_rest$11=fmt[2],
           chr=fmt[1],
           match$11=type_format_gen(fmt_rest$11,fmtty),
           fmtty$12=match$11[2],
           fmt$12=match$11[1];
          return [0,[12,chr,fmt$12],fmtty$12];
         case 13:
          if(typeof fmtty !== "number" && 8 === fmtty[0])
           {var
             fmtty_rest$9=fmtty[2],
             sub_fmtty=fmtty[1],
             fmt_rest$12=fmt[3],
             sub_fmtty$0=fmt[2],
             pad_opt=fmt[1];
            if(caml_notequal([0,sub_fmtty$0],[0,sub_fmtty]))
             throw Type_mismatch;
            var
             match$12=type_format_gen(fmt_rest$12,fmtty_rest$9),
             fmtty$13=match$12[2],
             fmt$13=match$12[1];
            return [0,[13,pad_opt,sub_fmtty,fmt$13],fmtty$13]}
          break;
         case 14:
          if(typeof fmtty !== "number" && 9 === fmtty[0])
           {var
             fmtty_rest$10=fmtty[3],
             sub_fmtty1=fmtty[1],
             fmt_rest$13=fmt[3],
             sub_fmtty$1=fmt[2],
             pad_opt$0=fmt[1],
             _j1_=[0,erase_rel(sub_fmtty1)];
            if(caml_notequal([0,erase_rel(sub_fmtty$1)],_j1_))
             throw Type_mismatch;
            var
             match$13=type_format_gen(fmt_rest$13,erase_rel(fmtty_rest$10)),
             fmtty$14=match$13[2],
             fmt$14=match$13[1];
            return [0,[14,pad_opt$0,sub_fmtty1,fmt$14],fmtty$14]}
          break;
         case 15:
          if(typeof fmtty !== "number" && 10 === fmtty[0])
           {var
             fmtty_rest$11=fmtty[1],
             fmt_rest$14=fmt[1],
             match$14=type_format_gen(fmt_rest$14,fmtty_rest$11),
             fmtty$15=match$14[2],
             fmt$15=match$14[1];
            return [0,[15,fmt$15],fmtty$15]}
          break;
         case 16:
          if(typeof fmtty !== "number" && 11 === fmtty[0])
           {var
             fmtty_rest$12=fmtty[1],
             fmt_rest$15=fmt[1],
             match$15=type_format_gen(fmt_rest$15,fmtty_rest$12),
             fmtty$16=match$15[2],
             fmt$16=match$15[1];
            return [0,[16,fmt$16],fmtty$16]}
          break;
         case 17:
          var
           fmt_rest$16=fmt[2],
           formatting_lit=fmt[1],
           match$16=type_format_gen(fmt_rest$16,fmtty),
           fmtty$17=match$16[2],
           fmt$17=match$16[1];
          return [0,[17,formatting_lit,fmt$17],fmtty$17];
         case 18:
          var fmt_rest$17=fmt[2],formatting_gen=fmt[1];
          if(0 === formatting_gen[0])
           {var
             match$20=formatting_gen[1],
             str$0=match$20[2],
             fmt1=match$20[1],
             match$21=type_format_gen(fmt1,fmtty),
             fmtty2=match$21[2],
             fmt2=match$21[1],
             match$22=type_format_gen(fmt_rest$17,fmtty2),
             fmtty3=match$22[2],
             fmt3=match$22[1];
            return [0,[18,[0,[0,fmt2,str$0]],fmt3],fmtty3]}
          var
           match$23=formatting_gen[1],
           str$1=match$23[2],
           fmt1$0=match$23[1],
           match$24=type_format_gen(fmt1$0,fmtty),
           fmtty2$0=match$24[2],
           fmt2$0=match$24[1],
           match$25=type_format_gen(fmt_rest$17,fmtty2$0),
           fmtty3$0=match$25[2],
           fmt3$0=match$25[1];
          return [0,[18,[1,[0,fmt2$0,str$1]],fmt3$0],fmtty3$0];
         case 19:
          if(typeof fmtty !== "number" && 13 === fmtty[0])
           {var
             fmtty_rest$13=fmtty[1],
             fmt_rest$18=fmt[1],
             match$17=type_format_gen(fmt_rest$18,fmtty_rest$13),
             fmtty$18=match$17[2],
             fmt$18=match$17[1];
            return [0,[19,fmt$18],fmtty$18]}
          break;
         case 20:
          if(typeof fmtty !== "number" && 1 === fmtty[0])
           {var
             fmtty_rest$14=fmtty[1],
             fmt_rest$19=fmt[3],
             char_set=fmt[2],
             width_opt=fmt[1],
             match$18=type_format_gen(fmt_rest$19,fmtty_rest$14),
             fmtty$19=match$18[2],
             fmt$19=match$18[1];
            return [0,[20,width_opt,char_set,fmt$19],fmtty$19]}
          break;
         case 21:
          if(typeof fmtty !== "number" && 2 === fmtty[0])
           {var
             fmtty_rest$15=fmtty[1],
             fmt_rest$20=fmt[2],
             counter=fmt[1],
             match$19=type_format_gen(fmt_rest$20,fmtty_rest$15),
             fmtty$20=match$19[2],
             fmt$20=match$19[1];
            return [0,[21,counter,fmt$20],fmtty$20]}
          break;
         case 23:
          var rest=fmt[2],ign=fmt[1];
          if(typeof ign === "number")
           switch(ign)
            {case 0:return type_ignored_param_one(ign,rest,fmtty);
             case 1:return type_ignored_param_one(ign,rest,fmtty);
             case 2:
              if(typeof fmtty !== "number" && 14 === fmtty[0])
               {var
                 fmtty_rest$16=fmtty[1],
                 match$26=type_format_gen(rest,fmtty_rest$16),
                 fmtty$21=match$26[2],
                 fmt$21=match$26[1];
                return [0,[23,2,fmt$21],fmtty$21]}
              throw Type_mismatch;
             default:return type_ignored_param_one(ign,rest,fmtty)}
          else
           switch(ign[0])
            {case 0:return type_ignored_param_one(ign,rest,fmtty);
             case 1:return type_ignored_param_one(ign,rest,fmtty);
             case 2:return type_ignored_param_one(ign,rest,fmtty);
             case 3:return type_ignored_param_one(ign,rest,fmtty);
             case 4:return type_ignored_param_one(ign,rest,fmtty);
             case 5:return type_ignored_param_one(ign,rest,fmtty);
             case 6:return type_ignored_param_one(ign,rest,fmtty);
             case 7:return type_ignored_param_one(ign,rest,fmtty);
             case 8:
              var sub_fmtty$2=ign[2],pad_opt$1=ign[1];
              return type_ignored_param_one
                      ([8,pad_opt$1,sub_fmtty$2],rest,fmtty);
             case 9:
              var
               sub_fmtty$3=ign[2],
               pad_opt$2=ign[1],
               _j2_=type_ignored_format_substitution(sub_fmtty$3,rest,fmtty),
               match$27=_j2_[2],
               fmtty$22=match$27[2],
               fmt$22=match$27[1],
               sub_fmtty$4=_j2_[1];
              return [0,[23,[9,pad_opt$2,sub_fmtty$4],fmt$22],fmtty$22];
             case 10:return type_ignored_param_one(ign,rest,fmtty);
             default:return type_ignored_param_one(ign,rest,fmtty)}
         }
      throw Type_mismatch}
    function type_ignored_format_substitution(sub_fmtty,fmt,match)
     {if(typeof sub_fmtty === "number")
       return [0,0,type_format_gen(fmt,match)];
      else
       switch(sub_fmtty[0])
        {case 0:
          if(typeof match !== "number" && 0 === match[0])
           {var
             fmtty_rest=match[1],
             sub_fmtty_rest=sub_fmtty[1],
             match$0=
              type_ignored_format_substitution(sub_fmtty_rest,fmt,fmtty_rest),
             fmt$0=match$0[2],
             sub_fmtty_rest$0=match$0[1];
            return [0,[0,sub_fmtty_rest$0],fmt$0]}
          break;
         case 1:
          if(typeof match !== "number" && 1 === match[0])
           {var
             fmtty_rest$0=match[1],
             sub_fmtty_rest$1=sub_fmtty[1],
             match$1=
              type_ignored_format_substitution
               (sub_fmtty_rest$1,fmt,fmtty_rest$0),
             fmt$1=match$1[2],
             sub_fmtty_rest$2=match$1[1];
            return [0,[1,sub_fmtty_rest$2],fmt$1]}
          break;
         case 2:
          if(typeof match !== "number" && 2 === match[0])
           {var
             fmtty_rest$1=match[1],
             sub_fmtty_rest$3=sub_fmtty[1],
             match$2=
              type_ignored_format_substitution
               (sub_fmtty_rest$3,fmt,fmtty_rest$1),
             fmt$2=match$2[2],
             sub_fmtty_rest$4=match$2[1];
            return [0,[2,sub_fmtty_rest$4],fmt$2]}
          break;
         case 3:
          if(typeof match !== "number" && 3 === match[0])
           {var
             fmtty_rest$2=match[1],
             sub_fmtty_rest$5=sub_fmtty[1],
             match$3=
              type_ignored_format_substitution
               (sub_fmtty_rest$5,fmt,fmtty_rest$2),
             fmt$3=match$3[2],
             sub_fmtty_rest$6=match$3[1];
            return [0,[3,sub_fmtty_rest$6],fmt$3]}
          break;
         case 4:
          if(typeof match !== "number" && 4 === match[0])
           {var
             fmtty_rest$3=match[1],
             sub_fmtty_rest$7=sub_fmtty[1],
             match$4=
              type_ignored_format_substitution
               (sub_fmtty_rest$7,fmt,fmtty_rest$3),
             fmt$4=match$4[2],
             sub_fmtty_rest$8=match$4[1];
            return [0,[4,sub_fmtty_rest$8],fmt$4]}
          break;
         case 5:
          if(typeof match !== "number" && 5 === match[0])
           {var
             fmtty_rest$4=match[1],
             sub_fmtty_rest$9=sub_fmtty[1],
             match$5=
              type_ignored_format_substitution
               (sub_fmtty_rest$9,fmt,fmtty_rest$4),
             fmt$5=match$5[2],
             sub_fmtty_rest$10=match$5[1];
            return [0,[5,sub_fmtty_rest$10],fmt$5]}
          break;
         case 6:
          if(typeof match !== "number" && 6 === match[0])
           {var
             fmtty_rest$5=match[1],
             sub_fmtty_rest$11=sub_fmtty[1],
             match$6=
              type_ignored_format_substitution
               (sub_fmtty_rest$11,fmt,fmtty_rest$5),
             fmt$6=match$6[2],
             sub_fmtty_rest$12=match$6[1];
            return [0,[6,sub_fmtty_rest$12],fmt$6]}
          break;
         case 7:
          if(typeof match !== "number" && 7 === match[0])
           {var
             fmtty_rest$6=match[1],
             sub_fmtty_rest$13=sub_fmtty[1],
             match$7=
              type_ignored_format_substitution
               (sub_fmtty_rest$13,fmt,fmtty_rest$6),
             fmt$7=match$7[2],
             sub_fmtty_rest$14=match$7[1];
            return [0,[7,sub_fmtty_rest$14],fmt$7]}
          break;
         case 8:
          if(typeof match !== "number" && 8 === match[0])
           {var
             fmtty_rest$7=match[2],
             sub2_fmtty=match[1],
             sub_fmtty_rest$15=sub_fmtty[2],
             sub2_fmtty$0=sub_fmtty[1];
            if(caml_notequal([0,sub2_fmtty$0],[0,sub2_fmtty]))
             throw Type_mismatch;
            var
             match$8=
              type_ignored_format_substitution
               (sub_fmtty_rest$15,fmt,fmtty_rest$7),
             fmt$8=match$8[2],
             sub_fmtty_rest$16=match$8[1];
            return [0,[8,sub2_fmtty,sub_fmtty_rest$16],fmt$8]}
          break;
         case 9:
          if(typeof match !== "number" && 9 === match[0])
           {var
             fmtty_rest$8=match[3],
             sub2_fmtty$1=match[2],
             sub1_fmtty=match[1],
             sub_fmtty_rest$17=sub_fmtty[3],
             sub2_fmtty$2=sub_fmtty[2],
             sub1_fmtty$0=sub_fmtty[1],
             _jw_=[0,erase_rel(sub1_fmtty)];
            if(caml_notequal([0,erase_rel(sub1_fmtty$0)],_jw_))
             throw Type_mismatch;
            var _jx_=[0,erase_rel(sub2_fmtty$1)];
            if(caml_notequal([0,erase_rel(sub2_fmtty$2)],_jx_))
             throw Type_mismatch;
            var
             sub_fmtty$0=trans(symm(sub1_fmtty),sub2_fmtty$1),
             match$9=fmtty_rel_det(sub_fmtty$0),
             f4=match$9[4],
             f2=match$9[2];
            caml_call1(f2,0);
            caml_call1(f4,0);
            var
             match$10=
              type_ignored_format_substitution
               (erase_rel(sub_fmtty_rest$17),fmt,fmtty_rest$8),
             fmt$9=match$10[2],
             sub_fmtty_rest$18=match$10[1];
            return [0,
                    [9,sub1_fmtty,sub2_fmtty$1,symm(sub_fmtty_rest$18)],
                    fmt$9]}
          break;
         case 10:
          if(typeof match !== "number" && 10 === match[0])
           {var
             fmtty_rest$9=match[1],
             sub_fmtty_rest$19=sub_fmtty[1],
             match$11=
              type_ignored_format_substitution
               (sub_fmtty_rest$19,fmt,fmtty_rest$9),
             fmt$10=match$11[2],
             sub_fmtty_rest$20=match$11[1];
            return [0,[10,sub_fmtty_rest$20],fmt$10]}
          break;
         case 11:
          if(typeof match !== "number" && 11 === match[0])
           {var
             fmtty_rest$10=match[1],
             sub_fmtty_rest$21=sub_fmtty[1],
             match$12=
              type_ignored_format_substitution
               (sub_fmtty_rest$21,fmt,fmtty_rest$10),
             fmt$11=match$12[2],
             sub_fmtty_rest$22=match$12[1];
            return [0,[11,sub_fmtty_rest$22],fmt$11]}
          break;
         case 13:
          if(typeof match !== "number" && 13 === match[0])
           {var
             fmtty_rest$11=match[1],
             sub_fmtty_rest$23=sub_fmtty[1],
             match$13=
              type_ignored_format_substitution
               (sub_fmtty_rest$23,fmt,fmtty_rest$11),
             fmt$12=match$13[2],
             sub_fmtty_rest$24=match$13[1];
            return [0,[13,sub_fmtty_rest$24],fmt$12]}
          break;
         case 14:
          if(typeof match !== "number" && 14 === match[0])
           {var
             fmtty_rest$12=match[1],
             sub_fmtty_rest$25=sub_fmtty[1],
             match$14=
              type_ignored_format_substitution
               (sub_fmtty_rest$25,fmt,fmtty_rest$12),
             fmt$13=match$14[2],
             sub_fmtty_rest$26=match$14[1];
            return [0,[14,sub_fmtty_rest$26],fmt$13]}
          break
         }
      throw Type_mismatch}
    function fix_padding(padty,width,str)
     {var
       len=caml_ml_string_length(str),
       padty$0=0 <= width?padty:0,
       width$0=abs(width);
      if(width$0 <= len)return str;
      var _jv_=2 === padty$0?48:32,res=make(width$0,_jv_);
      switch(padty$0)
       {case 0:blit$0(str,0,res,0,len);break;
        case 1:blit$0(str,0,res,width$0 - len | 0,len);break;
        default:
         if(0 < len)
          {if(43 === caml_string_get(str,0))
            var switch$1=1;
           else
            if(45 === caml_string_get(str,0))
             var switch$1=1;
            else
             if(32 === caml_string_get(str,0))
              var switch$1=1;
             else
              var switch$0=0,switch$1=0;
           if(switch$1)
            {caml_bytes_set(res,0,caml_string_get(str,0));
             blit$0(str,1,res,(width$0 - len | 0) + 1 | 0,len - 1 | 0);
             var switch$0=1}}
         else
          var switch$0=0;
         if(! switch$0)
          {if(1 < len)
            if(48 === caml_string_get(str,0))
             {if(120 === caml_string_get(str,1))
               var switch$3=1;
              else
               if(88 === caml_string_get(str,1))
                var switch$3=1;
               else
                var switch$2=0,switch$3=0;
              if(switch$3)
               {caml_bytes_set(res,1,caml_string_get(str,1));
                blit$0(str,2,res,(width$0 - len | 0) + 2 | 0,len - 2 | 0);
                var switch$2=1}}
            else
             var switch$2=0;
           else
            var switch$2=0;
           if(! switch$2)blit$0(str,0,res,width$0 - len | 0,len)}}
      return caml_string_of_bytes(res)}
    function fix_int_precision(prec,str)
     {var
       prec$0=abs(prec),
       len=caml_ml_string_length(str),
       c=caml_string_get(str,0);
      if(58 <= c)
       var switch$0=71 <= c?5 < (c - 97 | 0) >>> 0?1:0:65 <= c?0:1;
      else
       {if(32 === c)
         var switch$1=1;
        else
         if(43 <= c)
          {var switcher=c - 43 | 0;
           switch(switcher)
            {case 5:
              if(len < (prec$0 + 2 | 0))
               if(1 < len)
                {var
                  switch$2=
                   120 === caml_string_get(str,1)
                    ?0
                    :88 === caml_string_get(str,1)?0:1;
                 if(! switch$2)
                  {var res$1=make(prec$0 + 2 | 0,48);
                   caml_bytes_set(res$1,1,caml_string_get(str,1));
                   blit$0(str,2,res$1,(prec$0 - len | 0) + 4 | 0,len - 2 | 0);
                   return caml_string_of_bytes(res$1)}}
              var switch$0=0,switch$1=0;
              break;
             case 0:
             case 2:var switch$1=1;break;
             case 1:
             case 3:
             case 4:var switch$0=1,switch$1=0;break;
             default:var switch$0=0,switch$1=0}}
         else
          var switch$0=1,switch$1=0;
        if(switch$1)
         {if(len < (prec$0 + 1 | 0))
           {var res$0=make(prec$0 + 1 | 0,48);
            caml_bytes_set(res$0,0,c);
            blit$0(str,1,res$0,(prec$0 - len | 0) + 2 | 0,len - 1 | 0);
            return caml_string_of_bytes(res$0)}
          var switch$0=1}}
      if(! switch$0)
       if(len < prec$0)
        {var res=make(prec$0,48);
         blit$0(str,0,res,prec$0 - len | 0,len);
         return caml_string_of_bytes(res)}
      return str}
    function string_to_caml_string(str)
     {var n$0=caml_ml_string_length(str),i$1=0;
      for(;;)
       {if(n$0 <= i$1)
         var str$0=str;
        else
         {var
           match$0=caml_string_unsafe_get(str,i$1),
           _jt_=match$0 - 32 | 0,
           switch$0=
            59 < _jt_ >>> 0?33 < (_jt_ - 61 | 0) >>> 0?1:0:2 === _jt_?1:0;
          if(! switch$0){var i$2=i$1 + 1 | 0,i$1=i$2;continue}
          var
           s$0=caml_bytes_of_string(str),
           n=[0,0],
           _jm_=caml_ml_bytes_length(s$0) - 1 | 0,
           _jl_=0;
          if(! (_jm_ < 0))
           {var i$0=_jl_;
            for(;;)
             {var match=caml_bytes_unsafe_get(s$0,i$0);
              if(32 <= match)
               {var _jq_=match - 34 | 0;
                if(58 < _jq_ >>> 0)
                 if(93 <= _jq_)var switch$1=0,switch$2=0;else var switch$2=1;
                else
                 if(56 < (_jq_ - 1 | 0) >>> 0)
                  var switch$1=1,switch$2=0;
                 else
                  var switch$2=1;
                if(switch$2)var _jr_=1,switch$1=2}
              else
               var switch$1=11 <= match?13 === match?1:0:8 <= match?1:0;
              switch(switch$1)
               {case 0:var _jr_=4;break;case 1:var _jr_=2;break}
              n[1] = n[1] + _jr_ | 0;
              var _js_=i$0 + 1 | 0;
              if(_jm_ !== i$0){var i$0=_js_;continue}
              break}}
          if(n[1] === caml_ml_bytes_length(s$0))
           {var len=caml_ml_bytes_length(s$0),r=caml_create_bytes(len);
            caml_blit_bytes(s$0,0,r,0,len);
            var _ju_=r}
          else
           {var s=caml_create_bytes(n[1]);
            n[1] = 0;
            var _jo_=caml_ml_bytes_length(s$0) - 1 | 0,_jn_=0;
            if(! (_jo_ < 0))
             {var i=_jn_;
              for(;;)
               {var c=caml_bytes_unsafe_get(s$0,i);
                if(35 <= c)
                 var switch$3=92 === c?1:127 <= c?0:2;
                else
                 if(32 <= c)
                  var switch$3=34 <= c?1:2;
                 else
                  if(14 <= c)
                   var switch$3=0;
                  else
                   switch(c)
                    {case 8:
                      caml_bytes_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_bytes_unsafe_set(s,n[1],98);
                      var switch$3=3;
                      break;
                     case 9:
                      caml_bytes_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_bytes_unsafe_set(s,n[1],116);
                      var switch$3=3;
                      break;
                     case 10:
                      caml_bytes_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_bytes_unsafe_set(s,n[1],110);
                      var switch$3=3;
                      break;
                     case 13:
                      caml_bytes_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_bytes_unsafe_set(s,n[1],114);
                      var switch$3=3;
                      break;
                     default:var switch$3=0}
                switch(switch$3)
                 {case 0:
                   caml_bytes_unsafe_set(s,n[1],92);
                   n[1]++;
                   caml_bytes_unsafe_set(s,n[1],48 + (c / 100 | 0) | 0);
                   n[1]++;
                   caml_bytes_unsafe_set
                    (s,n[1],48 + ((c / 10 | 0) % 10 | 0) | 0);
                   n[1]++;
                   caml_bytes_unsafe_set(s,n[1],48 + (c % 10 | 0) | 0);
                   break;
                  case 1:
                   caml_bytes_unsafe_set(s,n[1],92);
                   n[1]++;
                   caml_bytes_unsafe_set(s,n[1],c);
                   break;
                  case 2:caml_bytes_unsafe_set(s,n[1],c);break
                  }
                n[1]++;
                var _jp_=i + 1 | 0;
                if(_jo_ !== i){var i=_jp_;continue}
                break}}
            var _ju_=s}
          var str$0=caml_string_of_bytes(_ju_)}
        var l=caml_ml_string_length(str$0),res=make(l + 2 | 0,34);
        caml_blit_string(str$0,0,res,1,l);
        return caml_string_of_bytes(res)}}
    function transform_int_alt(iconv,s)
     {if(13 <= iconv)
       {var n=[0,0],_jg_=caml_ml_string_length(s) - 1 | 0,_jf_=0;
        if(! (_jg_ < 0))
         {var i$0=_jf_;
          for(;;)
           {var match=caml_string_unsafe_get(s,i$0),switcher$0=match - 48 | 0;
            if(! (9 < switcher$0 >>> 0))n[1]++;
            var _jk_=i$0 + 1 | 0;
            if(_jg_ !== i$0){var i$0=_jk_;continue}
            break}}
        var
         digits=n[1],
         buf=
          caml_create_bytes
           (caml_ml_string_length(s) + ((digits - 1 | 0) / 3 | 0) | 0),
         pos=[0,0],
         put=function(c){caml_bytes_set(buf,pos[1],c);pos[1]++;return 0},
         left=[0,((digits - 1 | 0) % 3 | 0) + 1 | 0],
         _ji_=caml_ml_string_length(s) - 1 | 0,
         _jh_=0;
        if(! (_ji_ < 0))
         {var i=_jh_;
          for(;;)
           {var c=caml_string_unsafe_get(s,i),switcher=c - 48 | 0;
            if(9 < switcher >>> 0)
             put(c);
            else
             {if(0 === left[1]){put(95);left[1] = 3}left[1] += -1;put(c)}
            var _jj_=i + 1 | 0;
            if(_ji_ !== i){var i=_jj_;continue}
            break}}
        return caml_string_of_bytes(buf)}
      return s}
    function convert_int(iconv,n)
     {switch(iconv)
       {case 1:var _je_=_aq_;break;
        case 2:var _je_=_ar_;break;
        case 4:var _je_=_at_;break;
        case 5:var _je_=_au_;break;
        case 6:var _je_=_av_;break;
        case 7:var _je_=_aw_;break;
        case 8:var _je_=_ax_;break;
        case 9:var _je_=_ay_;break;
        case 10:var _je_=_az_;break;
        case 11:var _je_=_aA_;break;
        case 0:
        case 13:var _je_=_ap_;break;
        case 3:
        case 14:var _je_=_as_;break;
        default:var _je_=_aB_}
      return transform_int_alt(iconv,caml_format_int(_je_,n))}
    function convert_int32(iconv,n)
     {switch(iconv)
       {case 1:var _jd_=_aQ_;break;
        case 2:var _jd_=_aR_;break;
        case 4:var _jd_=_aT_;break;
        case 5:var _jd_=_aU_;break;
        case 6:var _jd_=_aV_;break;
        case 7:var _jd_=_aW_;break;
        case 8:var _jd_=_aX_;break;
        case 9:var _jd_=_aY_;break;
        case 10:var _jd_=_aZ_;break;
        case 11:var _jd_=_a0_;break;
        case 0:
        case 13:var _jd_=_aP_;break;
        case 3:
        case 14:var _jd_=_aS_;break;
        default:var _jd_=_a1_}
      return transform_int_alt(iconv,caml_format_int(_jd_,n))}
    function convert_nativeint(iconv,n)
     {switch(iconv)
       {case 1:var _jc_=_a3_;break;
        case 2:var _jc_=_a4_;break;
        case 4:var _jc_=_a6_;break;
        case 5:var _jc_=_a7_;break;
        case 6:var _jc_=_a8_;break;
        case 7:var _jc_=_a9_;break;
        case 8:var _jc_=_a__;break;
        case 9:var _jc_=_a$_;break;
        case 10:var _jc_=_ba_;break;
        case 11:var _jc_=_bb_;break;
        case 0:
        case 13:var _jc_=_a2_;break;
        case 3:
        case 14:var _jc_=_a5_;break;
        default:var _jc_=_bc_}
      return transform_int_alt(iconv,caml_format_int(_jc_,n))}
    function convert_int64(iconv,n)
     {switch(iconv)
       {case 1:var _jb_=_aD_;break;
        case 2:var _jb_=_aE_;break;
        case 4:var _jb_=_aG_;break;
        case 5:var _jb_=_aH_;break;
        case 6:var _jb_=_aI_;break;
        case 7:var _jb_=_aJ_;break;
        case 8:var _jb_=_aK_;break;
        case 9:var _jb_=_aL_;break;
        case 10:var _jb_=_aM_;break;
        case 11:var _jb_=_aN_;break;
        case 0:
        case 13:var _jb_=_aC_;break;
        case 3:
        case 14:var _jb_=_aF_;break;
        default:var _jb_=_aO_}
      return transform_int_alt(iconv,caml_int64_format(_jb_,n))}
    function convert_float(fconv,prec$0,x)
     {if(16 <= fconv)
       {if(17 <= fconv)
         switch(fconv - 17 | 0)
          {case 2:var switch$0=0;break;
           case 0:
           case 3:var sign=43,switch$0=1;break;
           default:var sign=32,switch$0=1}
        else
         var switch$0=0;
        if(! switch$0)var sign=45;
        var s$0=caml_hexstring_of_float(x,prec$0,sign);
        if(19 <= fconv)
         {var s=caml_bytes_of_string(s$0),l=caml_ml_bytes_length(s);
          if(0 === l)
           var _i9_=s;
          else
           {var r=caml_create_bytes(l),_i6_=l - 1 | 0,_i5_=0;
            if(! (_i6_ < 0))
             {var i=_i5_;
              for(;;)
               {var c=caml_bytes_unsafe_get(s,i);
                if(97 <= c)
                 if(122 < c)
                  var switch$1=0;
                 else
                  var _i7_=c - 32 | 0,switch$1=1;
                else
                 var switch$1=0;
                if(! switch$1)var _i7_=c;
                caml_bytes_unsafe_set(r,i,_i7_);
                var _i8_=i + 1 | 0;
                if(_i6_ !== i){var i=_i8_;continue}
                break}}
            var _i9_=r}
          return caml_string_of_bytes(_i9_)}
        return s$0}
      if(15 === fconv)
       var _i__=_bd_;
      else
       {var prec=abs(prec$0);
        switch(fconv)
         {case 15:var symb=70;break;
          case 0:
          case 1:
          case 2:var symb=102;break;
          case 3:
          case 4:
          case 5:var symb=101;break;
          case 6:
          case 7:
          case 8:var symb=69;break;
          case 9:
          case 10:
          case 11:var symb=103;break;
          case 12:
          case 13:
          case 14:var symb=71;break;
          case 16:
          case 17:
          case 18:var symb=104;break;
          default:var symb=72}
        var buf=buffer_create(16);
        buffer_add_char(buf,37);
        switch(fconv)
         {case 1:
          case 4:
          case 7:
          case 10:
          case 13:
          case 17:
          case 20:buffer_add_char(buf,43);break;
          case 2:
          case 5:
          case 8:
          case 11:
          case 14:
          case 18:
          case 21:buffer_add_char(buf,32);break
          }
        buffer_add_char(buf,46);
        buffer_add_string(buf,caml_new_string("" + prec));
        buffer_add_char(buf,symb);
        var _i__=buffer_contents(buf)}
      var str=caml_format_float(_i__,x);
      if(15 === fconv)
       {var len=caml_ml_string_length(str),match$0=caml_classify_float(x);
        if(3 === match$0)return x < 0.?_be_:_bf_;
        if(4 <= match$0)return _bg_;
        var i$0=0;
        for(;;)
         {if(i$0 === len)
           var _ja_=0;
          else
           {var
             match=caml_string_get(str,i$0),
             _i$_=match - 46 | 0,
             switch$2=
              23 < _i$_ >>> 0?55 === _i$_?1:0:21 < (_i$_ - 1 | 0) >>> 0?1:0;
            if(! switch$2){var i$1=i$0 + 1 | 0,i$0=i$1;continue}
            var _ja_=1}
          return _ja_?str:symbol(str,_bh_)}}
      return str}
    function make_int_padding_precision(k,acc,fmt,pad,match,trans,iconv)
     {if(typeof pad === "number")
       {if(typeof match === "number")
         return 0 === match
                 ?function(x)
                   {var str=caml_call2(trans,iconv,x);
                    return make_printf(k,[4,acc,str],fmt)}
                 :function(p,x)
                   {var str=fix_int_precision(p,caml_call2(trans,iconv,x));
                    return make_printf(k,[4,acc,str],fmt)};
        var p=match[1];
        return function(x)
         {var str=fix_int_precision(p,caml_call2(trans,iconv,x));
          return make_printf(k,[4,acc,str],fmt)}}
      else
       {if(0 === pad[0])
         {var _i2_=pad[2],_i3_=pad[1];
          if(typeof match === "number")
           return 0 === match
                   ?function(x)
                     {var str=fix_padding(_i3_,_i2_,caml_call2(trans,iconv,x));
                      return make_printf(k,[4,acc,str],fmt)}
                   :function(p,x)
                     {var
                       str=
                        fix_padding
                         (_i3_,_i2_,fix_int_precision(p,caml_call2(trans,iconv,x)));
                      return make_printf(k,[4,acc,str],fmt)};
          var p$0=match[1];
          return function(x)
           {var
             str=
              fix_padding
               (_i3_,_i2_,fix_int_precision(p$0,caml_call2(trans,iconv,x)));
            return make_printf(k,[4,acc,str],fmt)}}
        var _i4_=pad[1];
        if(typeof match === "number")
         return 0 === match
                 ?function(w,x)
                   {var str=fix_padding(_i4_,w,caml_call2(trans,iconv,x));
                    return make_printf(k,[4,acc,str],fmt)}
                 :function(w,p,x)
                   {var
                     str=
                      fix_padding
                       (_i4_,w,fix_int_precision(p,caml_call2(trans,iconv,x)));
                    return make_printf(k,[4,acc,str],fmt)};
        var p$1=match[1];
        return function(w,x)
         {var
           str=
            fix_padding
             (_i4_,w,fix_int_precision(p$1,caml_call2(trans,iconv,x)));
          return make_printf(k,[4,acc,str],fmt)}}}
    function make_padding(k,acc,fmt,pad,trans)
     {if(typeof pad === "number")
       return function(x)
        {var new_acc=[4,acc,caml_call1(trans,x)];
         return make_printf(k,new_acc,fmt)};
      else
       {if(0 === pad[0])
         {var width=pad[2],padty=pad[1];
          return function(x)
           {var new_acc=[4,acc,fix_padding(padty,width,caml_call1(trans,x))];
            return make_printf(k,new_acc,fmt)}}
        var padty$0=pad[1];
        return function(w,x)
         {var new_acc=[4,acc,fix_padding(padty$0,w,caml_call1(trans,x))];
          return make_printf(k,new_acc,fmt)}}}
    function make_printf$0(counter,k,acc,fmt)
     {var k$0=k,acc$0=acc,fmt$0=fmt;
      for(;;)
       if(typeof fmt$0 === "number")
        return caml_call1(k$0,acc$0);
       else
        switch(fmt$0[0])
         {case 0:
           var rest=fmt$0[1];
           return function(c)
            {var new_acc=[5,acc$0,c];return make_printf(k$0,new_acc,rest)};
          case 1:
           var rest$0=fmt$0[1];
           return function(c)
            {if(40 <= c)
              if(92 === c)
               var str=_e_,switch$0=2;
              else
               var switch$0=127 <= c?0:1;
             else
              if(32 <= c)
               if(39 <= c)var str=_f_,switch$0=2;else var switch$0=1;
              else
               if(14 <= c)
                var switch$0=0;
               else
                switch(c)
                 {case 8:var str=_g_,switch$0=2;break;
                  case 9:var str=_h_,switch$0=2;break;
                  case 10:var str=_i_,switch$0=2;break;
                  case 13:var str=_j_,switch$0=2;break;
                  default:var switch$0=0}
             switch(switch$0)
              {case 0:
                var s=caml_create_bytes(4);
                caml_bytes_unsafe_set(s,0,92);
                caml_bytes_unsafe_set(s,1,48 + (c / 100 | 0) | 0);
                caml_bytes_unsafe_set(s,2,48 + ((c / 10 | 0) % 10 | 0) | 0);
                caml_bytes_unsafe_set(s,3,48 + (c % 10 | 0) | 0);
                var str=caml_string_of_bytes(s);
                break;
               case 1:
                var s$0=caml_create_bytes(1);
                caml_bytes_unsafe_set(s$0,0,c);
                var str=caml_string_of_bytes(s$0);
                break
               }
             var l=caml_ml_string_length(str),res=make(l + 2 | 0,39);
             caml_blit_string(str,0,res,1,l);
             var new_acc=[4,acc$0,caml_string_of_bytes(res)];
             return make_printf(k$0,new_acc,rest$0)};
          case 2:
           var rest$1=fmt$0[2],pad=fmt$0[1];
           return make_padding(k$0,acc$0,rest$1,pad,function(str){return str});
          case 3:
           var rest$2=fmt$0[2],pad$0=fmt$0[1];
           return make_padding(k$0,acc$0,rest$2,pad$0,string_to_caml_string);
          case 4:
           var rest$3=fmt$0[4],prec=fmt$0[3],pad$1=fmt$0[2],iconv=fmt$0[1];
           return make_int_padding_precision
                   (k$0,acc$0,rest$3,pad$1,prec,convert_int,iconv);
          case 5:
           var
            rest$4=fmt$0[4],
            prec$0=fmt$0[3],
            pad$2=fmt$0[2],
            iconv$0=fmt$0[1];
           return make_int_padding_precision
                   (k$0,acc$0,rest$4,pad$2,prec$0,convert_int32,iconv$0);
          case 6:
           var
            rest$5=fmt$0[4],
            prec$1=fmt$0[3],
            pad$3=fmt$0[2],
            iconv$1=fmt$0[1];
           return make_int_padding_precision
                   (k$0,acc$0,rest$5,pad$3,prec$1,convert_nativeint,iconv$1);
          case 7:
           var
            rest$6=fmt$0[4],
            prec$2=fmt$0[3],
            pad$4=fmt$0[2],
            iconv$2=fmt$0[1];
           return make_int_padding_precision
                   (k$0,acc$0,rest$6,pad$4,prec$2,convert_int64,iconv$2);
          case 8:
           var rest$7=fmt$0[4],prec$3=fmt$0[3],pad$5=fmt$0[2],fconv=fmt$0[1];
           if(typeof pad$5 === "number")
            {if(typeof prec$3 === "number")
              return 0 === prec$3
                      ?function(x)
                        {var str=convert_float(fconv,default_float_precision,x);
                         return make_printf(k$0,[4,acc$0,str],rest$7)}
                      :function(p,x)
                        {var str=convert_float(fconv,p,x);
                         return make_printf(k$0,[4,acc$0,str],rest$7)};
             var p=prec$3[1];
             return function(x)
              {var str=convert_float(fconv,p,x);
               return make_printf(k$0,[4,acc$0,str],rest$7)}}
           else
            {if(0 === pad$5[0])
              {var _iY_=pad$5[2],_iZ_=pad$5[1];
               if(typeof prec$3 === "number")
                return 0 === prec$3
                        ?function(x)
                          {var
                            str=convert_float(fconv,default_float_precision,x),
                            str$0=fix_padding(_iZ_,_iY_,str);
                           return make_printf(k$0,[4,acc$0,str$0],rest$7)}
                        :function(p,x)
                          {var str=fix_padding(_iZ_,_iY_,convert_float(fconv,p,x));
                           return make_printf(k$0,[4,acc$0,str],rest$7)};
               var p$0=prec$3[1];
               return function(x)
                {var str=fix_padding(_iZ_,_iY_,convert_float(fconv,p$0,x));
                 return make_printf(k$0,[4,acc$0,str],rest$7)}}
             var _i0_=pad$5[1];
             if(typeof prec$3 === "number")
              return 0 === prec$3
                      ?function(w,x)
                        {var
                          str=convert_float(fconv,default_float_precision,x),
                          str$0=fix_padding(_i0_,w,str);
                         return make_printf(k$0,[4,acc$0,str$0],rest$7)}
                      :function(w,p,x)
                        {var str=fix_padding(_i0_,w,convert_float(fconv,p,x));
                         return make_printf(k$0,[4,acc$0,str],rest$7)};
             var p$1=prec$3[1];
             return function(w,x)
              {var str=fix_padding(_i0_,w,convert_float(fconv,p$1,x));
               return make_printf(k$0,[4,acc$0,str],rest$7)}}
          case 9:
           var rest$8=fmt$0[2],pad$6=fmt$0[1];
           return make_padding(k$0,acc$0,rest$8,pad$6,string_of_bool);
          case 10:
           var fmt$1=fmt$0[1],acc$1=[7,acc$0],acc$0=acc$1,fmt$0=fmt$1;
           continue;
          case 11:
           var
            fmt$2=fmt$0[2],
            str=fmt$0[1],
            acc$2=[2,acc$0,str],
            acc$0=acc$2,
            fmt$0=fmt$2;
           continue;
          case 12:
           var
            fmt$3=fmt$0[2],
            chr=fmt$0[1],
            acc$3=[3,acc$0,chr],
            acc$0=acc$3,
            fmt$0=fmt$3;
           continue;
          case 13:
           var rest$9=fmt$0[3],sub_fmtty=fmt$0[2],buf=buffer_create(16);
           bprint_fmtty(buf,sub_fmtty);
           var ty=buffer_contents(buf);
           return function(str){return make_printf(k$0,[4,acc$0,ty],rest$9)};
          case 14:
           var rest$10=fmt$0[3],fmtty=fmt$0[2];
           return function(param)
            {var
              fmt$0=param[1],
              fmtty$0=erase_rel(symm(fmtty)),
              _i1_=type_format_gen(fmt$0,fmtty$0);
             if(typeof _i1_[2] === "number")
              {var fmt=_i1_[1];
               return make_printf(k$0,acc$0,concat_fmt(fmt,rest$10))}
             throw Type_mismatch};
          case 15:
           var rest$11=fmt$0[1];
           return function(f,x)
            {return make_printf
                     (k$0,
                      [6,acc$0,function(o){return caml_call2(f,o,x)}],
                      rest$11)};
          case 16:
           var rest$12=fmt$0[1];
           return function(f){return make_printf(k$0,[6,acc$0,f],rest$12)};
          case 17:
           var
            fmt$4=fmt$0[2],
            fmting_lit=fmt$0[1],
            acc$4=[0,acc$0,fmting_lit],
            acc$0=acc$4,
            fmt$0=fmt$4;
           continue;
          case 18:
           var _iW_=fmt$0[1];
           if(0 === _iW_[0])
            {var
              rest$13=fmt$0[2],
              match=_iW_[1],
              fmt$5=match[1],
              k$3=
               function(acc,k,rest)
                {function k$0(kacc)
                  {return make_printf(k,[1,acc,[0,kacc]],rest)}
                 return k$0},
              k$1=k$3(acc$0,k$0,rest$13),
              k$0=k$1,
              acc$0=0,
              fmt$0=fmt$5;
             continue}
           var
            rest$14=fmt$0[2],
            match$0=_iW_[1],
            fmt$6=match$0[1],
            k$4=
             function(acc,k,rest)
              {function k$0(kacc){return make_printf(k,[1,acc,[1,kacc]],rest)}
               return k$0},
            k$2=k$4(acc$0,k$0,rest$14),
            k$0=k$2,
            acc$0=0,
            fmt$0=fmt$6;
           continue;
          case 19:throw [0,Assert_failure,_bi_];
          case 20:
           var rest$15=fmt$0[3],new_acc=[8,acc$0,_bj_];
           return function(param){return make_printf(k$0,new_acc,rest$15)};
          case 21:
           var rest$16=fmt$0[2];
           return function(n)
            {var new_acc=[4,acc$0,caml_format_int(_bk_,n)];
             return make_printf(k$0,new_acc,rest$16)};
          case 22:
           var rest$17=fmt$0[1];
           return function(c)
            {var new_acc=[5,acc$0,c];return make_printf(k$0,new_acc,rest$17)};
          case 23:
           var rest$18=fmt$0[2],ign=fmt$0[1];
           if(typeof ign === "number")
            switch(ign)
             {case 0:
               if(counter < 50)
                {var counter$1=counter + 1 | 0;
                 return make_invalid_arg(counter$1,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 1:
               if(counter < 50)
                {var counter$2=counter + 1 | 0;
                 return make_invalid_arg(counter$2,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 2:throw [0,Assert_failure,_bl_];
              default:
               if(counter < 50)
                {var counter$3=counter + 1 | 0;
                 return make_invalid_arg(counter$3,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18])}
           else
            switch(ign[0])
             {case 0:
               if(counter < 50)
                {var counter$4=counter + 1 | 0;
                 return make_invalid_arg(counter$4,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 1:
               if(counter < 50)
                {var counter$5=counter + 1 | 0;
                 return make_invalid_arg(counter$5,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 2:
               if(counter < 50)
                {var counter$6=counter + 1 | 0;
                 return make_invalid_arg(counter$6,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 3:
               if(counter < 50)
                {var counter$7=counter + 1 | 0;
                 return make_invalid_arg(counter$7,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 4:
               if(counter < 50)
                {var counter$8=counter + 1 | 0;
                 return make_invalid_arg(counter$8,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 5:
               if(counter < 50)
                {var counter$9=counter + 1 | 0;
                 return make_invalid_arg(counter$9,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 6:
               if(counter < 50)
                {var counter$10=counter + 1 | 0;
                 return make_invalid_arg(counter$10,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 7:
               if(counter < 50)
                {var counter$11=counter + 1 | 0;
                 return make_invalid_arg(counter$11,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 8:
               if(counter < 50)
                {var counter$12=counter + 1 | 0;
                 return make_invalid_arg(counter$12,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              case 9:
               var fmtty$0=ign[2];
               if(counter < 50)
                {var counter$15=counter + 1 | 0;
                 return make_from_fmtty$0
                         (counter$15,k$0,acc$0,fmtty$0,rest$18)}
               return caml_trampoline_return
                       (make_from_fmtty$0,[0,k$0,acc$0,fmtty$0,rest$18]);
              case 10:
               if(counter < 50)
                {var counter$13=counter + 1 | 0;
                 return make_invalid_arg(counter$13,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18]);
              default:
               if(counter < 50)
                {var counter$14=counter + 1 | 0;
                 return make_invalid_arg(counter$14,k$0,acc$0,rest$18)}
               return caml_trampoline_return
                       (make_invalid_arg,[0,k$0,acc$0,rest$18])}
          default:
           var
            rest$19=fmt$0[3],
            f=fmt$0[2],
            arity=fmt$0[1],
            _iX_=caml_call1(f,0);
           if(counter < 50)
            {var counter$0=counter + 1 | 0;
             return make_custom$0(counter$0,k$0,acc$0,rest$19,arity,_iX_)}
           return caml_trampoline_return
                   (make_custom$0,[0,k$0,acc$0,rest$19,arity,_iX_])}}
    function make_from_fmtty$0(counter,k,acc,fmtty,fmt)
     {if(typeof fmtty === "number")
       {if(counter < 50)
         {var counter$0=counter + 1 | 0;
          return make_invalid_arg(counter$0,k,acc,fmt)}
        return caml_trampoline_return(make_invalid_arg,[0,k,acc,fmt])}
      else
       switch(fmtty[0])
        {case 0:
          var rest=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest,fmt)};
         case 1:
          var rest$0=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest$0,fmt)};
         case 2:
          var rest$1=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest$1,fmt)};
         case 3:
          var rest$2=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest$2,fmt)};
         case 4:
          var rest$3=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest$3,fmt)};
         case 5:
          var rest$4=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest$4,fmt)};
         case 6:
          var rest$5=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest$5,fmt)};
         case 7:
          var rest$6=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest$6,fmt)};
         case 8:
          var rest$7=fmtty[2];
          return function(param){return make_from_fmtty(k,acc,rest$7,fmt)};
         case 9:
          var
           rest$8=fmtty[3],
           ty2=fmtty[2],
           ty1=fmtty[1],
           ty=trans(symm(ty1),ty2);
          return function(param)
           {return make_from_fmtty(k,acc,concat_fmtty(ty,rest$8),fmt)};
         case 10:
          var rest$9=fmtty[1];
          return function(param,_iV_)
           {return make_from_fmtty(k,acc,rest$9,fmt)};
         case 11:
          var rest$10=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest$10,fmt)};
         case 12:
          var rest$11=fmtty[1];
          return function(param){return make_from_fmtty(k,acc,rest$11,fmt)};
         case 13:throw [0,Assert_failure,_bm_];
         default:throw [0,Assert_failure,_bn_]}}
    function make_invalid_arg(counter,k,acc,fmt)
     {var _iU_=[8,acc,_bo_];
      if(counter < 50)
       {var counter$0=counter + 1 | 0;
        return make_printf$0(counter$0,k,_iU_,fmt)}
      return caml_trampoline_return(make_printf$0,[0,k,_iU_,fmt])}
    function make_custom$0(counter,k,acc,rest,arity,f)
     {if(arity)
       {var arity$0=arity[1];
        return function(x)
         {return make_custom(k,acc,rest,arity$0,caml_call1(f,x))}}
      var _iT_=[4,acc,f];
      if(counter < 50)
       {var counter$0=counter + 1 | 0;
        return make_printf$0(counter$0,k,_iT_,rest)}
      return caml_trampoline_return(make_printf$0,[0,k,_iT_,rest])}
    function make_printf(k,acc,fmt)
     {return caml_trampoline(make_printf$0(0,k,acc,fmt))}
    function make_from_fmtty(k,acc,fmtty,fmt)
     {return caml_trampoline(make_from_fmtty$0(0,k,acc,fmtty,fmt))}
    function make_custom(k,acc,rest,arity,f)
     {return caml_trampoline(make_custom$0(0,k,acc,rest,arity,f))}
    function output_acc(o,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0 === "number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:
           var
            fmting_lit=acc$0[2],
            p=acc$0[1],
            s=string_of_formatting_lit(fmting_lit);
           output_acc(o,p);
           return output_string(o,s);
          case 1:
           var _iR_=acc$0[2],_iS_=acc$0[1];
           if(0 === _iR_[0])
            {var acc$1=_iR_[1];
             output_acc(o,_iS_);
             output_string(o,_bp_);
             var acc$0=acc$1;
             continue}
           var acc$2=_iR_[1];
           output_acc(o,_iS_);
           output_string(o,_bq_);
           var acc$0=acc$2;
           continue;
          case 6:
           var f=acc$0[2],p$2=acc$0[1];
           output_acc(o,p$2);
           return caml_call1(f,o);
          case 7:var p$3=acc$0[1];output_acc(o,p$3);return caml_ml_flush(o);
          case 8:
           var msg=acc$0[2],p$4=acc$0[1];
           output_acc(o,p$4);
           return invalid_arg(msg);
          case 2:
          case 4:
           var s$0=acc$0[2],p$0=acc$0[1];
           output_acc(o,p$0);
           return output_string(o,s$0);
          default:
           var c=acc$0[2],p$1=acc$0[1];
           output_acc(o,p$1);
           return caml_ml_output_char(o,c)}}
    function strput_acc(b,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0 === "number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:
           var
            fmting_lit=acc$0[2],
            p=acc$0[1],
            s=string_of_formatting_lit(fmting_lit);
           strput_acc(b,p);
           return add_string(b,s);
          case 1:
           var _iP_=acc$0[2],_iQ_=acc$0[1];
           if(0 === _iP_[0])
            {var acc$1=_iP_[1];
             strput_acc(b,_iQ_);
             add_string(b,_br_);
             var acc$0=acc$1;
             continue}
           var acc$2=_iP_[1];
           strput_acc(b,_iQ_);
           add_string(b,_bs_);
           var acc$0=acc$2;
           continue;
          case 6:
           var f=acc$0[2],p$2=acc$0[1];
           strput_acc(b,p$2);
           return add_string(b,caml_call1(f,0));
          case 7:var acc$3=acc$0[1],acc$0=acc$3;continue;
          case 8:
           var msg=acc$0[2],p$3=acc$0[1];
           strput_acc(b,p$3);
           return invalid_arg(msg);
          case 2:
          case 4:
           var s$0=acc$0[2],p$0=acc$0[1];
           strput_acc(b,p$0);
           return add_string(b,s$0);
          default:
           var c=acc$0[2],p$1=acc$0[1];
           strput_acc(b,p$1);
           var pos=b[2];
           if(b[3] <= pos)resize(b,1);
           caml_bytes_unsafe_set(b[1],pos,c);
           b[2] = pos + 1 | 0;
           return 0}}
    function fprintf(oc,fmt$0)
     {var fmt=fmt$0[1],_iO_=0;
      return make_printf(function(acc){output_acc(oc,acc);return 0},_iO_,fmt)}
    function ksprintf(k,param)
     {var fmt=param[1];
      function k$0(acc)
       {var
         n$0=64,
         n=max_string_length < 64?max_string_length:n$0,
         s=caml_create_bytes(n),
         buf=[0,s,0,n,s];
        strput_acc(buf,acc);
        return caml_call1(k,sub_string(buf[1],0,buf[2]))}
      return make_printf(k$0,0,fmt)}
    function sprintf(fmt){return ksprintf(function(s){return s},fmt)}
    var printers=[0,0];
    function field(x,i$1)
     {var a=x[1 + i$1];
      if(1 - (typeof a === "number"?1:0))
       {if(caml_obj_tag(a) === 252)return caml_call1(sprintf(_bt_),a);
        if(caml_obj_tag(a) === 253)
         {var s=caml_format_float(_d_,a),l=caml_ml_string_length(s),i=0;
          for(;;)
           {if(l <= i)return symbol(s,_c_);
            var
             match=caml_string_get(s,i),
             switch$0=48 <= match?58 <= match?0:1:45 === match?1:0;
            if(switch$0){var i$0=i + 1 | 0,i=i$0;continue}
            return s}}
        return _bu_}
      return caml_call1(sprintf(_bv_),a)}
    function other_fields(x,i)
     {if(x.length - 1 <= i)return _bw_;
      var _iM_=other_fields(x,i + 1 | 0),_iN_=field(x,i);
      return caml_call2(sprintf(_bx_),_iN_,_iM_)}
    function fields(x)
     {var match=x.length - 1;
      if(2 < match >>> 0)
       {var _iJ_=other_fields(x,2),_iK_=field(x,1);
        return caml_call2(sprintf(_by_),_iK_,_iJ_)}
      switch(match)
       {case 0:return _bz_;
        case 1:return _bA_;
        default:var _iL_=field(x,1);return caml_call1(sprintf(_bB_),_iL_)}}
    function to_string(x)
     {function conv(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var tl=param$0[2],hd=param$0[1];
            try {var _iH_=caml_call1(hd,x),_iG_=_iH_}catch(_iI_){var _iG_=0}
            if(_iG_){var s=_iG_[1];return s}
            var param$0=tl;
            continue}
          if(x === Out_of_memory)return _bC_;
          if(x === Stack_overflow)return _bD_;
          if(x[1] === Match_failure)
           {var match=x[2],char$0=match[3],line=match[2],file=match[1];
            return caml_call5
                    (sprintf(locfmt),file,line,char$0,char$0 + 5 | 0,_bE_)}
          if(x[1] === Assert_failure)
           {var
             match$0=x[2],
             char$1=match$0[3],
             line$0=match$0[2],
             file$0=match$0[1];
            return caml_call5
                    (sprintf(locfmt),file$0,line$0,char$1,char$1 + 6 | 0,_bF_)}
          if(x[1] === Undefined_recursive_module)
           {var
             match$1=x[2],
             char$2=match$1[3],
             line$1=match$1[2],
             file$1=match$1[1];
            return caml_call5
                    (sprintf(locfmt),file$1,line$1,char$2,char$2 + 6 | 0,_bG_)}
          if(0 === caml_obj_tag(x))
           {var constructor=x[1][1];return symbol(constructor,fields(x))}
          return x[1]}}
      return conv(printers[1])}
    function print_backtrace(outchan)
     {var
       raw_backtrace=caml_get_exception_raw_backtrace(0),
       a=caml_convert_raw_backtrace(raw_backtrace),
       backtrace=[0,a];
      if(backtrace)
       {var _iE_=a.length - 1 - 1 | 0,_iD_=0;
        if(! (_iE_ < 0))
         {var i=_iD_;
          for(;;)
           {var
             slot=caml_check_bound(a,i)[1 + i],
             info$0=
              function(i)
               {function info(is_raise)
                 {return is_raise?0 === i?_bH_:_bI_:0 === i?_bJ_:_bK_}
                return info},
             info=info$0(i);
            if(0 === slot[0])
             var
              _iw_=slot[5],
              _ix_=slot[4],
              _iy_=slot[3],
              _iz_=slot[6]?_bL_:_bN_,
              _iA_=slot[2],
              _iB_=info(slot[1]),
              match=
               [0,caml_call6(sprintf(_bM_),_iB_,_iA_,_iz_,_iy_,_ix_,_iw_)];
            else
             if(slot[1])
              var match=0;
             else
              var _iC_=info(0),match=[0,caml_call1(sprintf(_bO_),_iC_)];
            if(match){var str=match[1];caml_call1(fprintf(outchan,_bP_),str)}
            var _iF_=i + 1 | 0;
            if(_iE_ !== i){var i=_iF_;continue}
            break}}
        return 0}
      return fprintf(outchan,_bQ_)}
    function register_printer(fn){printers[1] = [0,fn,printers[1]];return 0}
    try
     {var _di_=caml_sys_getenv(_dh_),params=_di_}
    catch(_iu_)
     {_iu_ = caml_wrap_exception(_iu_);
      if(_iu_ !== Not_found)throw _iu_;
      try
       {var _dg_=caml_sys_getenv(_df_),_bT_=_dg_}
      catch(_iv_)
       {_iv_ = caml_wrap_exception(_iv_);
        if(_iv_ !== Not_found)throw _iv_;
        var _bT_=_bS_}
      var params=_bT_}
    var
     randomized_default=contains(params,82),
     prng=
      [246,
       function(_it_)
        {var
          seed$0=caml_sys_random_seed(0),
          result=[0,caml_make_vect(55,0),0],
          seed=0 === seed$0.length - 1?[0,0]:seed$0,
          l=seed.length - 1,
          i$0=0;
         for(;;)
          {caml_check_bound(result[1],i$0)[1 + i$0] = i$0;
           var _is_=i$0 + 1 | 0;
           if(54 !== i$0){var i$0=_is_;continue}
           var accu=[0,_bR_],_io_=54 + max(55,l) | 0,_in_=0;
           if(! (_io_ < 0))
            {var i=_in_;
             for(;;)
              {var
                j=i % 55 | 0,
                k=caml_mod(i,l),
                x=caml_check_bound(seed,k)[1 + k],
                str=symbol(accu[1],caml_new_string("" + x));
               accu[1] = caml_md5_string(str,0,caml_ml_string_length(str));
               var
                _ip_=accu[1],
                _ij_=caml_string_get(_ip_,3) << 24,
                _ik_=caml_string_get(_ip_,2) << 16,
                _il_=caml_string_get(_ip_,1) << 8,
                _im_=
                 ((caml_string_get(_ip_,0) + _il_ | 0) + _ik_ | 0)
                 +
                 _ij_
                 |
                 0,
                _iq_=
                 (caml_check_bound(result[1],j)[1 + j] ^ _im_)
                 &
                 1073741823;
               caml_check_bound(result[1],j)[1 + j] = _iq_;
               var _ir_=i + 1 | 0;
               if(_io_ !== i){var i=_ir_;continue}
               break}}
           result[2] = 0;
           return result}}];
    function create$0(opt,initial_size)
     {if(opt)var sth=opt[1],random=sth;else var random=randomized_default;
      var x=16;
      for(;;)
       {if(! (initial_size <= x))
         if(! (max_array_length < (x * 2 | 0)))
          {var x$0=x * 2 | 0,x=x$0;continue}
        if(random)
         {var
           _ih_=caml_obj_tag(prng),
           _ii_=250 === _ih_?prng[1]:246 === _ih_?force_lazy_block(prng):prng;
          _ii_[2] = (_ii_[2] + 1 | 0) % 55 | 0;
          var
           _ie_=_ii_[2],
           curval=caml_check_bound(_ii_[1],_ie_)[1 + _ie_],
           _if_=(_ii_[2] + 24 | 0) % 55 | 0,
           newval=
            caml_check_bound(_ii_[1],_if_)[1 + _if_]
            +
            (curval ^ (curval >>> 25 | 0) & 31)
            |
            0,
           newval30=newval & 1073741823,
           _ig_=_ii_[2];
          caml_check_bound(_ii_[1],_ig_)[1 + _ig_] = newval30;
          var seed=newval30}
        else
         var seed=0;
        return [0,0,caml_make_vect(x,0),seed,x]}}
    function indexfun(h,key)
     {return 3 <= h.length - 1
              ?caml_hash(10,100,h[3],key) & (h[2].length - 1 - 1 | 0)
              :caml_mod(caml_hash_univ_param(10,100,key),h[2].length - 1)}
    function find$0(h,key)
     {var _id_=indexfun(h,key),match=caml_check_bound(h[2],_id_)[1 + _id_];
      if(match)
       {var k1=match[1],d1=match[2],next1=match[3];
        if(0 === caml_compare(key,k1))return d1;
        if(next1)
         {var k2=next1[1],d2=next1[2],next2=next1[3];
          if(0 === caml_compare(key,k2))return d2;
          if(next2)
           {var k3=next2[1],d3=next2[2],next3=next2[3];
            if(0 === caml_compare(key,k3))return d3;
            var param=next3;
            for(;;)
             {if(param)
               {var k=param[1],data=param[2],next=param[3];
                if(0 === caml_compare(key,k))return data;
                var param=next;
                continue}
              throw Not_found}}
          throw Not_found}
        throw Not_found}
      throw Not_found}
    function register_exception(name,exn)
     {var slot=caml_obj_tag(exn) === 248?exn:exn[1];
      return caml_register_named_value(name,slot)}
    var initial_object_size=2;
    function public_method_label(s)
     {var accu=[0,0],_ia_=caml_ml_string_length(s) - 1 | 0,_h$_=0;
      if(! (_ia_ < 0))
       {var i=_h$_;
        for(;;)
         {var _ib_=caml_string_get(s,i);
          accu[1] = (223 * accu[1] | 0) + _ib_ | 0;
          var _ic_=i + 1 | 0;
          if(_ia_ !== i){var i=_ic_;continue}
          break}}
      accu[1] = accu[1] & 2147483647;
      var tag=1073741823 < accu[1]?accu[1] + 2147483648 | 0:accu[1];
      return tag}
    var
     compare=caml_string_compare,
     Vars=_y_([0,compare]),
     compare$0=caml_string_compare,
     Meths=_y_([0,compare$0]),
     compare$1=caml_int_compare,
     Labs=_y_([0,compare$1]),
     table_count=[0,0],
     dummy_met=caml_obj_block(0,0);
    function fit_size(n){return 2 < n?fit_size((n + 1 | 0) / 2 | 0) * 2 | 0:n}
    function new_table(pub_labels)
     {table_count[1]++;
      var
       len=pub_labels.length - 1,
       methods=caml_make_vect((len * 2 | 0) + 2 | 0,dummy_met);
      caml_check_bound(methods,0)[1] = len;
      var _h5_=((fit_size(len) * 32 | 0) / 8 | 0) - 1 | 0;
      caml_check_bound(methods,1)[2] = _h5_;
      var _h7_=len - 1 | 0,_h6_=0;
      if(! (_h7_ < 0))
       {var i=_h6_;
        for(;;)
         {var
           _h9_=(i * 2 | 0) + 3 | 0,
           _h8_=caml_check_bound(pub_labels,i)[1 + i];
          caml_check_bound(methods,_h9_)[1 + _h9_] = _h8_;
          var _h__=i + 1 | 0;
          if(_h7_ !== i){var i=_h__;continue}
          break}}
      return [0,initial_object_size,methods,Meths[1],Labs[1],0,0,Vars[1],0]}
    function resize$0(array,new_size)
     {var len=array[2].length - 1,_h2_=len < new_size?1:0;
      if(_h2_)
       {var
         a2=caml_make_vect(new_size,dummy_met),
         _h3_=array[2],
         switch$0=
          0 <= len
           ?(_h3_.length - 1 - len | 0) < 0
             ?0
             :(a2.length - 1 - len | 0) < 0
               ?0
               :(caml_array_blit(_h3_,0,a2,0,len),1)
           :0;
        if(! switch$0)invalid_arg(_p_);
        array[2] = a2;
        var _h4_=0}
      else
       var _h4_=_h2_;
      return _h4_}
    var method_count=[0,0],inst_var_count=[0,0];
    function new_method(table)
     {var index=table[2].length - 1;
      resize$0(table,index + 1 | 0);
      return index}
    function get_method_label(table,name)
     {try
       {var _h0_=caml_call2(Meths[27],name,table[3]);return _h0_}
      catch(_h1_)
       {_h1_ = caml_wrap_exception(_h1_);
        if(_h1_ === Not_found)
         {var label=new_method(table);
          table[3] = caml_call3(Meths[4],name,label,table[3]);
          table[4] = caml_call3(Labs[4],label,1,table[4]);
          return label}
        throw _h1_}}
    function new_slot(table)
     {var index=table[1];table[1] = index + 1 | 0;return index}
    function new_variable(table,name)
     {try
       {var _hY_=caml_call2(Vars[27],name,table[7]);return _hY_}
      catch(_hZ_)
       {_hZ_ = caml_wrap_exception(_hZ_);
        if(_hZ_ === Not_found)
         {var index=new_slot(table);
          if(caml_string_notequal(name,_bU_))
           table[7] = caml_call3(Vars[4],name,index,table[7]);
          return index}
        throw _hZ_}}
    function new_cache(table)
     {var n=new_method(table);
      if(0 === (n % 2 | 0))
       var switch$0=0;
      else
       if((2 + ((caml_check_bound(table[2],1)[2] * 16 | 0) / 32 | 0) | 0) < n)
        var switch$0=0;
       else
        var n$0=new_method(table),switch$0=1;
      if(! switch$0)var n$0=n;
      caml_check_bound(table[2],n$0)[1 + n$0] = 0;
      return n$0}
    var window=joo_global_object,no_handler=null,undefined$0=undefined;
    function test(x){return 1 - (x == no_handler?1:0)}
    function iter$1(x,f)
     {var _hX_=1 - (x == no_handler?1:0);return _hX_?caml_call1(f,x):_hX_}
    function case$0(x,f,g)
     {return x == no_handler?caml_call1(f,0):caml_call1(g,x)}
    function test$0(x){return x !== undefined$0?1:0}
    function iter$2(x,f)
     {var _hW_=x !== undefined$0?1:0;return _hW_?caml_call1(f,x):_hW_}
    function case$1(x,f,g)
     {return x === undefined$0?caml_call1(f,0):caml_call1(g,x)}
    function get(x,f){return x === undefined$0?caml_call1(f,0):x}
    var
     true$0=true,
     false$0=false,
     regExp_withFlags=window.RegExp,
     array_length=window.Array,
     date_ms=window.Date,
     math=window.Math,
     Error$0=[248,_bV_,caml_fresh_oo_id(0)];
    register_exception(_bW_,[0,Error$0,{}]);
    (function(exn){throw exn});
    register_printer
     (function(param)
       {if(param[1] === Error$0)
         {var e=param[2];return [0,caml_js_to_string(e.toString())]}
        return 0});
    register_printer
     (function(e)
       {return e instanceof array_length?0:[0,caml_js_to_string(e.toString())]});
    function appendChild(p,n){p.appendChild(n);return 0}
    function removeChild(p,n){p.removeChild(n);return 0}
    function handler(f)
     {return function(e)
       {if(test(e))
         {var res=caml_call1(f,e);
          if(1 - (res | 0))e.preventDefault();
          return res}
        var e$0=event,res$0=caml_call1(f,e$0);
        if(1 - (res$0 | 0))e$0.returnValue = res$0;
        return res$0}}
    function addEventListener(e,typ,h,capt)
     {var capture=[0,capt],passive=0,once=0;
      if(e.addEventListener === undefined$0)
       {var
         ev="on".concat(typ),
         callback=
          function(e)
           {var _hT_=[0,h,e,[0]];
            return function(_hU_,_hV_){return caml_js_call(_hT_,_hU_,_hV_)}};
        e.attachEvent(ev,callback);
        return function(param){return e.detachEvent(ev,callback)}}
      var opts={};
      function iter(t,f){if(t){var b=t[1];return caml_call1(f,b)}return 0}
      iter(capture,function(b){return opts.capture = b});
      iter(once,function(b){return opts.once = b});
      iter(passive,function(b){return opts.passive = b});
      e.addEventListener(typ,h,opts);
      return function(param){return e.removeEventListener(typ,h,opts)}}
    function removeEventListener(id){return caml_call1(id,0)}
    var
     onIE=caml_js_on_ie(0) | 0,
     click="click",
     mouseup="mouseup",
     mousemove="mousemove",
     keydown="keydown",
     touchstart="touchstart",
     touchmove="touchmove",
     touchend="touchend",
     d="2d",
     document=window.document;
    function opt_iter(x,f){if(x){var v=x[1];return caml_call1(f,v)}return 0}
    function createElement(doc,name)
     {return doc.createElement(name.toString())}
    function unsafeCreateElement(doc,name){return createElement(doc,name)}
    var createElementSyntax=[0,785140586];
    function unsafeCreateElementEx(type,name,doc,elt)
     {for(;;)
       {if(0 === type)if(0 === name)return createElement(doc,elt);
        var _hN_=createElementSyntax[1];
        if(785140586 === _hN_)
         {try
           {var
             el=document.createElement('<input name="x">'),
             _hQ_=el.tagName.toLowerCase() === "input"?1:0,
             _hR_=_hQ_?el.name === "x"?1:0:_hQ_,
             _hO_=_hR_}
          catch(_hS_){var _hO_=0}
          var _hP_=_hO_?982028505:-1003883683;
          createElementSyntax[1] = _hP_;
          continue}
        if(982028505 <= _hN_)
         {var a=new array_length();
          a.push("<",elt.toString());
          opt_iter
           (type,
            function(t){a.push(' type="',caml_js_html_escape(t),'"');return 0});
          opt_iter
           (name,
            function(n){a.push(' name="',caml_js_html_escape(n),'"');return 0});
          a.push(">");
          return doc.createElement(a.join(""))}
        var res=createElement(doc,elt);
        opt_iter(type,function(t){return res.type = t});
        opt_iter(name,function(n){return res.name = n});
        return res}}
    function createButton(type,name,doc)
     {return unsafeCreateElementEx(type,name,doc,_bX_)}
    function createUl(doc){return unsafeCreateElement(doc,_bY_)}
    function createDl(doc){return unsafeCreateElement(doc,_bZ_)}
    function createLi(doc){return unsafeCreateElement(doc,_b0_)}
    function createDiv(doc){return unsafeCreateElement(doc,_b1_)}
    function createA(doc){return unsafeCreateElement(doc,_b2_)}
    function createImg(doc){return unsafeCreateElement(doc,_b3_)}
    function createDd(doc){return createElement(doc,_b4_)}
    function createDt(doc){return createElement(doc,_b5_)}
    var Canvas_not_available=[248,_b6_,caml_fresh_oo_id(0)];
    function createCanvas(doc)
     {var c=unsafeCreateElement(doc,_b7_);
      if(1 - test(c.getContext))throw Canvas_not_available;
      return c}
    var html_element=window.HTMLElement;
    html_element === undefined$0;
    function stopPropagation(ev)
     {function _hL_(param){return ev.stopPropagation()}
      function _hM_(param){return ev.cancelBubble = true$0}
      return case$1(ev.stopPropagation,_hM_,_hL_)}
    var
     requestAnimationFrame=
      caml_js_pure_expr
       (function(param)
         {var
           l=
            [0,
             window.requestAnimationFrame,
             [0,
              window.mozRequestAnimationFrame,
              [0,
               window.webkitRequestAnimationFrame,
               [0,
                window.oRequestAnimationFrame,
                [0,window.msRequestAnimationFrame,0]]]]];
          try
           {var
             req=find(function(c){return test$0(c)},l),
             _hJ_=function(callback){return req(callback)};
            return _hJ_}
          catch(_hK_)
           {_hK_ = caml_wrap_exception(_hK_);
            if(_hK_ === Not_found)
             {var
               now=function(param){return new date_ms().getTime()},
               last=[0,now(0)];
              return function(callback)
               {var
                 t=now(0),
                 dt=last[1] + 16.6666666666666679 - t,
                 dt$0=dt < 0.?0.:dt;
                last[1] = t;
                window.setTimeout(callback,dt$0);
                return 0}}
            throw _hK_}}),
     overflow_limit=2147483000.;
    function create$1(param)
     {var
       xmlHttpRequest=window.XMLHttpRequest,
       activeXObject=window.activeXObject;
      try
       {var _hE_=new xmlHttpRequest();return _hE_}
      catch(_hF_)
       {try
         {var _hD_=new activeXObject("Msxml2.XMLHTTP");return _hD_}
        catch(_hG_)
         {try
           {var _hC_=new activeXObject("Msxml3.XMLHTTP");return _hC_}
          catch(_hH_)
           {try
             {var _hB_=new activeXObject("Microsoft.XMLHTTP");return _hB_}
            catch(_hI_){throw [0,Assert_failure,_b8_]}}}}}
    function regexp(s)
     {return new regExp_withFlags(caml_jsbytes_of_string(s),"g")}
    new regExp_withFlags("[$]","g");
    var quote_re=regexp(_b9_);
    function regexp_string(s)
     {return regexp
              (caml_js_to_byte_string
                (caml_jsbytes_of_string(s).replace(quote_re,"\\$&")))}
    var Local_exn=[248,_b__,caml_fresh_oo_id(0)];
    function interrupt(param){throw Local_exn}
    regexp_string(_b$_);
    var plus_re_js_string=new regExp_withFlags("\\+","g");
    function urldecode_js_string_string(s$0)
     {plus_re_js_string.lastIndex = 0;
      var s=s$0.replace(plus_re_js_string," ");
      return caml_js_to_byte_string(window.unescape(s))}
    caml_fresh_oo_id(0);
    function path_of_path_string(s)
     {var l=caml_ml_string_length(s);
      function aux(i)
       {try
         {var _hz_=index_from(s,i,47),j=_hz_}
        catch(_hA_)
         {_hA_ = caml_wrap_exception(_hA_);
          if(_hA_ !== Not_found)throw _hA_;
          var j=l}
        var word=sub$0(s,i,j - i | 0);
        return l <= j?[0,word,0]:[0,word,aux(j + 1 | 0)]}
      var a=aux(0);
      if(a)
       if(! caml_string_notequal(a[1],_ca_))
        {var _hy_=a[2];
         if(! _hy_)return 0;
         if(! caml_string_notequal(_hy_[1],_cb_))if(! _hy_[2])return _cc_}
      return a}
    function decode_arguments_js_string(s)
     {var arr=s.split(make$0(1,38).toString()),len=arr.length;
      function aux(acc,idx)
       {var idx$0=idx;
        for(;;)
         {if(0 <= idx$0)
           try
            {var
              _hq_=idx$0 - 1 | 0,
              _hr_=
               function(s)
                {function _hw_(param)
                  {var
                    y=param[2],
                    x=param[1],
                    _hx_=urldecode_js_string_string(y);
                   return [0,urldecode_js_string_string(x),_hx_]}
                 var index=s.indexOf(make$0(1,61).toString());
                 if(0 <= index)
                  var
                   _hu_=s.slice(index + 1 | 0),
                   _hv_=[0,s.slice(0,index),_hu_];
                 else
                  var _hv_=undefined$0;
                 return case$1(_hv_,interrupt,_hw_)},
              _hs_=aux([0,case$1(arr[idx$0],interrupt,_hr_),acc],_hq_);
             return _hs_}
           catch(_ht_)
            {_ht_ = caml_wrap_exception(_ht_);
             if(_ht_ === Local_exn)
              {var idx$1=idx$0 - 1 | 0,idx$0=idx$1;continue}
             throw _ht_}
          return acc}}
      return aux(0,len - 1 | 0)}
    new regExp_withFlags(caml_jsbytes_of_string(_cd_));
    new regExp_withFlags(caml_jsbytes_of_string(_ce_));
    if(test$0(window.location))
     var _cf_=window.location;
    else
     var
      empty="",
      _c$_=[0,0,0,0],
      _da_=
       function
        (self,
         href,
         protocol,
         host,
         hostname,
         port,
         pathname,
         search,
         hash,
         origin,
         reload,
         replace,
         assign)
        {if(! _c$_[1])
          {if(public_methods === 0)
            var _gU_=new_table([0]);
           else
            {var
              tags=map(public_method_label,public_methods),
              table=new_table(tags),
              _gQ_=public_methods.length - 1 - 1 | 0,
              _gP_=0;
             if(! (_gQ_ < 0))
              {var i=_gP_;
               for(;;)
                {var met=public_methods[1 + i],lab=(i * 2 | 0) + 2 | 0;
                 table[3] = caml_call3(Meths[4],met,lab,table[3]);
                 table[4] = caml_call3(Labs[4],lab,1,table[4]);
                 var _gR_=i + 1 | 0;
                 if(_gQ_ !== i){var i=_gR_;continue}
                 break}}
             var _gU_=table}
           var
            _gV_=new_variable(_gU_,_db_),
            _gS_=map(function(_hp_){return get_method_label(_gU_,_hp_)},names),
            _gW_=_gS_[1],
            _gX_=_gS_[2],
            _gY_=_gS_[3],
            _gZ_=_gS_[4],
            _g0_=_gS_[5],
            _g1_=_gS_[6],
            _g2_=_gS_[7],
            _g3_=_gS_[8],
            _g4_=_gS_[9],
            _g5_=_gS_[10],
            _g6_=_gS_[11],
            _g7_=_gS_[12],
            _g8_=
             function(self_1)
              {var env=self_1[1 + _gV_];return caml_call1(env[2],env[1])},
            _g9_=
             function(self_1)
              {var env=self_1[1 + _gV_];return caml_call1(env[3],env[1])},
            _g__=
             function(self_1)
              {var env=self_1[1 + _gV_];return caml_call1(env[4],env[1])},
            _g$_=function(self_1){var env=self_1[1 + _gV_];return env[5]},
            _ha_=function(self_1){var env=self_1[1 + _gV_];return env[6]},
            _hb_=function(self_1){var env=self_1[1 + _gV_];return env[7]},
            _hc_=function(self_1){var env=self_1[1 + _gV_];return env[8]},
            _hd_=function(self_1){var env=self_1[1 + _gV_];return env[9]},
            _he_=function(self_1){var env=self_1[1 + _gV_];return env[10]},
            _hf_=function(self_1){var env=self_1[1 + _gV_];return env[11]},
            _hg_=function(self_1){var env=self_1[1 + _gV_];return env[12]},
            methods=
             [0,
              _g3_,
              function(self_1){var env=self_1[1 + _gV_];return env[13]},
              _gZ_,
              _hg_,
              _g5_,
              _hf_,
              _g4_,
              _he_,
              _g0_,
              _hd_,
              _g1_,
              _hc_,
              _gW_,
              _hb_,
              _g6_,
              _ha_,
              _g2_,
              _g$_,
              _gY_,
              _g__,
              _gX_,
              _g9_,
              _g7_,
              _g8_],
            len=methods.length - 1,
            i$0=[0,0];
           for(;;)
            {if(i$0[1] < len)
              {var
                _gT_=i$0[1],
                label=caml_check_bound(methods,_gT_)[1 + _gT_],
                next=
                 function(param)
                  {i$0[1]++;
                   var _ho_=i$0[1];
                   return caml_check_bound(methods,_ho_)[1 + _ho_]},
                clo=next(0);
               if(typeof clo === "number")
                switch(clo)
                 {case 0:
                   var
                    x=next(0),
                    clo$0=function(x){return function(obj){return x}}(x);
                   break;
                  case 1:
                   var
                    n=next(0),
                    clo$0=
                     function(n){return function(obj){return obj[1 + n]}}(n);
                   break;
                  case 2:
                   var
                    e=next(0),
                    n$0=next(0),
                    clo$0=
                     function(e,n)
                       {return function(obj){return obj[1 + e][1 + n]}}
                      (e,n$0);
                   break;
                  case 3:
                   var
                    n$1=next(0),
                    clo$0=
                     function(n)
                       {return function(obj){return caml_call1(obj[1][1 + n],obj)}}
                      (n$1);
                   break;
                  case 4:
                   var
                    n$2=next(0),
                    clo$0=
                     function(n){return function(obj,x){obj[1 + n] = x;return 0}}
                      (n$2);
                   break;
                  case 5:
                   var
                    f=next(0),
                    x$0=next(0),
                    clo$0=
                     function(f,x){return function(obj){return caml_call1(f,x)}}
                      (f,x$0);
                   break;
                  case 6:
                   var
                    f$0=next(0),
                    n$3=next(0),
                    clo$0=
                     function(f,n)
                       {return function(obj){return caml_call1(f,obj[1 + n])}}
                      (f$0,n$3);
                   break;
                  case 7:
                   var
                    f$1=next(0),
                    e$0=next(0),
                    n$4=next(0),
                    clo$0=
                     function(f,e,n)
                       {return function(obj)
                         {return caml_call1(f,obj[1 + e][1 + n])}}
                      (f$1,e$0,n$4);
                   break;
                  case 8:
                   var
                    f$2=next(0),
                    n$5=next(0),
                    clo$0=
                     function(f,n)
                       {return function(obj)
                         {return caml_call1(f,caml_call1(obj[1][1 + n],obj))}}
                      (f$2,n$5);
                   break;
                  case 9:
                   var
                    f$3=next(0),
                    x$1=next(0),
                    y=next(0),
                    clo$0=
                     function(f,x,y)
                       {return function(obj){return caml_call2(f,x,y)}}
                      (f$3,x$1,y);
                   break;
                  case 10:
                   var
                    f$4=next(0),
                    x$2=next(0),
                    n$6=next(0),
                    clo$0=
                     function(f,x,n)
                       {return function(obj){return caml_call2(f,x,obj[1 + n])}}
                      (f$4,x$2,n$6);
                   break;
                  case 11:
                   var
                    f$5=next(0),
                    x$3=next(0),
                    e$1=next(0),
                    n$7=next(0),
                    clo$0=
                     function(f,x,e,n)
                       {return function(obj)
                         {return caml_call2(f,x,obj[1 + e][1 + n])}}
                      (f$5,x$3,e$1,n$7);
                   break;
                  case 12:
                   var
                    f$6=next(0),
                    x$4=next(0),
                    n$8=next(0),
                    clo$0=
                     function(f,x,n)
                       {return function(obj)
                         {return caml_call2(f,x,caml_call1(obj[1][1 + n],obj))}}
                      (f$6,x$4,n$8);
                   break;
                  case 13:
                   var
                    f$7=next(0),
                    n$9=next(0),
                    x$5=next(0),
                    clo$0=
                     function(f,n,x)
                       {return function(obj){return caml_call2(f,obj[1 + n],x)}}
                      (f$7,n$9,x$5);
                   break;
                  case 14:
                   var
                    f$8=next(0),
                    e$2=next(0),
                    n$10=next(0),
                    x$6=next(0),
                    clo$0=
                     function(f,e,n,x)
                       {return function(obj)
                         {return caml_call2(f,obj[1 + e][1 + n],x)}}
                      (f$8,e$2,n$10,x$6);
                   break;
                  case 15:
                   var
                    f$9=next(0),
                    n$11=next(0),
                    x$7=next(0),
                    clo$0=
                     function(f,n,x)
                       {return function(obj)
                         {return caml_call2(f,caml_call1(obj[1][1 + n],obj),x)}}
                      (f$9,n$11,x$7);
                   break;
                  case 16:
                   var
                    n$12=next(0),
                    x$8=next(0),
                    clo$0=
                     function(n,x)
                       {return function(obj)
                         {return caml_call2(obj[1][1 + n],obj,x)}}
                      (n$12,x$8);
                   break;
                  case 17:
                   var
                    n$13=next(0),
                    m=next(0),
                    clo$0=
                     function(n,m)
                       {return function(obj)
                         {return caml_call2(obj[1][1 + n],obj,obj[1 + m])}}
                      (n$13,m);
                   break;
                  case 18:
                   var
                    n$14=next(0),
                    e$3=next(0),
                    m$0=next(0),
                    clo$0=
                     function(n,e,m)
                       {return function(obj)
                         {return caml_call2(obj[1][1 + n],obj,obj[1 + e][1 + m])}}
                      (n$14,e$3,m$0);
                   break;
                  case 19:
                   var
                    n$15=next(0),
                    m$1=next(0),
                    clo$0=
                     function(n,m)
                       {return function(obj)
                         {var _hm_=caml_call1(obj[1][1 + m],obj);
                          return caml_call2(obj[1][1 + n],obj,_hm_)}}
                      (n$15,m$1);
                   break;
                  case 20:
                   var
                    m$2=next(0),
                    x$9=next(0),
                    c=new_cache(_gU_),
                    clo$0=
                     function(m,x,c)
                       {return function(obj)
                         {return caml_call2(caml_get_public_method(x,m,0),x,c)}}
                      (m$2,x$9,c);
                   break;
                  case 21:
                   var
                    m$3=next(0),
                    n$16=next(0),
                    c$0=new_cache(_gU_),
                    clo$0=
                     function(m,n,c)
                       {return function(obj)
                         {var _hl_=obj[1 + n];
                          return caml_call2(caml_get_public_method(_hl_,m,0),_hl_,c)}}
                      (m$3,n$16,c$0);
                   break;
                  case 22:
                   var
                    m$4=next(0),
                    e$4=next(0),
                    n$17=next(0),
                    c$1=new_cache(_gU_),
                    clo$0=
                     function(m,e,n,c)
                       {return function(obj)
                         {var _hk_=obj[1 + e][1 + n];
                          return caml_call2(caml_get_public_method(_hk_,m,0),_hk_,c)}}
                      (m$4,e$4,n$17,c$1);
                   break;
                  default:
                   var
                    m$5=next(0),
                    n$18=next(0),
                    c$2=new_cache(_gU_),
                    clo$0=
                     function(m,n,c)
                       {return function(obj)
                         {var _hn_=caml_call1(obj[1][1 + n],obj);
                          return caml_call2(caml_get_public_method(_hn_,m,0),_hn_,c)}}
                      (m$5,n$18,c$2)}
               else
                var clo$0=clo;
               method_count[1]++;
               if(caml_call2(Labs[27],label,_gU_[4]))
                {resize$0(_gU_,label + 1 | 0);
                 caml_check_bound(_gU_[2],label)[1 + label] = clo$0}
               else
                _gU_[6] = [0,[0,label,clo$0],_gU_[6]];
               i$0[1]++;
               continue}
             var
              _hh_=
               function(_hj_)
                {var obj=caml_obj_block(248,_gU_[1]);
                 obj[1] = _gU_[2];
                 var _hi_=caml_set_oo_id(obj);
                 _hi_[1 + _gV_] = _hj_;
                 return _hi_};
             inst_var_count[1] = (inst_var_count[1] + _gU_[1] | 0) - 1 | 0;
             var l1=_gU_[8],l2=0;
             for(;;)
              {if(l1)
                {var l1$0=l1[2],a=l1[1],l2$0=[0,a,l2],l1=l1$0,l2=l2$0;
                 continue}
               _gU_[8] = l2;
               resize$0
                (_gU_,
                 3 + ((caml_check_bound(_gU_[2],1)[2] * 16 | 0) / 32 | 0) | 0);
               _c$_[1] = _hh_;
               break}
             break}}
         return caml_call1
                 (_c$_[1],
                  [0,
                   self,
                   assign,
                   replace,
                   reload,
                   origin,
                   hash,
                   search,
                   pathname,
                   port,
                   hostname,
                   host,
                   protocol,
                   href])},
      _dc_=function(param,_gO_){return 0},
      _dd_=function(param,_gN_){return 0},
      _de_=function(param){return 0},
      _cf_=
       function(t29,t30,t31,t32,t33,t34,t35,t36,t37,t38,t39,t40,param)
         {return {"href":t29,
                  "protocol":t30,
                  "host":t31,
                  "hostname":t32,
                  "port":t33,
                  "pathname":t34,
                  "search":t35,
                  "hash":t36,
                  "origin":t37,
                  "reload":caml_js_wrap_meth_callback(t38),
                  "replace":caml_js_wrap_meth_callback(t39),
                  "assign":caml_js_wrap_meth_callback(t40)}}
        (empty,
         empty,
         empty,
         empty,
         empty,
         empty,
         empty,
         empty,
         undefined$0,
         _de_,
         _dd_,
         _dc_,
         _da_);
    urldecode_js_string_string(_cf_.hostname);
    urldecode_js_string_string(_cf_.protocol);
    try
     {caml_int_of_string(caml_js_to_byte_string(_cf_.port))}
    catch(_gM_)
     {_gM_ = caml_wrap_exception(_gM_);if(_gM_[1] !== Failure)throw _gM_}
    var path_string=urldecode_js_string_string(_cf_.pathname);
    path_of_path_string(path_string);
    var _cg_=_cf_.search.charAt(0) === "?"?_cf_.search.slice(1):_cf_.search;
    decode_arguments_js_string(_cg_);
    urldecode_js_string_string(_cf_.href);
    symbol(s$0,symbol(_c__,git_version));
    var console=caml_js_get_console(0);
    caml_fresh_oo_id(0);
    function create$2(param)
     {var seq=[];caml_update_dummy(seq,[0,seq,seq]);return seq}
    var compare$2=caml_compare,Storage_map=_y_([0,compare$2]);
    function underlying(p)
     {var _gL_=p[1];
      switch(_gL_[0])
       {case 0:return p;
        case 1:return p;
        case 2:return p;
        default:
         var p$0=_gL_[1],p$1=underlying(p$0);
         if(1 - (p$1 === p$0?1:0))p[1] = [3,p$1];
         return p$1}}
    function set_promise_state(p,state){p[1] = state;return p}
    var current_storage=[0,Storage_map[1]];
    function concat_regular_callbacks(l1,l2)
     {return typeof l1 === "number"?l2:typeof l2 === "number"?l1:[0,l1,l2]}
    function clean_up_callback_cells(callbacks)
     {if(typeof callbacks !== "number")
       switch(callbacks[0])
        {case 0:
          var
           l2=callbacks[2],
           l1=callbacks[1],
           l1$0=clean_up_callback_cells(l1),
           l2$0=clean_up_callback_cells(l2);
          return concat_regular_callbacks(l1$0,l2$0);
         case 2:if(! callbacks[1][1])return 0;break
         }
      return callbacks}
    function add_implicitly_removed_callback(callbacks,f)
     {var
       node$0=[1,f],
       _gK_=callbacks[1],
       node=typeof _gK_ === "number"?node$0:[0,node$0,_gK_];
      callbacks[1] = node;
      return 0}
    var
     async_exception_hook=
      [0,
       function(exn)
        {prerr_string(_ch_);
         prerr_string(to_string(exn));
         caml_ml_output_char(stderr,10);
         print_backtrace(stderr);
         caml_ml_flush(stderr);
         do_at_exit(0);
         return caml_sys_exit(2)}];
    function handle_with_async_exception_hook(f,v)
     {try
       {var _gJ_=caml_call1(f,v);return _gJ_}
      catch(exn)
       {exn = caml_wrap_exception(exn);
        return caml_call1(async_exception_hook[1],exn)}}
    var Canceled=[248,_ci_,caml_fresh_oo_id(0)];
    function run_callbacks(callbacks,result)
     {if(1 === result[0])
       var _gH_=result[1] === Canceled?1:0,is_canceled=_gH_;
      else
       var is_canceled=0;
      if(is_canceled)
       {var
         _gF_=callbacks[2],
         iter_callback_list$2=
          function(counter,fs,rest)
           {var fs$0=fs,rest$0=rest;
            for(;;)
             if(typeof fs$0 === "number")
              {if(counter < 50)
                {var counter$0=counter + 1 | 0;
                 return iter_list$0(counter$0,rest$0)}
               return caml_trampoline_return(iter_list$0,[0,rest$0])}
             else
              switch(fs$0[0])
               {case 0:
                 var
                  fs$1=fs$0[2],
                  fs$2=fs$0[1],
                  rest$1=[0,fs$1,rest$0],
                  fs$0=fs$2,
                  rest$0=rest$1;
                 continue;
                case 1:
                 var f=fs$0[2],storage=fs$0[1];
                 current_storage[1] = storage;
                 handle_with_async_exception_hook(f,0);
                 if(counter < 50)
                  {var counter$1=counter + 1 | 0;
                   return iter_list$0(counter$1,rest$0)}
                 return caml_trampoline_return(iter_list$0,[0,rest$0]);
                default:
                 var node=fs$0[1];
                 if(node[4])
                  {node[4] = 0;node[1][2] = node[2];node[2][1] = node[1]}
                 if(counter < 50)
                  {var counter$2=counter + 1 | 0;
                   return iter_list$0(counter$2,rest$0)}
                 return caml_trampoline_return(iter_list$0,[0,rest$0])}},
         iter_list$0=
          function(counter,rest)
           {if(rest)
             {var rest$0=rest[2],fs=rest[1];
              if(counter < 50)
               {var counter$0=counter + 1 | 0;
                return iter_callback_list$2(counter$0,fs,rest$0)}
              return caml_trampoline_return
                      (iter_callback_list$2,[0,fs,rest$0])}
            return 0},
         iter_callback_list=
          function(fs,rest)
           {return caml_trampoline(iter_callback_list$2(0,fs,rest))};
        iter_callback_list(_gF_,0)}
      var _gG_=callbacks[1];
      function iter_callback_list$1(counter,fs,rest)
       {var fs$0=fs,rest$0=rest;
        for(;;)
         if(typeof fs$0 === "number")
          {if(counter < 50)
            {var counter$0=counter + 1 | 0;return iter_list(counter$0,rest$0)}
           return caml_trampoline_return(iter_list,[0,rest$0])}
         else
          switch(fs$0[0])
           {case 0:
             var
              fs$1=fs$0[2],
              fs$2=fs$0[1],
              rest$1=[0,fs$1,rest$0],
              fs$0=fs$2,
              rest$0=rest$1;
             continue;
            case 1:
             var f=fs$0[1];
             caml_call1(f,result);
             if(counter < 50)
              {var counter$1=counter + 1 | 0;
               return iter_list(counter$1,rest$0)}
             return caml_trampoline_return(iter_list,[0,rest$0]);
            default:
             var _gI_=fs$0[1][1];
             if(_gI_)
              {var f$0=_gI_[1];
               caml_call1(f$0,result);
               if(counter < 50)
                {var counter$2=counter + 1 | 0;
                 return iter_list(counter$2,rest$0)}
               return caml_trampoline_return(iter_list,[0,rest$0])}
             if(counter < 50)
              {var counter$3=counter + 1 | 0;
               return iter_list(counter$3,rest$0)}
             return caml_trampoline_return(iter_list,[0,rest$0])}}
      function iter_list(counter,rest)
       {if(rest)
         {var rest$0=rest[2],fs=rest[1];
          if(counter < 50)
           {var counter$0=counter + 1 | 0;
            return iter_callback_list$1(counter$0,fs,rest$0)}
          return caml_trampoline_return(iter_callback_list$1,[0,fs,rest$0])}
        return 0}
      function iter_callback_list$0(fs,rest)
       {return caml_trampoline(iter_callback_list$1(0,fs,rest))}
      return iter_callback_list$0(_gG_,0)}
    var
     current_callback_nesting_depth=[0,0],
     q=create(0),
     default_maximum_callback_nesting_depth=42;
    function run_in_resolution_loop(f)
     {current_callback_nesting_depth[1]
      =
      current_callback_nesting_depth[1]
      +
      1
      |
      0;
      var storage_snapshot=current_storage[1],result$0=caml_call1(f,0);
      if(1 === current_callback_nesting_depth[1])
       for(;;)
        {if(0 !== q[1])
          {var _gC_=q[2];
           if(_gC_)
            {var _gD_=_gC_[1],_gE_=_gC_[2];
             if(_gE_)
              {q[1] = q[1] - 1 | 0;q[2] = _gE_}
             else
              {q[1] = 0;q[2] = 0;q[3] = 0}
             var result=_gD_[2],callbacks=_gD_[1];
             run_callbacks(callbacks,result);
             continue}
           throw Empty}
         break}
      current_callback_nesting_depth[1]
      =
      current_callback_nesting_depth[1]
      -
      1
      |
      0;
      current_storage[1] = storage_snapshot;
      return result$0}
    function resolve
     (allow_deferring$0,maximum_callback_nesting_depth$0,p,result)
     {var match=p[1],callbacks=match[1],p$0=set_promise_state(p,result);
      if(allow_deferring$0)
       var sth=allow_deferring$0[1],allow_deferring=sth;
      else
       var allow_deferring=1;
      if(maximum_callback_nesting_depth$0)
       var
        sth$0=maximum_callback_nesting_depth$0[1],
        maximum_callback_nesting_depth=sth$0;
      else
       var
        maximum_callback_nesting_depth=
         default_maximum_callback_nesting_depth;
      var
       should_defer=
        allow_deferring
         ?maximum_callback_nesting_depth <= current_callback_nesting_depth[1]
           ?1
           :0
         :allow_deferring;
      if(should_defer)
       add([0,callbacks,result],q);
      else
       run_in_resolution_loop
        (function(param){return run_callbacks(callbacks,result)});
      return p$0}
    function run_callback_or_defer_it(opt,f,if_deferred)
     {if(opt)
       var sth=opt[1],run_immediately_and_ensure_tail_call=sth;
      else
       var run_immediately_and_ensure_tail_call=0;
      if(run_immediately_and_ensure_tail_call)return caml_call1(f,0);
      var should_defer=42 <= current_callback_nesting_depth[1]?1:0;
      if(should_defer)
       {var
         match=caml_call1(if_deferred,0),
         deferred_result=match[3],
         deferred_callback=match[2],
         immediate_result=match[1],
         deferred_record=[0,[1,deferred_callback],0,0,0];
        add([0,deferred_record,deferred_result],q);
        return immediate_result}
      return run_in_resolution_loop(function(param){return caml_call1(f,0)})}
    function wakeup_general(api_function_name,p,result)
     {var p$0=underlying(p),_gB_=p$0[1];
      switch(_gB_[0])
       {case 1:
         return _gB_[1] === Canceled
                 ?0
                 :caml_call1(ksprintf(invalid_arg,_ck_),api_function_name);
        case 2:
         if(0 === result[0])
          var x=result[1],result$0=[0,x];
         else
          var exn=result[1],result$0=[1,exn];
         resolve(_cl_,0,p$0,result$0);
         return 0;
        default:
         return caml_call1(ksprintf(invalid_arg,_cj_),api_function_name)}}
    function wakeup(r,v){return wakeup_general(_cm_,r,[0,v])}
    function return$0(v){return [0,[0,v]]}
    function fail(exn){return [0,[1,exn]]}
    function new_pending(how_to_cancel)
     {var state=[2,[0,0,0,how_to_cancel,0]];return [0,state]}
    function task(param){var p=new_pending(1);return [0,p,p]}
    function make_into_proxy(outer_promise,user_provided_promise)
     {var p=underlying(user_provided_promise);
      if(p === outer_promise)return p;
      var _gA_=p[1];
      switch(_gA_[0])
       {case 1:return resolve(_cp_,0,outer_promise,p[1]);
        case 2:
         var
          p_callbacks=_gA_[1],
          match=outer_promise[1],
          outer_callbacks=match[1],
          regular_callbacks=
           concat_regular_callbacks(outer_callbacks[1],p_callbacks[1]),
          cleanups_deferred=outer_callbacks[4] + p_callbacks[4] | 0;
         if(42 < cleanups_deferred)
          var
           regular_callbacks$0=clean_up_callback_cells(regular_callbacks),
           cleanups_deferred$0=0;
         else
          var
           regular_callbacks$0=regular_callbacks,
           cleanups_deferred$0=cleanups_deferred;
         var
          _gy_=p_callbacks[2],
          _gz_=outer_callbacks[2],
          cancel_callbacks=
           typeof _gz_ === "number"
            ?_gy_
            :typeof _gy_ === "number"?_gz_:[0,_gz_,_gy_];
         outer_callbacks[1] = regular_callbacks$0;
         outer_callbacks[2] = cancel_callbacks;
         outer_callbacks[4] = cleanups_deferred$0;
         outer_callbacks[3] = p_callbacks[3];
         set_promise_state(p,[3,outer_promise]);
         return outer_promise;
        default:return resolve(_co_,0,outer_promise,p[1])}}
    function symbol_bind(p,f)
     {var p$0=underlying(p);
      function create_result_promise_and_callback_if_deferred(param)
       {var p=new_pending([0,p$0]),saved_storage=current_storage[1];
        function callback(p_result)
         {if(1 === p_result[0])
           {var p$2=underlying(p);resolve(_cq_,0,p$2,p_result);return 0}
          var v=p_result[1];
          current_storage[1] = saved_storage;
          try
           {var _gx_=caml_call1(f,v),p$0=_gx_}
          catch(exn){exn = caml_wrap_exception(exn);var p$0=fail(exn)}
          var p$1=underlying(p);
          make_into_proxy(p$1,p$0);
          return 0}
        return [0,p,callback]}
      var _gv_=p$0[1];
      switch(_gv_[0])
       {case 1:return [0,_gv_];
        case 2:
         var
          p_callbacks=_gv_[1],
          match=create_result_promise_and_callback_if_deferred(0),
          callback=match[2],
          p$1=match[1];
         add_implicitly_removed_callback(p_callbacks,callback);
         return p$1;
        default:
         var
          v=_gv_[1],
          _gw_=
           function(param)
            {var
              match=create_result_promise_and_callback_if_deferred(0),
              callback=match[2],
              p=match[1];
             return [0,p,callback,p$0[1]]};
         return run_callback_or_defer_it
                 (_cr_,function(param){return caml_call1(f,v)},_gw_)}}
    function on_cancel(p,f)
     {var p$0=underlying(p),_gt_=p$0[1];
      switch(_gt_[0])
       {case 1:
         if(_gt_[1] === Canceled)
          {var
            _gu_=
             function(param)
              {return [0,
                       0,
                       function(param)
                        {return handle_with_async_exception_hook(f,0)},
                       _cs_]};
           return run_callback_or_defer_it
                   (_ct_,
                    function(param)
                     {return handle_with_async_exception_hook(f,0)},
                    _gu_)}
         return 0;
        case 2:
         var
          callbacks=_gt_[1],
          node=[1,current_storage[1],f],
          node$0=typeof callbacks[2] === "number"?node:[0,node,callbacks[2]];
         callbacks[2] = node$0;
         return 0;
        default:return 0}}
    function poll(p)
     {var _gs_=underlying(p)[1];
      switch(_gs_[0])
       {case 1:var e=_gs_[1];throw e;
        case 2:return 0;
        default:var v=_gs_[1];return [0,v]}}
    var pause_hook=[0,function(_gr_){return 0}],s1=create$2(0),_cu_=[0,0];
    function wakeup_paused(param)
     {if(s1[2] === s1){_cu_[1] = 0;return 0}
      var seq=create$2(0);
      seq[1][2] = s1[2];
      s1[2][1] = seq[1];
      seq[1] = s1[1];
      s1[1][2] = seq;
      s1[1] = s1;
      s1[2] = s1;
      _cu_[1] = 0;
      var curr=seq[2];
      for(;;)
       {var _gq_=curr !== seq?1:0;
        if(_gq_)
         {if(curr[4])wakeup(curr[3],0);
          var curr$0=curr[2],curr=curr$0;
          continue}
        return _gq_}}
    function register_pause_notifier(f){pause_hook[1] = f;return 0}
    var Wrong_headers=[248,_cv_,caml_fresh_oo_id(0)];
    function yield$0(param)
     {var match=task(0),w=match[2],t=match[1],d=0.;
      function callback(_gp_){return wakeup(w,_gp_)}
      var id=[0,0];
      function loop(step,param)
       {if(2147483000. < step)
         var step$0=overflow_limit,remain=step - 2147483000.;
        else
         var step$0=step,remain=0.;
        var cb=remain == 0.?callback:function(_go_){return loop(remain,_go_)};
        id[1] = [0,window.setTimeout(caml_js_wrap_callback(cb),step$0)];
        return 0}
      loop(d,0);
      on_cancel
       (t,
        function(param)
         {var _gn_=id[1];
          if(_gn_){var x=_gn_[1];id[1] = 0;return window.clearTimeout(x)}
          return 0});
      return t}
    function wakeup$0(param)
     {return 1 === param
              ?(window.setTimeout(caml_js_wrap_callback(wakeup_paused),0.),0)
              :0}
    register_pause_notifier(wakeup$0);
    function prerr_string$0(s){return console.log(s.toString())}
    async_exception_hook[1]
    =
    function(exn)
     {prerr_string$0(_cw_);
      prerr_string$0(to_string(exn));
      return print_backtrace(stderr)};
    function icon(nm){return symbol(_cx_,nm).toString()}
    var tree_color="#794c0d";
    function option(var$0)
     {return get(var$0,function(param){return new array_length()})}
    var style=option(window.hyp);
    function opt_style(v,default$0)
     {return get(v,function(param){return default$0})}
    function sdiv(z,s){return [254,z[1] / s,z[2] / s]}
    function sq_norm(c){return c[1] * c[1] + c[2] * c[2]}
    function norm(c){return Math.sqrt(sq_norm(c))}
    function conj(z){return [254,z[1],- z[2]]}
    function neg(z){return [254,- z[1],- z[2]]}
    function add$0(z,t){return [254,z[1] + t[1],z[2] + t[2]]}
    function sub$1(z,t){return [254,z[1] - t[1],z[2] - t[2]]}
    function mul(z,t)
     {return [254,z[1] * t[1] - z[2] * t[2],z[1] * t[2] + z[2] * t[1]]}
    function add_mul(a,z,b)
     {return [254,
              a[1] * z[1] - a[2] * z[2] + b[1],
              a[1] * z[2] + a[2] * z[1] + b[2]]}
    function div(z,t)
     {var n=sq_norm(t);
      return [254,
              (z[1] * t[1] + z[2] * t[2]) / n,
              (z[2] * t[1] - z[1] * t[2]) / n]}
    function transf(a,b,c,d,z)
     {var _gm_=add_mul(c,z,d);return div(add_mul(a,z,b),_gm_)}
    function transl(p)
     {var c=mul(conj(p),t);return function(z){return transf(t,p,c,t,z)}}
    function compose(param,_gk_)
     {var
       t2=_gk_[2],
       p2=_gk_[1],
       t1=param[2],
       p1=param[1],
       t2p1=mul(t2,p1),
       den=add$0(mul(t2p1,conj(p2)),t),
       _gl_=div(conj(den),den),
       c=mul(mul(t1,t2),_gl_),
       _gj_=sdiv(c,norm(c));
      return [0,div(add$0(t2p1,p2),den),_gj_]}
    function compute_translation(z0,z1)
     {var dz=sub$1(z1,z0),z0z1=mul(z0,z1),_gi_=1. - sq_norm(z0z1);
      return sdiv(add$0(mul(z0z1,conj(dz)),dz),_gi_)}
    var json=JSON;
    function http_get(url)
     {var opt=[0,0];
      function _gc_(r)
       {var cod=r[2],msg=r[4];
        if(0 !== cod)if(200 !== cod){var p=new_pending(0);return p}
        return return$0(msg)}
      var
       content_type$0=0,
       sth=0,
       _gb_=[0,0],
       headers=opt?sth:0,
       match=task(0),
       w=match[2],
       res=match[1],
       req=create$1(0);
      req.open("GET",url.toString(),true$0);
      req.responseType = "";
      if(content_type$0)
       {var content_type=content_type$0[1];
        req.setRequestHeader("Content-type",content_type.toString())}
      iter
       (function(param)
         {var v=param[2],n=param[1];
          return req.setRequestHeader(n.toString(),v.toString())},
        headers);
      function headers$0(s)
       {function _gg_(v){return [0,caml_js_to_string(v)]}
        function _gh_(param){return 0}
        return case$0
                (req.getResponseHeader(caml_jsbytes_of_string(s)),_gh_,_gg_)}
      var st=[0,382334108];
      function do_check_headers(param)
       {if(382334108 === st[1])
         if(1)
          st[1] = 583419792;
         else
          {var exn=[0,Wrong_headers,[0,req.status,headers$0]];
           wakeup_general(_cn_,w,[1,exn]);
           st[1] = 479410653;
           req.abort()}
        return 479410653 !== st[1]?1:0}
      req.onreadystatechange
      =
      caml_js_wrap_callback
       (function(param)
         {var match=req.readyState;
          switch(match)
           {case 2:if(! onIE){do_check_headers(0);return 0}break;
            case 3:if(onIE){do_check_headers(0);return 0}break;
            case 4:
             var _ge_=do_check_headers(0);
             if(_ge_)
              {var
                code=req.status,
                _gd_=
                 function(param)
                  {var x=req.responseXML;
                   function _gf_(x){return [0,x]}
                   var match=case$0(x,function(param){return 0},_gf_);
                   if(match)
                    {var doc=match[1];
                     return doc.documentElement === no_handler?0:[0,doc]}
                   return 0},
                response=
                 [0,
                  url,
                  code,
                  headers$0,
                  caml_js_to_string(req.responseText),
                  _gd_];
               return wakeup(w,response)}
             return _ge_
            }
          return 0});
      function _ga_(upload){return 0}
      iter$2(req.upload,_ga_);
      req.send(no_handler);
      on_cancel(res,function(param){return req.abort()});
      return symbol_bind(res,_gc_)}
    function getfile(f)
     {try
       {var _f__=return$0(caml_read_file_content(f));return _f__}
      catch(_f$_)
       {_f$_ = caml_wrap_exception(_f$_);
        if(_f$_ === Not_found)return http_get(f);
        throw _f$_}}
    function load_image(src)
     {var img=createImg(document);
      function _f9_(param){return return$0(img)}
      var match=task(0),w=match[2],t=match[1];
      img.onload = handler(function(param){wakeup(w,0);return false$0});
      img.src = src;
      return symbol_bind(t,_f9_)}
    function create_canvas(w,h)
     {var d=window.document,c=createCanvas(d);
      c.width = w;
      c.height = h;
      return c}
    var debug_widget=createDiv(document);
    debug_widget.style.position = "absolute";
    debug_widget.style.bottom = "0";
    debug_widget.style.left = "0";
    debug_widget.style.lineHeight = "0.9em";
    var
     text_size_div=
      [246,
       function(_f8_)
        {var d=createDiv(document);
         d.style.visibility = "hidden";
         d.style.position = "absolute";
         d.style.whiteSpace = "nowrap";
         appendChild(document.body,d);
         return d}];
    function f(param)
     {function _f6_(param)
       {function _f7_(param){return "en"}
        return get(window.navigator.userLanguage,_f7_)}
      return get(window.navigator.language,_f6_).substring(0,2)}
    function _cy_(st)
     {var x=st.getItem("hyp_lang");return x == no_handler?f(0):x}
    var language=[0,case$1(window.localStorage,f,_cy_)];
    console.log(language[1]);
    function load_messages(param)
     {function _f5_(s){return return$0(json.parse(s.toString()))}
      return symbol_bind(getfile(_cz_),_f5_)}
    function local_messages(msgs){return option(msgs[language[1]])}
    function screen_transform(canvas)
     {var
       _f4_=opt_style(style.padding,0.),
       offset=opt_style(style.border,0.5) + _f4_,
       w=canvas.width,
       h=canvas.height,
       rx=w / 2.,
       ry=h / 2.,
       dx=w / 2.,
       dy=h / 2.,
       rx$0=max(5.,rx - offset),
       ry$0=max(5.,ry - offset);
      return [0,rx$0,ry$0,dx,dy]}
    function from_screen(canvas,x,y)
     {var
       match=screen_transform(canvas),
       dy=match[4],
       dx=match[3],
       ry=match[2],
       rx=match[1],
       z=[254,(x - dx) / rx,(y - dy) / ry],
       n=norm(z);
      return n <= 0.95?z:sdiv(z,n / 0.95)}
    function ellipse_arc(c,cx,cy,rx,ry,start,fin,clock_wise)
     {c.save();
      c.translate(cx,cy);
      c.scale(rx,ry);
      c.arc(0.,0.,1.,start,fin,clock_wise);
      return c.restore()}
    function symbol$0(x,f){return caml_call1(f,x)}
    function tree_vertice_count(n)
     {var l=n[2],_f3_=1;
      return fold_left
              (function(s,n){return s + tree_vertice_count(n) | 0},_f3_,l)}
    function tree_edge_count(n)
     {var l=n[2],_f2_=0;
      return fold_left
              (function(s,n){return (s + 1 | 0) + tree_edge_count(n) | 0},
               _f2_,
               l)}
    function randomize_tree(n)
     {var ch=n[2],_fZ_=ch.length - 1 - 1 | 0;
      if(! (_fZ_ < 0))
       {var i=_fZ_;
        for(;;)
         {var
           v=caml_check_bound(ch,i)[1 + i],
           j=math.random() * (i + 1 | 0) | 0,
           _f0_=caml_check_bound(ch,j)[1 + j];
          caml_check_bound(ch,i)[1 + i] = _f0_;
          caml_check_bound(ch,j)[1 + j] = v;
          var _f1_=i - 1 | 0;
          if(0 !== i){var i=_f1_;continue}
          break}}
      return iter$0(randomize_tree,ch)}
    var need_redraw=[0,0],redraw_funct=[0,function(param){return 0}];
    function perform_redraw(param)
     {need_redraw[1] = 0;return caml_call1(redraw_funct[1],0)}
    function schedule_redraw(param)
     {var _fX_=1 - need_redraw[1];
      return _fX_
              ?(need_redraw[1]
                =
                1,
                caml_call1
                 (requestAnimationFrame,
                  caml_js_wrap_callback
                   (function(param)
                     {var _fY_=need_redraw[1];return _fY_?perform_redraw(0):_fY_})))
              :_fX_}
    regexp(_cC_);
    regexp(_cD_);
    regexp(_cE_);
    function compute_text_node(info)
     {var
       font=opt_style(style.nodeFont,"20px sans-serif"),
       _fW_=caml_obj_tag(text_size_div),
       d$0=
        250 === _fW_
         ?text_size_div[1]
         :246 === _fW_?force_lazy_block(text_size_div):text_size_div;
      d$0.style.font = font;
      var txt=document.createTextNode(info.toString());
      appendChild(d$0,txt);
      var h=d$0.clientHeight,w=d$0.clientWidth;
      removeChild(d$0,txt);
      var
       w$0=w + 8 | 0,
       h$0=h + 8 | 0,
       canvas=create_canvas(w$0,h$0),
       c=canvas.getContext(d);
      c.fillStyle = opt_style(style.nodeBackgroundColor,tree_color);
      var r=min(4.,min(w$0,h$0) / 2.);
      c.beginPath();
      c.moveTo(0. + r,0.);
      c.arcTo(0. + w$0,0.,0. + w$0,0. + r,r);
      c.arcTo(0. + w$0,0. + h$0,0. + w$0 - r,0. + h$0,r);
      c.arcTo(0.,0. + h$0,0.,0. + h$0 - r,r);
      c.arcTo(0.,0.,0. + r,0.,r);
      c.fill();
      c.font = font;
      c.fillStyle = opt_style(style.nodeColor,"black");
      c.textAlign = "center";
      c.textBaseline = "middle";
      c.fillText(info.toString(),w$0 / 2.,h$0 / 2.);
      return canvas}
    function compute_text_nodes(node_names,nodes)
     {try
       {var _fQ_=assq(language[1],node_names)[1],names=_fQ_}
      catch(_fU_)
       {_fU_ = caml_wrap_exception(_fU_);
        if(_fU_ !== Not_found)throw _fU_;
        try
         {var _fP_=assq("en",node_names)[1],_fF_=_fP_}
        catch(_fV_)
         {_fV_ = caml_wrap_exception(_fV_);
          if(_fV_ !== Not_found)throw _fV_;
          var _fF_=create$0(0,11)}
        var names=_fF_}
      try
       {var _fO_=find$0(names,_cG_),_fG_=_fO_}
      catch(_fT_)
       {_fT_ = caml_wrap_exception(_fT_);
        if(_fT_ !== Not_found)throw _fT_;
        var _fG_=_cF_}
      document.title = _fG_.toString();
      var _fI_=nodes.length - 1 - 1 | 0,_fH_=0;
      if(! (_fI_ < 0))
       {var i=_fH_;
        for(;;)
         {var _fJ_=caml_check_bound(nodes,i)[1 + i],_fK_=_fJ_[2],_fL_=_fJ_[1];
          if(typeof _fK_ === "number")
           var switch$0=0;
          else
           if(4204112 === _fK_[1])
            {var match=_fK_[2],info=match[3],is_root=match[1];
             try
              {var _fN_=[0,compute_text_node(find$0(names,info))],canvas=_fN_}
             catch(_fS_)
              {_fS_ = caml_wrap_exception(_fS_);
               if(_fS_ !== Not_found)throw _fS_;
               var canvas=0,_fR_=_fS_}
             caml_check_bound(nodes,i)[1 + i]
             =
             [0,_fL_,[0,4204112,[0,is_root,canvas,info]]];
             var switch$0=1}
           else
            var switch$0=0;
          var _fM_=i + 1 | 0;
          if(_fI_ !== i){var i=_fM_;continue}
          break}}
      return 0}
    function weight_sum(l)
     {var _fE_=0.;
      return fold_left(function(s,n){var w=n[1];return s + w},_fE_,l)}
    function compute_weights(node)
     {var l=node[2];
      if(0 === l.length - 1)return [0,1.,[0]];
      var l$0=map(compute_weights,l);
      return [0,0.6 * weight_sum(l$0),l$0]}
    function load_tree(param)
     {function _eT_(s)
       {var
         info$0=json.parse(s.toString()),
         node_names=info$0[2],
         tree$0=info$0[1];
        randomize_tree(tree$0);
        function _eY_(param)
         {var about=param[3],tbl=param[2],lang=param[1],h=create$0(0,101);
          iter$0
           (function(param)
             {var
               v=param[2],
               k=param[1],
               data$0=caml_js_to_string(v),
               key$0=caml_js_to_string(k),
               i$1=indexfun(h,key$0),
               bucket=[0,key$0,data$0,caml_check_bound(h[2],i$1)[1 + i$1]];
              caml_check_bound(h[2],i$1)[1 + i$1] = bucket;
              h[1] = h[1] + 1 | 0;
              var _fD_=h[2].length - 1 << 1 < h[1]?1:0;
              if(_fD_)
               {var
                 odata=h[2],
                 osize=odata.length - 1,
                 nsize=osize * 2 | 0,
                 _fu_=nsize < max_array_length?1:0;
                if(_fu_)
                 {var
                   ndata=caml_make_vect(nsize,0),
                   ndata_tail=caml_make_vect(nsize,0),
                   _fs_=h.length - 1 < 4?1:0,
                   _ft_=_fs_ || (h[4] < 0?1:0),
                   inplace=1 - _ft_;
                  h[2] = ndata;
                  var _fw_=osize - 1 | 0,_fv_=0;
                  if(! (_fw_ < 0))
                   {var i$0=_fv_;
                    a:
                    for(;;)
                     {var
                       cell$1=caml_check_bound(odata,i$0)[1 + i$0],
                       cell=cell$1;
                      for(;;)
                       {if(cell)
                         {var
                           key=cell[1],
                           data=cell[2],
                           next=cell[3],
                           cell$0=inplace?cell:[0,key,data,0],
                           nidx=indexfun(h,key),
                           match=caml_check_bound(ndata_tail,nidx)[1 + nidx];
                          if(match)
                           match[3] = cell$0;
                          else
                           caml_check_bound(ndata,nidx)[1 + nidx] = cell$0;
                          caml_check_bound(ndata_tail,nidx)[1 + nidx] = cell$0;
                          var cell=next;
                          continue}
                        var _fC_=i$0 + 1 | 0;
                        if(_fw_ !== i$0){var i$0=_fC_;continue a}
                        break}
                      break}}
                  if(inplace)
                   {var _fy_=nsize - 1 | 0,_fx_=0;
                    if(! (_fy_ < 0))
                     {var i=_fx_;
                      for(;;)
                       {var match$0=caml_check_bound(ndata_tail,i)[1 + i];
                        if(match$0)match$0[3] = 0;
                        var _fB_=i + 1 | 0;
                        if(_fy_ !== i){var i=_fB_;continue}
                        break}}
                    var _fz_=0}
                  else
                   var _fz_=inplace;
                  var _fA_=_fz_}
                else
                 var _fA_=_fu_;
                return _fA_}
              return _fD_},
            tbl);
          return [0,lang,[0,h,about]]}
        var
         node_names$0=
          symbol$0
           (symbol$0(node_names,function(_fr_){return map(_eY_,_fr_)}),
            to_list);
        function compute(is_root,n)
         {var ch=n[2],info=n[1],info$0=caml_js_to_string(info);
          if(0 === caml_ml_string_length(info$0))
           var info$1=870530776;
          else
           if(124 === caml_string_get(info$0,0))
            var
             img=sub$0(info$0,1,caml_ml_string_length(info$0) - 1 | 0),
             info$1=
              [0,
               3654627,
               [0,
                [246,
                 function(_fo_)
                  {function _fp_(param)
                    {function _fq_(img){schedule_redraw(0);return return$0(img)}
                     return symbol_bind
                             (load_image(symbol(_cB_,symbol(img,_cA_)).toString()),_fq_)}
                   return symbol_bind(yield$0(0),_fp_)}],
                img]];
           else
            var info$1=[0,4204112,[0,is_root,0,info$0]];
          var ch$0=map(function(n){return compute(0,n)},ch);
          return [0,info$1,ch$0]}
        var
         root=compute(1,tree$0),
         node_count=tree_vertice_count(root),
         vertices=caml_make_vect(node_count,zero),
         edges=caml_make_vect(tree_edge_count(root),_cI_),
         nodes=caml_make_vect(node_count,[0,[0],870530776]),
         vi=[0,0],
         ei=[0,0],
         weights=compute_weights(root);
        function layout_rec
         (current,current_weights,is_root,transf,lineWidth,dir)
         {var
           ch=current[2],
           info=current[1],
           ch_weights=current_weights[2],
           i$0=vi[1];
          vi[1]++;
          var _fl_=transf[1];
          caml_check_bound(vertices,i$0)[1 + i$0] = _fl_;
          var l$0=ch.length - 1;
          if(0 === l$0)
           var ch$0=[0];
          else
           {var j=[0,0],total_weight=weight_sum(ch_weights);
            if(is_root)
             var
              match=caml_check_bound(ch_weights,0)[1],
              w=match[1],
              _fm_=(total_weight - w) / 2.;
            else
             var _fm_=0.;
            var
             w0=[0,_fm_],
             f=
              function(node,weights)
               {var
                 w=weights[1],
                 angle=Math.acos(dir[1]) * w / total_weight,
                 th=
                  Math.acos(dir[1])
                  *
                  ((w0[1] + w / 2.) / total_weight * 2. - 1.);
                j[1]++;
                w0[1] = w0[1] + w;
                var
                 a$0=
                  [254,
                   (Math.cos(angle) - 0.500000000000000111)
                   /
                   (1. - Math.cos(1.04719755119659763 + angle)),
                   0.],
                 dir$0=[254,0.500000000000000111,0.866025403784438597];
                if(0.25 < a$0[1])
                 var a$1=a$0,dir$1=dir$0;
                else
                 var
                  dir$2=
                   caml_call1
                    (transl(neg(a)),[254,Math.cos(angle),Math.sin(angle)]),
                  a$1=a,
                  dir$1=dir$2;
                var
                 u=compose([0,a$1,t],[0,zero,[254,Math.cos(th),Math.sin(th)]]),
                 ch=
                  layout_rec
                   (node,weights,0,compose(u,transf),lineWidth * 0.94,dir$1),
                 i=ch[1],
                 k=ei[1];
                ei[1]++;
                caml_check_bound(edges,k)[1 + k] = [0,i$0,i,lineWidth];
                return ch},
             l=ch.length - 1;
            if(ch_weights.length - 1 !== l)throw [0,Assert_failure,_cH_];
            if(0 === l)
             var _fn_=[0];
            else
             {var
               _ff_=caml_check_bound(ch_weights,0)[1],
               r=caml_make_vect(l,f(caml_check_bound(ch,0)[1],_ff_)),
               _fh_=l - 1 | 0,
               _fg_=1;
              if(! (_fh_ < 1))
               {var i=_fg_;
                for(;;)
                 {var
                   _fi_=caml_check_bound(ch_weights,i)[1 + i],
                   _fj_=f(caml_check_bound(ch,i)[1 + i],_fi_);
                  caml_check_bound(r,i)[1 + i] = _fj_;
                  var _fk_=i + 1 | 0;
                  if(_fh_ !== i){var i=_fk_;continue}
                  break}}
              var _fn_=r}
            var ch$0=_fn_}
          caml_check_bound(nodes,i$0)[1 + i$0] = [0,[0],info];
          return [0,i$0,ch$0]}
        var
         tree=layout_rec(root,weights,1,[0,zero,t],6.,_cJ_),
         frontiers=caml_make_vect(nodes.length - 1,[0,[0],[0]]);
        function status(i)
         {var match=caml_check_bound(nodes,i)[1 + i],info=match[2];
          return [0,i,870530776 !== info?1:0]}
        function compute_frontiers(node)
         {var l=node[2],i=node[1];
          iter$0(compute_frontiers,l);
          if(0 === l.length - 1)
           var _e$_=[0,status(i)],_fa_=[0,[0,status(i)],_e$_];
          else
           var
            _fb_=l.length - 1 - 1 | 0,
            _fc_=caml_check_bound(l,_fb_)[1 + _fb_][1],
            _fd_=caml_check_bound(frontiers,_fc_)[1 + _fc_][2],
            _fe_=caml_check_bound(l,0)[1][1],
            _fa_=[0,caml_check_bound(frontiers,_fe_)[1 + _fe_][1],_fd_];
          caml_check_bound(frontiers,i)[1 + i] = _fa_;
          return 0}
        compute_frontiers(tree);
        var neighboors=caml_make_vect(nodes.length - 1,[0]);
        function compute_neigh(node,parent,lft,rght)
         {var
           ch=node[2],
           i=node[1],
           children=map(function(n){return status(n[1])},ch),
           _eZ_=caml_array_concat([0,parent,[0,lft,[0,rght,[0,children,0]]]]);
          caml_check_bound(neighboors,i)[1 + i] = _eZ_;
          var
           is_root=0 === parent.length - 1?1:0,
           n=ch.length - 1,
           _e1_=n - 1 | 0,
           _e0_=0;
          if(! (_e1_ < 0))
           {var j=_e0_;
            for(;;)
             {if(0 < j)
               var
                _e2_=j - 1 | 0,
                _e3_=caml_check_bound(ch,_e2_)[1 + _e2_][1],
                lft$0=caml_check_bound(frontiers,_e3_)[1 + _e3_][2];
              else
               if(is_root)
                var
                 _e9_=n - 1 | 0,
                 _e__=caml_check_bound(ch,_e9_)[1 + _e9_][1],
                 lft$0=caml_check_bound(frontiers,_e__)[1 + _e__][2];
               else
                var lft$0=lft;
              if(j < (n - 1 | 0))
               var
                _e4_=j + 1 | 0,
                _e5_=caml_check_bound(ch,_e4_)[1 + _e4_][1],
                rght$0=caml_check_bound(frontiers,_e5_)[1 + _e5_][1];
              else
               if(is_root)
                var
                 _e8_=caml_check_bound(ch,0)[1][1],
                 rght$0=caml_check_bound(frontiers,_e8_)[1 + _e8_][1];
               else
                var rght$0=rght;
              var _e6_=[0,status(i)];
              compute_neigh(caml_check_bound(ch,j)[1 + j],_e6_,lft$0,rght$0);
              var _e7_=j + 1 | 0;
              if(_e1_ !== j){var j=_e7_;continue}
              break}}
          return 0}
        compute_neigh(tree,[0],[0],[0]);
        var _eV_=nodes.length - 1 - 1 | 0,_eU_=0;
        if(! (_eV_ < 0))
         {var i=_eU_;
          for(;;)
           {var
             match=caml_check_bound(nodes,i)[1 + i],
             info=match[2],
             _eW_=[0,caml_check_bound(neighboors,i)[1 + i],info];
            caml_check_bound(nodes,i)[1 + i] = _eW_;
            var _eX_=i + 1 | 0;
            if(_eV_ !== i){var i=_eX_;continue}
            break}}
        var
         boxes=
          [0,
           caml_make_vect(node_count,0.),
           caml_make_vect(node_count,0.),
           caml_make_vect(node_count,0.),
           caml_make_vect(node_count,0.)];
        compute_text_nodes(node_names$0,nodes);
        return return$0([0,[0,vertices,edges,nodes,boxes],node_names$0])}
      return symbol_bind(getfile(tree_url),_eT_)}
    function load_image_info(param)
     {function _eS_(s){return return$0(json.parse(s.toString()))}
      return symbol_bind(getfile(_cK_),_eS_)}
    function close_button(over)
     {var
       color=opt_style(style.buttonColor,"#888888"),
       canvas=create_canvas(32,32),
       c=canvas.getContext(d);
      c.save();
      c.lineWidth = 2.;
      c.strokeStyle = color;
      if(over){c.shadowBlur = 4.;c.shadowColor = color}
      c.beginPath();
      c.moveTo(6.82842712474619,6.82842712474619);
      c.lineTo(25.1715728752538084,25.1715728752538084);
      c.moveTo(6.82842712474619,25.1715728752538084);
      c.lineTo(25.1715728752538084,6.82842712474619);
      c.stroke();
      c.restore();
      var _eR_=over?_cL_:_cM_;
      canvas.className = _eR_.toString();
      canvas.style.position = "absolute";
      canvas.style.top = "0";
      canvas.style.right = "0";
      return canvas}
    function img_button(href,h,src)
     {function decoration(over)
       {var img=createImg(document);
        img.src = icon(src);
        var div=createDiv(document);
        div.style.position = "absolute";
        div.style.width = "38px";
        var _eO_=symbol(caml_new_string("" + max(38,h)),_cN_).toString();
        div.style.height = _eO_;
        div.style.margin = "2px";
        div.style.borderRadius = "2px";
        var
         extra=max(6,44 - h | 0),
         _eP_=
          symbol
            (caml_new_string("" + (extra / 2 | 0)),
             symbol
              (_cP_,
               symbol
                (caml_new_string("" + (extra - (extra / 2 | 0) | 0)),_cO_))).toString
           ();
        div.style.padding = _eP_;
        var _eQ_=over?_cQ_:_cS_;
        div.className = symbol(_cR_,_eQ_).toString();
        appendChild(div,img);
        return div}
      var button=createDiv(document);
      button.className = "button";
      button.style.width = "48px";
      var
       _eN_=
        symbol(caml_new_string("" + (8 + max(38,h) | 0)),_cT_).toString();
      button.style.height = _eN_;
      if(href)
       {var url=href[1],a=createA(document);
        a.target = "_blank";
        a.href = url;
        appendChild(button,a);
        var container=a}
      else
       var container=button;
      appendChild(container,decoration(1));
      appendChild(container,decoration(0));
      return button}
    function tooltip(txt)
     {var tooltip=createDiv(document);
      tooltip.style.position = "absolute";
      tooltip.className = "tooltip on";
      tooltip.innerHTML = txt;
      return tooltip}
    function show_on_click(button,txt)
     {var activated=[0,0];
      return button.onclick
             =
             handler
              (function(ev)
                {if(1 - activated[1])
                  {activated[1] = 1;
                   var c=[0,no_handler];
                   c[1]
                   =
                   addEventListener
                    (document,
                     click,
                     handler
                      (function(ev)
                        {function _eM_(param)
                          {iter$1(c[1],removeEventListener);
                           txt.className = "text on";
                           activated[1] = 0;
                           return return$0(0)}
                         symbol_bind(yield$0(0),_eM_);
                         return true$0}),
                     true$0);
                   txt.className = "text"}
                 stopPropagation(ev);
                 return false$0})}
    function show_image(all_messages,image_info,name,small_image)
     {return symbol_bind
              (image_info,
               function(image_info)
                {var
                  messages=local_messages(all_messages),
                  i=[0,-1],
                  name_js=name.toString(),
                  _eA_=image_info.length - 1 - 1 | 0,
                  _ez_=0;
                 if(! (_eA_ < 0))
                  {var j=_ez_;
                   for(;;)
                    {if(name_js === caml_check_bound(image_info,j)[1 + j][1])
                      i[1] = j;
                     var _eG_=j + 1 | 0;
                     if(_eA_ !== j){var j=_eG_;continue}
                     break}}
                 if(0 <= i[1])
                  {var
                    _eB_=i[1],
                    info=caml_check_bound(image_info,_eB_)[1 + _eB_];
                   console.log(name,i[1]);
                   var container=createDiv(document);
                   container.style.margin = "10px";
                   container.style.position = "absolute";
                   container.style.top = "0";
                   container.style.bottom = "0";
                   container.style.left = "0";
                   container.style.right = "0";
                   var img_container=createDiv(document);
                   img_container.style.position = "absolute";
                   img_container.style.top = "0";
                   img_container.style.bottom = "4em";
                   img_container.style.left = "38px";
                   img_container.style.right = "38px";
                   var
                    wrap=
                     function(elt)
                      {var w=createDiv(document);
                       w.style.position = "absolute";
                       w.style.top = "0";
                       w.style.bottom = "0";
                       w.style.left = "0";
                       w.style.right = "0";
                       w.style.margin = "auto";
                       var
                        _eL_=
                         symbol(caml_new_string("" + info[5]),_cU_).toString();
                       w.style.maxHeight = _eL_;
                       appendChild(w,elt);
                       return w},
                    img=createImg(document),
                    _eC_=caml_obj_tag(small_image),
                    _eD_=
                     250 === _eC_
                      ?small_image[1]
                      :246 === _eC_?force_lazy_block(small_image):small_image,
                    match=poll(_eD_);
                   if(match)
                    {var
                      small_image$0=match[1],
                      canvas=create_canvas(info[4],info[5]),
                      c=canvas.getContext(d);
                     c.drawImage(small_image$0,0.,0.,info[4],info[5]);
                     canvas.style.display = "block";
                     canvas.style.height = "auto";
                     canvas.style.width = "auto";
                     canvas.style.maxWidth = "100%";
                     canvas.style.maxHeight = "100%";
                     canvas.style.marginLeft = "auto";
                     canvas.style.marginRight = "auto";
                     var w=wrap(canvas);
                     appendChild(img_container,w);
                     img.onload
                     =
                     handler
                      (function(param)
                        {removeChild(img_container,w);return false$0})}
                   var _eE_=info[7];
                   if(_eE_)
                    var url=_eE_[1],url$0=url;
                   else
                    var url$0=symbol(_c3_,symbol(name,_c2_)).toString();
                   img.src = url$0;
                   img.width = info[4];
                   img.height = info[5];
                   img.style.display = "block";
                   img.style.height = "auto";
                   img.style.width = "auto";
                   img.style.maxWidth = "100%";
                   img.style.maxHeight = "100%";
                   img.style.marginLeft = "auto";
                   img.style.marginRight = "auto";
                   var
                    w$0=wrap(img),
                    handle_error=
                     function(param)
                      {removeChild(img_container,w$0);return false$0};
                   img.onerror = handler(handle_error);
                   img.onabort = handler(handle_error);
                   appendChild(img_container,w$0);
                   appendChild(container,img_container);
                   var legend=createDiv(document);
                   legend.innerHTML = info[3];
                   legend.onclick
                   =
                   handler(function(ev){stopPropagation(ev);return true$0});
                   legend.className = "text";
                   legend.style.position = "absolute";
                   legend.style.bottom = "0";
                   legend.style.marginRight = "auto";
                   legend.style.marginLeft = "auto";
                   appendChild(container,legend);
                   var background=createDiv(document);
                   appendChild(background,container);
                   background.className = "overlay";
                   background.style.width = "100%";
                   background.style.height = "100%";
                   background.style.position = "absolute";
                   background.style.top = "0";
                   background.style.left = "0";
                   background.style.zIndex = "1";
                   var button=createDiv(document);
                   button.className = "button";
                   button.style.position = "absolute";
                   button.style.top = "0";
                   button.style.right = "0";
                   button.style.cursor = "pointer";
                   appendChild(button,close_button(1));
                   appendChild(button,close_button(0));
                   var
                    tt=
                     tooltip
                      (opt_style
                        (messages.close,"Click anywhere to return to the tree"));
                   tt.style.right = "32px";
                   tt.style.top = "20px";
                   appendChild(button,tt);
                   appendChild(background,button);
                   var buttons=createDiv(document);
                   buttons.style.position = "absolute";
                   buttons.style.top = "0";
                   buttons.style.left = "0";
                   var
                    suffix=
                     language[1] === "en"
                      ?_cV_
                      :symbol(_c1_,caml_js_to_string(language[1])),
                    url$1=symbol(_cW_,symbol(caml_js_to_string(info[2]),suffix)),
                    commons=img_button([0,url$1.toString()],52,_cX_),
                    tt$0=
                     tooltip
                      (opt_style
                        (messages.wikimediaCommons,
                         "See image description on Wikimedia Commons"));
                   tt$0.style.left = "48px";
                   tt$0.style.top = "12px";
                   appendChild(commons,tt$0);
                   appendChild(buttons,commons);
                   var
                    wikipedia=img_button(0,34,_cY_),
                    txt=createDiv(document),
                    count=[0,0],
                    dl=createDl(document),
                    list=
                     function(title,lang)
                      {var ul=createUl(document),empty=[0,1],_eH_=info[6];
                       iter$0
                        (function(param)
                          {var
                            refer=param[3],
                            lang$0=param[2],
                            name=param[1],
                            _eJ_=lang$0 === lang?1:0;
                           if(_eJ_)
                            {empty[1] = 0;
                             var a=createA(document);
                             appendChild(a,document.createTextNode(name));
                             a.target = "_blank";
                             var
                              refer$0=caml_js_to_string(refer),
                              _eK_=
                               0 === caml_ml_string_length(refer$0)
                                ?caml_js_to_string(name)
                                :refer$0,
                              url=
                               symbol
                                (_c0_,symbol(caml_js_to_string(lang),symbol(_cZ_,_eK_)));
                             a.href = url.toString();
                             var li=createLi(document);
                             appendChild(li,a);
                             return appendChild(ul,li)}
                           return _eJ_},
                         _eH_);
                       var _eI_=1 - empty[1];
                       if(_eI_)
                        {count[1]++;
                         var dd=createDd(document);
                         appendChild(dd,document.createTextNode(title));
                         appendChild(dl,dd);
                         var dt=createDt(document);
                         appendChild(dt,ul);
                         return appendChild(dl,dt)}
                       return _eI_},
                    _eF_=language[1];
                   list(opt_style(messages.language,"In English"),_eF_);
                   if(language[1] !== "en")list("In English","en");
                   if(0 < count[1])
                    appendChild(txt,dl);
                   else
                    appendChild
                     (txt,
                      document.createTextNode
                       (opt_style(messages.noRef,"No reference found.")));
                   txt.className = "text on";
                   txt.style.position = "absolute";
                   txt.style.left = "48px";
                   txt.style.top = "62px";
                   txt.style.whiteSpace = "nowrap";
                   appendChild(wikipedia,txt);
                   appendChild(buttons,wikipedia);
                   txt.onclick
                   =
                   handler(function(ev){stopPropagation(ev);return true$0});
                   show_on_click(wikipedia,txt);
                   buttons.onclick
                   =
                   handler(function(ev){stopPropagation(ev);return true$0});
                   appendChild(background,buttons);
                   appendChild(document.body,background);
                   background.onclick
                   =
                   handler
                    (function(param)
                      {removeChild(document.body,background);return true$0})}
                 return return$0(0)})}
    var information_en=_c4_.toString();
    function show_information_page(messages,tree_i18n)
     {try
       {var _ew_=assq(language[1],tree_i18n)[2],info=_ew_}
      catch(_ex_)
       {_ex_ = caml_wrap_exception(_ex_);
        if(_ex_ !== Not_found)throw _ex_;
        try
         {var _ev_=assq("en",tree_i18n)[2],_eu_=_ev_}
        catch(_ey_)
         {_ey_ = caml_wrap_exception(_ey_);
          if(_ey_ !== Not_found)throw _ey_;
          var _eu_=information_en}
        var info=_eu_}
      var txt=createDiv(document);
      txt.className = "text";
      txt.style.width = "80%";
      txt.style.margin = "auto";
      txt.innerHTML = info;
      var cell=createDiv(document);
      cell.style.display = "table-cell";
      cell.style.verticalAlign = "middle";
      appendChild(cell,txt);
      var table=createDiv(document);
      table.style.width = "100%";
      table.style.height = "100%";
      table.style.display = "table";
      appendChild(table,cell);
      var overlay=createDiv(document);
      overlay.className = "overlay translucent";
      appendChild(overlay,table);
      var c=[0,no_handler];
      function close_info(param)
       {removeChild(document.body,overlay);
        return iter$1(c[1],removeEventListener)}
      c[1]
      =
      addEventListener
       (document,
        keydown,
        handler
         (function(e)
           {var match=e.keyCode;
            if(13 !== match)if(27 !== match)return true$0;
            close_info(0);
            return false$0}),
        true$0);
      var button=createButton(0,0,document);
      appendChild(button,document.createTextNode(opt_style(messages.ok,"OK")));
      button.onclick = handler(function(param){close_info(0);return false$0});
      var button_div=createDiv(document);
      button_div.style.textAlign = "center";
      button_div.style.margin = "2em auto";
      appendChild(button_div,button);
      appendChild(txt,button_div);
      return appendChild(document.body,overlay)}
    function unsupported_messages(param)
     {var txt=createDiv(document);
      txt.className = "text";
      txt.style.width = "80%";
      txt.style.margin = "auto";
      txt.innerHTML
      =
      'Unfortunately, this browser is not supported. Please try again with another browser, such as <a href="http://www.mozilla.org/firefox/">Firefox</a>, <a href="http://www.google.com/chrome/">Chrome</a> or <a href="http://www.opera.com/">Opera</a>.';
      var cell=createDiv(document);
      cell.style.display = "table-cell";
      cell.style.verticalAlign = "middle";
      appendChild(cell,txt);
      var table=createDiv(document);
      table.style.width = "100%";
      table.style.height = "100%";
      table.style.display = "table";
      appendChild(table,cell);
      var overlay=createDiv(document);
      overlay.className = "overlay";
      appendChild(overlay,table);
      return appendChild(document.body,overlay)}
    iter(function(src){load_image(icon(src));return 0},icons);
    var
     all_messages=load_messages(0),
     tree_info=load_tree(0),
     image_info=load_image_info(0);
    function _c5_(param)
     {var
       p=
        symbol_bind
         (tree_info,
          function(param)
           {var
             tree_i18n=param[2],
             match=param[1],
             boxes=match[4],
             nodes=match[3],
             edges=match[2],
             vertices=match[1];
            return symbol_bind
                    (all_messages,
                     function(all_messages)
                      {var page=document.documentElement;
                       page.style.overflow = "hidden";
                       page.style.height = "100%";
                       document.body.style.overflow = "hidden";
                       document.body.style.margin = "0px";
                       document.body.style.height = "100%";
                       var
                        w=page.clientWidth,
                        h=page.clientHeight,
                        canvas=create_canvas(w,h);
                       appendChild(document.body,canvas);
                       var
                        tr=[0,[0,zero,t]],
                        tr$0=[0,tr[1]],
                        l=vertices.length - 1,
                        vertices$0=0 === l?[0]:caml_array_sub(vertices,0,l);
                       redraw_funct[1]
                       =
                       function(param)
                        {need_redraw[1] = 0;
                         console.time("transform");
                         var
                          w$4=page.clientWidth,
                          h$3=page.clientHeight,
                          _em_=w$4 !== canvas.width?1:0,
                          _en_=_em_ || (h$3 !== canvas.height?1:0);
                         if(_en_){canvas.width = w$4;canvas.height = h$3}
                         var
                          _eo_=tr$0[1],
                          t$0=_eo_[2],
                          p=_eo_[1],
                          c=mul(conj(p),t$0),
                          _d3_=vertices.length - 1 - 1 | 0,
                          _d2_=0;
                         if(! (_d3_ < 0))
                          {var i=_d2_;
                           for(;;)
                            {var
                              _d4_=
                               transf(t$0,p,c,t,caml_check_bound(vertices,i)[1 + i]);
                             caml_check_bound(vertices$0,i)[1 + i] = _d4_;
                             var _d5_=i + 1 | 0;
                             if(_d3_ !== i){var i=_d5_;continue}
                             break}}
                         console.timeEnd("transform");
                         console.time("draw");
                         var
                          c$0=canvas.getContext(d),
                          transf$0=screen_transform(canvas),
                          dy$1=transf$0[4],
                          dx$1=transf$0[3],
                          ry$1=transf$0[2],
                          rx$1=transf$0[1];
                         c$0.clearRect(0.,0.,canvas.width,canvas.height);
                         var padding=opt_style(style.padding,0.);
                         c$0.beginPath();
                         ellipse_arc
                          (c$0,dx$1,dy$1,rx$1 + padding,ry$1 + padding,0.,7.,false$0);
                         function _d6_(color)
                          {c$0.fillStyle = color;return c$0.fill()}
                         iter$2(style.backgroundColor,_d6_);
                         function _d7_(color)
                          {c$0.lineWidth = 1.;
                           c$0.strokeStyle = color;
                           return c$0.stroke()}
                         iter$2(style.boundaryColor,_d7_);
                         c$0.lineWidth = 2.;
                         c$0.lineCap = "round";
                         c$0.strokeStyle = opt_style(style.treeColor,tree_color);
                         var
                          ry$2=transf$0[2],
                          rx$2=transf$0[1],
                          _d9_=edges.length - 1 - 1 | 0,
                          _d8_=0;
                         if(! (_d9_ < 0))
                          {var i$1=_d8_;
                           for(;;)
                            {var
                              match$2=caml_check_bound(edges,i$1)[1 + i$1],
                              w$3=match$2[3],
                              j=match$2[2],
                              j$0=match$2[1],
                              z1=caml_check_bound(vertices$0,j$0)[1 + j$0],
                              z2=caml_check_bound(vertices$0,j)[1 + j],
                              x=z1[1] - z2[1],
                              y=z1[2] - z2[2];
                             if(4. < rx$2 * ry$2 * (x * x + y * y))
                              {c$0.lineWidth = w$3;
                               var d$0=2. * (z1[1] * z2[2] - z1[2] * z2[1]);
                               if(Math.abs(d$0) < 0.05)
                                {var
                                  dy$0=transf$0[4],
                                  dx$0=transf$0[3],
                                  ry$0=transf$0[2],
                                  rx$0=transf$0[1];
                                 c$0.beginPath();
                                 c$0.moveTo(z1[1] * rx$0 + dx$0,z1[2] * ry$0 + dy$0);
                                 c$0.lineTo(z2[1] * rx$0 + dx$0,z2[2] * ry$0 + dy$0);
                                 c$0.stroke()}
                               else
                                {var
                                  n1=sq_norm(z1) + 1.,
                                  n2=sq_norm(z2) + 1.,
                                  z0=
                                   [254,
                                    (z2[2] * n1 - z1[2] * n2) / d$0,
                                    (z1[1] * n2 - z2[1] * n1) / d$0],
                                  dy=transf$0[4],
                                  dx=transf$0[3],
                                  ry=transf$0[2],
                                  rx=transf$0[1],
                                  rd=norm(sub$1(z1,z0)),
                                  start=Math.atan2(z1[2] - z0[2],z1[1] - z0[1]),
                                  fin=Math.atan2(z2[2] - z0[2],z2[1] - z0[1]);
                                 c$0.beginPath();
                                 var
                                  alpha=
                                   (fin - start + 6.28318530717958623) % 6.28318530717958623;
                                 if(rx == ry)
                                  c$0.arc
                                   (z0[1] * rx + dx,
                                    z0[2] * rx + dy,
                                    rd * rx,
                                    start,
                                    fin,
                                    ! ! (3.14159265358979312 < alpha?1:0));
                                 else
                                  ellipse_arc
                                   (c$0,
                                    z0[1] * rx + dx,
                                    z0[2] * ry + dy,
                                    rd * rx,
                                    rd * ry,
                                    start,
                                    fin,
                                    ! ! (3.14159265358979312 < alpha?1:0));
                                 c$0.stroke()}}
                             var _el_=i$1 + 1 | 0;
                             if(_d9_ !== i$1){var i$1=_el_;continue}
                             break}}
                         var
                          image_count=[0,0],
                          large_image_count=[0,0],
                          _d$_=nodes.length - 1 - 1 | 0,
                          _d__=0;
                         if(! (_d$_ < 0))
                          {var i$0=_d__;
                           for(;;)
                            {var
                              match=caml_check_bound(nodes,i$0)[1 + i$0],
                              img=match[2],
                              l=match[1];
                             if(typeof img === "number")
                              var switch$0=0;
                             else
                              {if(4204112 <= img[1])
                                {var _eb_=img[2],_ec_=_eb_[2];
                                 if(_ec_)
                                  {var
                                    txt=_ec_[1],
                                    circle=_eb_[1],
                                    z=caml_check_bound(vertices$0,i$0)[1 + i$0],
                                    _ed_=1.,
                                    r2=
                                     fold_left
                                      (function(z)
                                         {return function(r2,param)
                                           {var j=param[1];
                                            return min
                                                    (r2,sq_norm(sub$1(caml_check_bound(vertices$0,j)[1 + j],z)))}}
                                        (z),
                                       _ed_,
                                       l),
                                    w=txt.width,
                                    h=txt.height,
                                    img_d=Math.sqrt(w * w + h * h),
                                    rd$0=Math.sqrt(r2 * rx$2 * ry$2) * 0.5,
                                    rd$1=img_d / 2. < rd$0?img_d / 2.:rd$0,
                                    w$0=w / img_d * rd$1,
                                    h$0=h / img_d * rd$1;
                                   if(circle)
                                    {c$0.beginPath();
                                     c$0.fillStyle
                                     =
                                     opt_style(style.nodeBackgroundColor,tree_color);
                                     c$0.arc
                                      (z[1] * rx$2 + dx$1,
                                       z[2] * ry$2 + dy$1,
                                       Math.sqrt(w$0 * w$0 + h$0 * h$0),
                                       0.,
                                       7.,
                                       false$0);
                                     c$0.fill()}
                                   c$0.drawImage
                                    (txt,
                                     z[1] * rx$2 + dx$1 - w$0,
                                     z[2] * ry$2 + dy$1 - h$0,
                                     2. * w$0,
                                     2. * h$0);
                                   var switch$1=1}
                                 else
                                  var switch$0=0,switch$1=0}
                               else
                                {var match$0=img[2],img$0=match$0[1];
                                 caml_array_set(boxes[3],i$0,0.);
                                 var
                                  z$0=caml_check_bound(vertices$0,i$0)[1 + i$0],
                                  min_scale$0=
                                   function(z)
                                    {function min_scale(l,w,h,s)
                                      {var s$0=[0,s],_eq_=l.length - 1 - 1 | 0,_ep_=0;
                                       if(! (_eq_ < 0))
                                        {var i=_ep_;
                                         for(;;)
                                          {var
                                            match=caml_check_bound(l,i)[1 + i],
                                            large=match[2],
                                            j=match[1],
                                            _er_=z[1],
                                            sx=
                                             Math.abs(caml_check_bound(vertices$0,j)[1 + j][1] - _er_)
                                             /
                                             w,
                                            _es_=z[2],
                                            sy=
                                             Math.abs(caml_check_bound(vertices$0,j)[1 + j][2] - _es_)
                                             /
                                             h,
                                            s$1=sy < sx?sx:sy,
                                            s$2=large?s$1:1.9 * s$1;
                                           if(s$2 < s$0[1])s$0[1] = s$2;
                                           var _et_=i + 1 | 0;
                                           if(_eq_ !== i){var i=_et_;continue}
                                           break}}
                                       return s$0[1]}
                                     return min_scale},
                                  min_scale=min_scale$0(z$0);
                                 if(caml_obj_tag(img$0) !== 246)
                                  {var
                                    _ee_=caml_obj_tag(img$0),
                                    _ef_=
                                     250 === _ee_
                                      ?img$0[1]
                                      :246 === _ee_?force_lazy_block(img$0):img$0,
                                    match$1=poll(_ef_);
                                   if(match$1)
                                    {var
                                      img$1=match$1[1],
                                      w$1=img$1.width,
                                      h$1=img$1.height,
                                      s=min_scale(l,1.,1.,1.),
                                      scale=s / max(w$1 / rx$2,h$1 / ry$2),
                                      w$2=w$1 * scale / 2.,
                                      h$2=h$1 * scale / 2.,
                                      _eg_=1. < w$2?1:0,
                                      _eh_=_eg_?1. < h$2?1:0:_eg_;
                                     if(_eh_)
                                      {var x$0=z$0[1] * rx$2 + dx$1,y$0=z$0[2] * ry$2 + dy$1;
                                       c$0.drawImage(img$1,x$0 - w$2,y$0 - h$2,2. * w$2,2. * h$2);
                                       caml_array_set(boxes[1],i$0,x$0);
                                       caml_array_set(boxes[2],i$0,y$0);
                                       caml_array_set(boxes[3],i$0,w$2);
                                       caml_array_set(boxes[4],i$0,h$2);
                                       image_count[1]++;
                                       var _ei_=2. <= w$2?1:0,_ej_=_ei_?2. <= h$2?1:0:_ei_;
                                       if(_ej_)large_image_count[1]++}}}
                                 else
                                  {var s$0=min_scale(l,1.,1.,1.);
                                   if(1. < s$0 * max(rx$2,ry$2))
                                    {var _ek_=caml_obj_tag(img$0);
                                     if(250 !== _ek_)if(246 === _ek_)force_lazy_block(img$0)}}
                                 var switch$1=1}
                               if(switch$1)var switch$0=1}
                             var _ea_=i$0 + 1 | 0;
                             if(_d$_ !== i$0){var i$0=_ea_;continue}
                             break}}
                         console.timeEnd("draw");
                         return console.log(image_count[1],large_image_count[1])};
                       perform_redraw(0);
                       window.onresize
                       =
                       handler
                        (function(param)
                          {var
                            page=document.documentElement,
                            w=page.clientWidth,
                            h=page.clientHeight,
                            _d0_=w !== canvas.width?1:0,
                            _d1_=_d0_ || (h !== canvas.height?1:0);
                           if(_d1_)schedule_redraw(0);
                           return true$0});
                       function find_box(boxes,x,y)
                        {var p=[0,-1],_dV_=boxes[3].length - 1 - 1 | 0,_dU_=0;
                         if(! (_dV_ < 0))
                          {var i=_dU_;
                           for(;;)
                            {var _dW_=0. < boxes[3][1 + i]?1:0;
                             if(_dW_)
                              var
                               _dX_=Math.abs(x - boxes[1][1 + i]) < boxes[3][1 + i]?1:0,
                               _dY_=
                                _dX_
                                 ?Math.abs(y - boxes[2][1 + i]) < boxes[4][1 + i]?1:0
                                 :_dX_;
                             else
                              var _dY_=_dW_;
                             if(_dY_)p[1] = i;
                             var _dZ_=i + 1 | 0;
                             if(_dV_ !== i){var i=_dZ_;continue}
                             break}}
                         return p[1]}
                       var on_image=[0,0];
                       function update_cursor(x,y)
                        {var i=find_box(boxes,x,y);
                         if(-1 === i)
                          {var
                            _dQ_=on_image[1],
                            _dR_=_dQ_?(canvas.style.cursor = "",on_image[1] = 0,0):_dQ_;
                           return _dR_}
                         var
                          _dS_=1 - on_image[1],
                          _dT_=
                           _dS_
                            ?(canvas.style.cursor = "pointer",on_image[1] = 1,0)
                            :_dS_;
                         return _dT_}
                       canvas.onmousemove
                       =
                       handler
                        (function(ev)
                          {update_cursor(ev.clientX,ev.clientY);return false$0});
                       canvas.onmousedown
                       =
                       handler
                        (function(ev)
                          {var
                            x0=ev.clientX,
                            y0=ev.clientY,
                            started=[0,0],
                            c1=
                             addEventListener
                              (document,
                               mousemove,
                               handler
                                (function(ev)
                                  {var x1=ev.clientX,y1=ev.clientY,_dN_=1 - started[1];
                                   if(_dN_)
                                    var
                                     _dO_=4 < abs(x1 - x0 | 0)?1:0,
                                     _dP_=_dO_ || (4 < abs(y1 - y0 | 0)?1:0);
                                   else
                                    var _dP_=_dN_;
                                   if(_dP_){started[1] = 1;canvas.style.cursor = "move"}
                                   if(started[1])
                                    {var
                                      z0=from_screen(canvas,x0,y0),
                                      z1=from_screen(canvas,x1,y1),
                                      match=tr[1],
                                      p=match[1],
                                      z0$0=caml_call1(transl(neg(p)),z0),
                                      p$0=compute_translation(z0$0,z1);
                                     tr$0[1] = [0,p$0,t];
                                     schedule_redraw(0)}
                                   stopPropagation(ev);
                                   return true$0}),
                               true$0),
                            c2=[0,no_handler];
                           c2[1]
                           =
                           addEventListener
                            (document,
                             mouseup,
                             handler
                              (function(ev)
                                {removeEventListener(c1);
                                 iter$1(c2[1],removeEventListener);
                                 if(started[1])
                                  {canvas.style.cursor = "";
                                   var y=ev.clientY,x=ev.clientX;
                                   tr[1] = tr$0[1];
                                   on_image[1] = 0;
                                   update_cursor(x,y)}
                                 else
                                  {var
                                    y$0=ev.clientY,
                                    x$0=ev.clientX,
                                    i=find_box(boxes,x$0,y$0);
                                   if(0 < i)
                                    {var _dM_=caml_check_bound(nodes,i)[1 + i][2];
                                     if(typeof _dM_ === "number")
                                      var switch$1=1;
                                     else
                                      if(3654627 === _dM_[1])
                                       {var match=_dM_[2],name=match[2],img=match[1];
                                        show_image(all_messages,image_info,name,img);
                                        var switch$0=1,switch$1=0}
                                      else
                                       var switch$1=1;
                                     if(switch$1)var switch$0=0}
                                   else
                                    var switch$0=0}
                                 return true$0}),
                             true$0);
                           return true$0});
                       addEventListener
                        (canvas,
                         touchstart,
                         handler
                          (function(ev)
                            {function _do_(touch)
                              {var
                                id=touch.identifier,
                                x0=touch.clientX,
                                y0=touch.clientY,
                                started=[0,0],
                                c1=
                                 addEventListener
                                  (document,
                                   touchmove,
                                   handler
                                    (function(ev)
                                      {var _dD_=ev.changedTouches.length - 1 | 0,_dC_=0;
                                       if(! (_dD_ < 0))
                                        {var i=_dC_;
                                         for(;;)
                                          {var
                                            _dE_=
                                             function(touch)
                                              {var _dG_=touch.identifier === id?1:0;
                                               if(_dG_)
                                                {var x1=touch.clientX,y1=touch.clientY,_dH_=1 - started[1];
                                                 if(_dH_)
                                                  var
                                                   _dI_=4 < abs(x1 - x0 | 0)?1:0,
                                                   _dJ_=_dI_ || (4 < abs(y1 - y0 | 0)?1:0);
                                                 else
                                                  var _dJ_=_dH_;
                                                 if(_dJ_){started[1] = 1;canvas.style.cursor = "move"}
                                                 var _dK_=started[1];
                                                 if(_dK_)
                                                  {console.time("transform");
                                                   var
                                                    z0=from_screen(canvas,x0,y0),
                                                    z1=from_screen(canvas,x1,y1),
                                                    match=tr[1],
                                                    p=match[1],
                                                    z0$0=caml_call1(transl(neg(p)),z0),
                                                    p$0=compute_translation(z0$0,z1);
                                                   tr$0[1] = [0,p$0,t];
                                                   return schedule_redraw(0)}
                                                 var _dL_=_dK_}
                                               else
                                                var _dL_=_dG_;
                                               return _dL_};
                                           iter$2(ev.changedTouches.item(i),_dE_);
                                           var _dF_=i + 1 | 0;
                                           if(_dD_ !== i){var i=_dF_;continue}
                                           break}}
                                       stopPropagation(ev);
                                       return false$0}),
                                   true$0),
                                c2=[0,no_handler],
                                c3=[0,no_handler];
                               c2[1]
                               =
                               addEventListener
                                (document,
                                 touchend,
                                 handler
                                  (function(ev)
                                    {var _dv_=ev.changedTouches.length - 1 | 0,_du_=0;
                                     if(! (_dv_ < 0))
                                      {var i=_du_;
                                       for(;;)
                                        {var
                                          _dw_=
                                           function(touch)
                                            {var _dy_=touch.identifier === id?1:0;
                                             if(_dy_)
                                              {var x=touch.clientX,y=touch.clientY;
                                               removeEventListener(c1);
                                               iter$1(c2[1],removeEventListener);
                                               iter$1(c3[1],removeEventListener);
                                               if(started[1])
                                                {canvas.style.cursor = "";tr[1] = tr$0[1];return 0}
                                               var i=find_box(boxes,x,y),_dz_=0 < i?1:0;
                                               if(_dz_)
                                                {var _dA_=caml_check_bound(nodes,i)[1 + i][2];
                                                 if(typeof _dA_ !== "number")
                                                  if(3654627 === _dA_[1])
                                                   {var match=_dA_[2],name=match[2],img=match[1];
                                                    show_image(all_messages,image_info,name,img);
                                                    return 0}
                                                 var _dB_=0}
                                               else
                                                var _dB_=_dz_;
                                               return _dB_}
                                             return _dy_};
                                         iter$2(ev.changedTouches.item(i),_dw_);
                                         var _dx_=i + 1 | 0;
                                         if(_dv_ !== i){var i=_dx_;continue}
                                         break}}
                                     return true$0}),
                                 true$0);
                               c3[1]
                               =
                               addEventListener
                                (document,
                                 touchend,
                                 handler
                                  (function(ev)
                                    {var _dq_=ev.changedTouches.length - 1 | 0,_dp_=0;
                                     if(! (_dq_ < 0))
                                      {var i=_dp_;
                                       for(;;)
                                        {var
                                          _dr_=
                                           function(touch)
                                            {var _dt_=touch.identifier === id?1:0;
                                             if(_dt_)
                                              {removeEventListener(c1);
                                               iter$1(c2[1],removeEventListener);
                                               iter$1(c3[1],removeEventListener);
                                               if(started[1])canvas.style.cursor = "";
                                               tr[1] = tr$0[1];
                                               return 0}
                                             return _dt_};
                                         iter$2(ev.changedTouches.item(i),_dr_);
                                         var _ds_=i + 1 | 0;
                                         if(_dq_ !== i){var i=_ds_;continue}
                                         break}}
                                     return false$0}),
                                 true$0);
                               return 0}
                             iter$2(ev.changedTouches.item(0),_do_);
                             return false$0}),
                         true$0);
                       function handle_key_event(ev)
                        {var match=ev.keyCode,switcher=match - 37 | 0;
                         if(3 < switcher >>> 0)return true$0;
                         switch(switcher)
                          {case 0:
                            var
                             match$0=tr[1],
                             p=match$0[1],
                             z0$3=caml_call1(transl(neg(p)),z0),
                             p$0=compute_translation(z0$3,z1);
                            tr$0[1] = [0,p$0,t];
                            tr[1] = tr$0[1];
                            schedule_redraw(0);
                            return false$0;
                           case 1:
                            var
                             match$1=tr[1],
                             p$1=match$1[1],
                             z0$4=caml_call1(transl(neg(p$1)),z0$0),
                             p$2=compute_translation(z0$4,z1$0);
                            tr$0[1] = [0,p$2,t];
                            tr[1] = tr$0[1];
                            schedule_redraw(0);
                            return false$0;
                           case 2:
                            var
                             match$2=tr[1],
                             p$3=match$2[1],
                             z0$5=caml_call1(transl(neg(p$3)),z0$1),
                             p$4=compute_translation(z0$5,z1$1);
                            tr$0[1] = [0,p$4,t];
                            tr[1] = tr$0[1];
                            schedule_redraw(0);
                            return false$0;
                           default:
                            var
                             match$3=tr[1],
                             p$5=match$3[1],
                             z0$6=caml_call1(transl(neg(p$5)),z0$2),
                             p$6=compute_translation(z0$6,z1$2);
                            tr$0[1] = [0,p$6,t];
                            tr[1] = tr$0[1];
                            schedule_redraw(0);
                            return false$0}}
                       addEventListener
                        (document,keydown,handler(handle_key_event),true$0);
                       var prev_buttons=[0,0];
                       function make_buttons(param)
                        {var _dm_=prev_buttons[1];
                         if(_dm_)
                          {var buttons=_dm_[1];removeChild(document.body,buttons)}
                         var buttons$0=createDiv(document);
                         buttons$0.style.position = "absolute";
                         buttons$0.style.right = "0";
                         buttons$0.style.bottom = "0";
                         var
                          messages=local_messages(all_messages),
                          info=img_button(0,38,_c6_);
                         info.style.position = "absolute";
                         info.style.bottom = "2px";
                         info.style.right = "0";
                         info.style.cursor = "pointer";
                         info.onclick
                         =
                         handler
                          (function(param)
                            {show_information_page(messages,tree_i18n);return false$0});
                         var tt=tooltip(opt_style(messages.info,"Information"));
                         tt.style.right = "36px";
                         tt.style.bottom = "36px";
                         appendChild(info,tt);
                         appendChild(buttons$0,info);
                         var lang=img_button(0,38,_c7_);
                         lang.style.position = "absolute";
                         lang.style.bottom = "2px";
                         lang.style.right = "48px";
                         lang.style.cursor = "pointer";
                         var
                          txt=createDiv(document),
                          dl=createDl(document),
                          ul=createUl(document);
                         iter
                          (function(param)
                            {var id=param[2],name=param[1],a=createA(document);
                             appendChild(a,document.createTextNode(name.toString()));
                             a.href = "#";
                             a.onclick
                             =
                             handler
                              (function(param)
                                {var lang=id.toString();
                                 function _dn_(st){return st.setItem("hyp_lang",lang)}
                                 iter$2(window.localStorage,_dn_);
                                 language[1] = lang;
                                 make_buttons(0);
                                 compute_text_nodes(tree_i18n,nodes);
                                 schedule_redraw(0);
                                 return false$0});
                             var li=createLi(document);
                             appendChild(li,a);
                             return appendChild(ul,li)},
                           languages);
                         var dd=createDd(document);
                         appendChild
                          (dd,
                           document.createTextNode
                            (opt_style(messages.languages,"Languages")));
                         appendChild(dl,dd);
                         var dt=createDt(document);
                         appendChild(dt,ul);
                         appendChild(dl,dt);
                         appendChild(txt,dl);
                         txt.className = "text on";
                         txt.style.position = "absolute";
                         txt.style.right = "0px";
                         txt.style.bottom = "46px";
                         txt.style.whiteSpace = "nowrap";
                         appendChild(lang,txt);
                         show_on_click(lang,txt);
                         appendChild(buttons$0,lang);
                         var recenter=img_button(0,38,_c8_);
                         recenter.style.position = "absolute";
                         recenter.style.bottom = "2px";
                         recenter.style.right = "96px";
                         recenter.style.cursor = "pointer";
                         recenter.onclick
                         =
                         handler
                          (function(param)
                            {tr$0[1] = [0,zero,t];
                             tr[1] = tr$0[1];
                             schedule_redraw(0);
                             return false$0});
                         var tt$0=tooltip(opt_style(messages.recenter,"Recenter"));
                         tt$0.style.right = "36px";
                         tt$0.style.bottom = "36px";
                         appendChild(recenter,tt$0);
                         appendChild(buttons$0,recenter);
                         appendChild(document.body,buttons$0);
                         prev_buttons[1] = [0,buttons$0];
                         return 0}
                       make_buttons(0);
                       var img=createImg(document);
                       img.src = icon(_c9_);
                       var a=createA(document);
                       a.target = "_blank";
                       a.href = "http://ocsigen.org/";
                       appendChild(a,img);
                       var logo=createDiv(document);
                       logo.style.position = "absolute";
                       logo.style.left = "0";
                       logo.style.bottom = "0";
                       appendChild(logo,a);
                       appendChild(document.body,logo);
                       return return$0(0)})}),
       _dl_=underlying(p)[1];
      switch(_dl_[0])
       {case 1:var exn=_dl_[1];throw exn;
        case 2:
         var
          p_callbacks=_dl_[1],
          callback=
           function(result)
            {if(1 === result[0])
              {var exn=result[1];
               return caml_call1(async_exception_hook[1],exn)}
             return 0};
         add_implicitly_removed_callback(p_callbacks,callback);
         break
        }
      return false$0}
    function start(param)
     {try
       {createCanvas(window.document);var _dj_=_c5_(0);return _dj_}
      catch(_dk_)
       {_dk_ = caml_wrap_exception(_dk_);
        if(_dk_ === Canvas_not_available)
         {unsupported_messages(0);return false$0}
        throw _dk_}}
    window.onload = handler(start);
    do_at_exit(0);
    return}
  (function(){return this}()));

//# sourceMappingURL=hypertree.map
